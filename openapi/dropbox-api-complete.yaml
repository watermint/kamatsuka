openapi: 3.0.3
info:
  title: Dropbox API
  description: Dropbox API v2 - Combined from multiple Stone definitions
  version: '2.0'
  contact:
    name: Dropbox API
    url: https://www.dropbox.com/developers
servers:
- url: https://api.dropboxapi.com/2
  description: Dropbox API v2
paths:
  /users/get_account:
    post:
      summary: Get information about a user's account.
      operationId: get_account
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicAccount'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountError'
  /users/get_current_account:
    post:
      summary: Get information about the current user's account.
      operationId: get_current_account
      security:
      - oauth2:
        - account_info.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullAccount'
  /users/get_space_usage:
    post:
      summary: Get the space usage information for the current user's account.
      operationId: get_space_usage
      security:
      - oauth2:
        - account_info.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceUsage'
  /users/get_account_batch:
    post:
      summary: |-
        Get information about multiple user accounts.  At most 300 accounts may be queried
            per request.
      operationId: get_account_batch
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountBatchError'
  /users/features/get_values:
    post:
      summary: Get a list of feature values that may be configured for the current account.
      operationId: features/get_values
      security:
      - oauth2:
        - account_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFeaturesGetValuesBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeaturesGetValuesBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFeaturesGetValuesBatchError'
  /team/devices/list_member_devices:
    post:
      summary: List all device sessions of a team's member.
      operationId: devices/list_member_devices
      security:
      - oauth2:
        - sessions.list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMemberDevicesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberDevicesResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberDevicesError'
  /team/devices/list_members_devices:
    post:
      summary: |-
        List all device sessions of a team.

            Permission : Team member file access.
      operationId: devices/list_members_devices
      security:
      - oauth2:
        - sessions.list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTeamDevicesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamDevicesResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamDevicesError'
  /team/devices/revoke_device_session:
    post:
      summary: Revoke a device session of a team's member.
      operationId: devices/revoke_device_session
      security:
      - oauth2:
        - sessions.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeDeviceSessionArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeDeviceSessionError'
  /team/devices/revoke_device_session_batch:
    post:
      summary: Revoke a list of device sessions of team members.
      operationId: devices/revoke_device_session_batch
      security:
      - oauth2:
        - sessions.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeDeviceSessionBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeDeviceSessionBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeDeviceSessionBatchError'
  /team/groups/list:
    post:
      summary: |-
        Lists groups on a team.

            Permission : Team Information.
      operationId: groups/list
      security:
      - oauth2:
        - groups.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResult'
  /team/groups/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`groups/list`, use this to paginate
            through all groups.

            Permission : Team Information.
      operationId: groups/list/continue
      security:
      - oauth2:
        - groups.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListContinueError'
  /team/groups/get_info:
    post:
      summary: |-
        Retrieves information about one or more groups. Note that the optional field
             :field:`GroupFullInfo.members` is not returned for system-managed groups.

            Permission : Team Information.
      operationId: groups/get_info
      security:
      - oauth2:
        - groups.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsSelector'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetInfoResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetInfoError'
  /team/groups/create:
    post:
      summary: |-
        Creates a new, empty group, with a requested name.

            Permission : Team member management.
      operationId: groups/create
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFullInfo'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupCreateError'
  /team/groups/delete:
    post:
      summary: |-
        Deletes a group.

            The group is deleted immediately. However the revoking of group-owned resources
            may take additional time.
            Use the :route:`groups/job_status/get` to determine whether this process has completed.

            Permission : Team member management.
      operationId: groups/delete
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupSelector'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncLaunchEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDeleteError'
  /team/groups/update:
    post:
      summary: |-
        Updates a group's name and/or external ID.

            Permission : Team member management.
      operationId: groups/update
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFullInfo'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUpdateError'
  /team/groups/members/add:
    post:
      summary: |-
        Adds members to a group.

            The members are added immediately. However the granting of group-owned resources
            may take additional time.
            Use the :route:`groups/job_status/get` to determine whether this process has completed.

            Permission : Team member management.
      operationId: groups/members/add
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembersAddArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembersChangeResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembersAddError'
  /team/groups/members/remove:
    post:
      summary: |-
        Removes members from a group.

            The members are removed immediately. However the revoking of group-owned resources
            may take additional time.
            Use the :route:`groups/job_status/get` to determine whether this process has completed.

            This method permits removing the only owner of a group, even in cases where this is not
            possible via the web client.

            Permission : Team member management.
      operationId: groups/members/remove
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembersRemoveArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembersChangeResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembersRemoveError'
  /team/groups/members/set_access_type:
    post:
      summary: |-
        Sets a member's access type in a group.

            Permission : Team member management.
      operationId: groups/members/set_access_type
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupMembersSetAccessTypeArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetInfoResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberSetAccessTypeError'
  /team/groups/members/list:
    post:
      summary: |-
        Lists members of a group.

            Permission : Team Information.
      operationId: groups/members/list
      security:
      - oauth2:
        - groups.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsMembersListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsMembersListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSelectorError'
  /team/groups/members/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`groups/members/list`, use this to paginate
            through all members of the group.

            Permission : Team information.
      operationId: groups/members/list/continue
      security:
      - oauth2:
        - groups.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsMembersListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsMembersListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsMembersListContinueError'
  /team/groups/job_status/get:
    post:
      summary: |-
        Once an async_job_id is returned from :route:`groups/delete`,
            :route:`groups/members/add` , or :route:`groups/members/remove`
            use this method to poll the status of granting/revoking
            group members' access to group-owned resources.

            Permission : Team member management.
      operationId: groups/job_status/get
      security:
      - oauth2:
        - groups.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsPollError'
  /check/user:
    post:
      summary: |-
        This endpoint performs User Authentication, validating the supplied access token,
            and returns the supplied string, to allow you to test your code and connection to the
            Dropbox API. It has no other effect. If you receive an HTTP 200 response with the supplied
            query, it indicates at least part of the Dropbox API infrastructure is working and that the
            access token is valid.
      operationId: user
      security:
      - oauth2:
        - account_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EchoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResult'
  /check/app:
    post:
      summary: |-
        This endpoint performs App Authentication, validating the supplied app key and secret,
            and returns the supplied string, to allow you to test your code and connection to the
            Dropbox API. It has no other effect. If you receive an HTTP 200 response with the supplied
            query, it indicates at least part of the Dropbox API infrastructure is working and that the
            app key and secret valid.
      operationId: app
      security:
      - oauth2:
        - account_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EchoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResult'
  /openid/userinfo:
    post:
      summary: |-
        This route is used for refreshing the info that is found in the id_token during the OIDC flow.
            This route doesn't require any arguments and will use the scopes approved for the given access token.
      operationId: userinfo
      security:
      - oauth2:
        - openid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoError'
  /sharing/add_file_member:
    post:
      summary: Adds specified members to a file.
      operationId: add_file_member
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFileMemberArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(FileMemberActionResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFileMemberError'
  /sharing/update_file_member:
    post:
      summary: Changes a member's access on a shared file.
      operationId: update_file_member
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileMemberArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberAccessLevelResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMemberActionError'
  /sharing/get_file_metadata:
    post:
      summary: Returns shared file metadata.
      operationId: get_file_metadata
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFileMetadataArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileMetadataError'
  /sharing/get_file_metadata/batch:
    post:
      summary: Returns shared file metadata.
      operationId: get_file_metadata/batch
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFileMetadataBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(GetFileMetadataBatchResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingUserError'
  /sharing/list_file_members:
    post:
      summary: |-
        Use to obtain the members who have been invited to a file, both inherited
            and uninherited members.
      operationId: list_file_members
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFileMembersArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFileMembers'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileMembersError'
  /sharing/list_file_members/batch:
    post:
      summary: |-
        Get members of multiple files at once. The arguments
            to this route are more limited, and the limit on query result size per file
            is more strict. To customize the results more, use the individual file
            endpoint.

            Inherited users and groups are not included in the result, and permissions are not
            returned for this endpoint.
      operationId: list_file_members/batch
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFileMembersBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(ListFileMembersBatchResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingUserError'
  /sharing/list_file_members/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`list_file_members` or
            :route:`list_file_members/batch`, use this to paginate through all shared
            file members.
      operationId: list_file_members/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFileMembersContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFileMembers'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileMembersContinueError'
  /sharing/list_received_files:
    post:
      summary: |-
        Returns a list of all files shared with current user.

             Does not include files the user has received via shared folders, and does
             not include unclaimed invitations.
      operationId: list_received_files
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFilesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingUserError'
  /sharing/list_received_files/continue:
    post:
      summary: Get more results with a cursor from :route:`list_received_files`.
      operationId: list_received_files/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFilesContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesContinueError'
  /sharing/remove_file_member_2:
    post:
      summary: Removes a specified member from the file.
      operationId: remove_file_member_2
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFileMemberArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMemberRemoveActionResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFileMemberError'
  /sharing/relinquish_file_membership:
    post:
      summary: |-
        The current user relinquishes their membership in the designated file.
            Note that the current user may still have inherited access to this file
            through the parent folder.
      operationId: relinquish_file_membership
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelinquishFileMembershipArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelinquishFileMembershipError'
  /sharing/unshare_file:
    post:
      summary: Remove all members from this file. Does not remove inherited members.
      operationId: unshare_file
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnshareFileArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnshareFileError'
  /team/linked_apps/list_member_linked_apps:
    post:
      summary: |-
        List all linked applications of the team member.

            Note, this endpoint does not list any team-linked applications.
      operationId: linked_apps/list_member_linked_apps
      security:
      - oauth2:
        - sessions.list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMemberAppsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberAppsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMemberAppsError'
  /team/linked_apps/list_members_linked_apps:
    post:
      summary: |-
        List all applications linked to the team members' accounts.

            Note, this endpoint doesn't list any team-linked applications.
      operationId: linked_apps/list_members_linked_apps
      security:
      - oauth2:
        - sessions.list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTeamAppsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamAppsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamAppsError'
  /team/linked_apps/revoke_linked_app:
    post:
      summary: Revoke a linked application of the team member.
      operationId: linked_apps/revoke_linked_app
      security:
      - oauth2:
        - sessions.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeLinkedApiAppArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeLinkedAppError'
  /team/linked_apps/revoke_linked_app_batch:
    post:
      summary: Revoke a list of linked applications of the team members.
      operationId: linked_apps/revoke_linked_app_batch
      security:
      - oauth2:
        - sessions.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeLinkedApiAppBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeLinkedAppBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeLinkedAppBatchError'
  /team_log/get_events:
    post:
      summary: |-
        Retrieves team events. If the result's :field:`GetTeamEventsResult.has_more` field is
            :val:`true`, call :route:`get_events/continue` with the returned cursor to retrieve
            more entries. If end_time is not specified in your request, you may use the returned cursor to
            poll :route:`get_events/continue` for new events.

            Many attributes note 'may be missing due to historical data gap'.

            Note that the file_operations category and & analogous paper events are not available on all
            Dropbox Business :link:`plans /business/plans-comparison`.
            Use :link:`features/get_values /developers/documentation/http/teams#team-features-get_values`
            to check for this feature.

            Permission : Team Auditing.
      operationId: get_events
      security:
      - oauth2:
        - events.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTeamEventsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamEventsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamEventsError'
  /team_log/get_events/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`get_events`, use this to paginate through all events.

            Permission : Team Auditing.
      operationId: get_events/continue
      security:
      - oauth2:
        - events.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTeamEventsContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamEventsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamEventsContinueError'
  /team/team_folder/create:
    post:
      summary: |-
        Creates a new, active, team folder with no members. This endpoint can only be used for teams
            that do not already have a shared team space.

            Permission : Team member file access.
      operationId: team_folder/create
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderCreateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderCreateError'
  /team/team_folder/rename:
    post:
      summary: |-
        Changes an active team folder's name.

            Permission : Team member file access.
      operationId: team_folder/rename
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderRenameArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderRenameError'
  /team/team_folder/list:
    post:
      summary: |-
        Lists all team folders.

            Permission : Team member file access.
      operationId: team_folder/list
      security:
      - oauth2:
        - team_data.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderListError'
  /team/team_folder/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`team_folder/list`, use this to paginate
            through all team folders.

            Permission : Team member file access.
      operationId: team_folder/list/continue
      security:
      - oauth2:
        - team_data.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderListContinueError'
  /team/team_folder/get_info:
    post:
      summary: |-
        Retrieves metadata for team folders.

            Permission : Team member file access.
      operationId: team_folder/get_info
      security:
      - oauth2:
        - team_data.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderIdListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(TeamFolderGetInfoItem)'
  /team/team_folder/activate:
    post:
      summary: |-
        Sets an archived team folder's status to active.

            Permission : Team member file access.
      operationId: team_folder/activate
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderIdArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderActivateError'
  /team/team_folder/archive:
    post:
      summary: |-
        Sets an active team folder's status to archived and removes all folder and file members.
            This endpoint cannot be used for teams that have a shared team space.

            Permission : Team member file access.
      operationId: team_folder/archive
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderArchiveArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderArchiveLaunch'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderArchiveError'
  /team/team_folder/archive/check:
    post:
      summary: |-
        Returns the status of an asynchronous job for archiving a team folder.

            Permission : Team member file access.
      operationId: team_folder/archive/check
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderArchiveJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /team/team_folder/permanently_delete:
    post:
      summary: |-
        Permanently deletes an archived team folder. This endpoint cannot be used for teams
            that have a shared team space.

            Permission : Team member file access.
      operationId: team_folder/permanently_delete
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderIdArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderPermanentlyDeleteError'
  /team/team_folder/update_sync_settings:
    post:
      summary: Updates the sync settings on a team folder or its contents.  Use of this endpoint requires that the team has team selective sync enabled.
      operationId: team_folder/update_sync_settings
      security:
      - oauth2:
        - team_data.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamFolderUpdateSyncSettingsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamFolderUpdateSyncSettingsError'
  /files/tags/add:
    post:
      summary: Add a tag to an item. A tag is a string. The strings are automatically converted to lowercase letters. No more than 20 tags can be added to a given item.
      operationId: tags/add
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTagArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTagError'
  /files/tags/remove:
    post:
      summary: Remove a tag from an item.
      operationId: tags/remove
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTagArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTagError'
  /files/tags/get:
    post:
      summary: Get list of tags assigned to items.
      operationId: tags/get
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTagsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseTagError'
  /auth/token/revoke:
    post:
      summary: |-
        Disables the access token used to authenticate the call.
            If there is a corresponding refresh token for the access token,
            this disables that refresh token, as well as any other access tokens for that refresh token.
      operationId: token/revoke
      security:
      - oauth2:
        - account_info.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
  /auth/token/from_oauth1:
    post:
      summary: Creates an OAuth 2.0 access token from the supplied OAuth 1.0 access token.
      operationId: token/from_oauth1
      security:
      - oauth2:
        - account_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenFromOAuth1Arg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenFromOAuth1Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenFromOAuth1Error'
  /file_requests/list:2:
    post:
      summary: |-
        Returns a list of file requests owned by this user. For apps with the app
            folder permission, this will only return file requests with destinations in
            the app folder.
      operationId: list:2
      security:
      - oauth2:
        - file_requests.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFileRequestsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileRequestsV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileRequestsError'
  /file_requests/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`list:2`, use this to paginate through all
            file requests. The cursor must come from a previous call to :route:`list:2` or
            :route:`list/continue`.
      operationId: list/continue
      security:
      - oauth2:
        - file_requests.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFileRequestsContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileRequestsV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileRequestsContinueError'
  /file_requests/list:
    post:
      summary: |-
        Returns a list of file requests owned by this user. For apps with the app
            folder permission, this will only return file requests with destinations in
            the app folder.
      operationId: list
      security:
      - oauth2:
        - file_requests.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileRequestsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFileRequestsError'
  /file_requests/get:
    post:
      summary: Returns the specified file request.
      operationId: get
      security:
      - oauth2:
        - file_requests.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFileRequestArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRequest'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileRequestError'
  /file_requests/create:
    post:
      summary: Creates a file request for this user.
      operationId: create
      security:
      - oauth2:
        - file_requests.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileRequestArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRequest'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFileRequestError'
  /file_requests/update:
    post:
      summary: Update a file request.
      operationId: update
      security:
      - oauth2:
        - file_requests.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileRequestArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRequest'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFileRequestError'
  /file_requests/count:
    post:
      summary: |-
        Returns the total number of file requests owned by this user. Includes both open and
            closed file requests.
      operationId: count
      security:
      - oauth2:
        - file_requests.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountFileRequestsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountFileRequestsError'
  /file_requests/delete:
    post:
      summary: Delete a batch of closed file requests.
      operationId: delete
      security:
      - oauth2:
        - file_requests.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFileRequestArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFileRequestsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFileRequestError'
  /file_requests/delete_all_closed:
    post:
      summary: Delete all closed file requests owned by this user.
      operationId: delete_all_closed
      security:
      - oauth2:
        - file_requests.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllClosedFileRequestsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAllClosedFileRequestsError'
  /paper/docs/folder_users/list:
    post:
      summary: |-
        Lists the users who are explicitly invited to the Paper folder in which the Paper doc
            is contained. For private folders all users (including owner) shared on the folder
            are listed and for team folders all non-team users shared on the folder are returned.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/folder_users/list
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersOnFolderArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersOnFolderResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/folder_users/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`docs/folder_users/list`, use this to
            paginate through all users on the Paper folder.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/folder_users/list/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersOnFolderContinueArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersOnFolderResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersCursorError'
  /paper/docs/sharing_policy/get:
    post:
      summary: |-
        Gets the default sharing policy for the given Paper doc.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/sharing_policy/get
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefPaperDoc'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingPolicy'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/sharing_policy/set:
    post:
      summary: |-
        Sets the default sharing policy for the given Paper doc. The default 'team_sharing_policy'
            can be changed only by teams, omit this field for personal accounts.

            The 'public_sharing_policy' policy can't be set to the value 'disabled' because this setting
            can be changed only via the team admin console.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/sharing_policy/set
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperDocSharingPolicy'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/archive:
    post:
      summary: |-
        Marks the given Paper doc as archived.

            This action can be performed or undone by anyone with edit permissions to the doc.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            This endpoint will be retired in September 2020. Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for more information.
      operationId: docs/archive
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefPaperDoc'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/permanently_delete:
    post:
      summary: |-
        Permanently deletes the given Paper doc. This operation is final as the doc
            cannot be recovered.

            This action can be performed only by the doc owner.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/permanently_delete
      security:
      - oauth2:
        - files.permanent_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefPaperDoc'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/download:
    post:
      summary: |-
        Exports and downloads Paper doc either as HTML or markdown.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/download
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperDocExport'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperDocExportResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/get_folder_info:
    post:
      summary: |-
        Retrieves folder information for the given Paper doc. This includes:

              - folder sharing policy; permissions for subfolders are set by the top-level folder.

              - full 'filepath', i.e. the list of folders (both folderId and folderName) from
                the root folder to the folder directly containing the Paper doc.


            If the Paper doc is not in any folder (aka unfiled) the response will be empty.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/get_folder_info
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefPaperDoc'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoldersContainingPaperDoc'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/users/add:
    post:
      summary: |-
        Allows an owner or editor to add users to a Paper doc or change their permissions
            using their email address or Dropbox account ID.

            The doc owner's permissions cannot be changed.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/users/add
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaperDocUser'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(AddPaperDocUserMemberResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/users/remove:
    post:
      summary: |-
        Allows an owner or editor to remove users from a Paper doc using their email address or
            Dropbox account ID.

            The doc owner cannot be removed.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/users/remove
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePaperDocUser'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/users/list:
    post:
      summary: |-
        Lists all users who visited the Paper doc or users with explicit access. This call
            excludes users who have been removed. The list is sorted by the date of the visit or
            the share date.

            The list will include both users, the explicitly shared ones as well as those
            who came in using the Paper url link.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/users/list
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersOnPaperDocArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersOnPaperDocResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocLookupError'
  /paper/docs/users/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`docs/users/list`, use this to
            paginate through all users on the Paper doc.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/users/list/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersOnPaperDocContinueArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersOnPaperDocResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersCursorError'
  /paper/docs/list:
    post:
      summary: |-
        Return the list of all Paper docs according to the argument specifications. To iterate
            over through the full pagination, pass the cursor to :route:`docs/list/continue`.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/list
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPaperDocsArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaperDocsResponse'
  /paper/docs/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`docs/list`, use this to
            paginate through all Paper doc.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: docs/list/continue
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPaperDocsContinueArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaperDocsResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocsCursorError'
  /paper/docs/create:
    post:
      summary: |-
        Creates a new Paper doc with the provided content.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            This endpoint will be retired in September 2020. Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for more information.
      operationId: docs/create
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperDocCreateArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperDocCreateUpdateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperDocCreateError'
  /paper/docs/update:
    post:
      summary: |-
        Updates an existing Paper doc with the provided content.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            This endpoint will be retired in September 2020. Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for more information.
      operationId: docs/update
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperDocUpdateArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperDocCreateUpdateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperDocUpdateError'
  /paper/folders/create:
    post:
      summary: |-
        Create a new Paper folder with the provided info.

            Note that this endpoint will continue to work for content created by users on the older version of Paper. To check which version of Paper a user is on, use /users/features/get_values. If the paper_as_files feature is enabled, then the user is running the new version of Paper.

            Refer to the :link:`Paper Migration Guide https://www.dropbox.com/lp/developers/reference/paper-migration-guide` for migration information.
      operationId: folders/create
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperFolderCreateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperFolderCreateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperFolderCreateError'
  /team/namespaces/list:
    post:
      summary: |-
        Returns a list of all team-accessible namespaces. This list includes team folders,
            shared folders containing team members, team members' home namespaces, and team members'
            app folders. Home namespaces and app folders are always owned by this team or members of the
            team, but shared folders may be owned by other users or other teams. Duplicates may occur in the
            list.
      operationId: namespaces/list
      security:
      - oauth2:
        - team_data.member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamNamespacesListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamNamespacesListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamNamespacesListError'
  /team/namespaces/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`namespaces/list`, use this to paginate
            through all team-accessible namespaces. Duplicates may occur in the list.
      operationId: namespaces/list/continue
      security:
      - oauth2:
        - team_data.member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamNamespacesListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamNamespacesListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamNamespacesListContinueError'
  /team/get_info:
    post:
      summary: Retrieves information about a team.
      operationId: get_info
      security:
      - oauth2:
        - team_info.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetInfoResult'
  /team/token/get_authenticated_admin:
    post:
      summary: Returns the member profile of the admin who generated the team access token used to make the call.
      operationId: token/get_authenticated_admin
      security:
      - oauth2:
        - team_info.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenGetAuthenticatedAdminResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenGetAuthenticatedAdminError'
  /team/features/get_values:
    post:
      summary: |-
        Get the values for one or more featues. This route allows you to check your account's
            capability for what feature you can access or what value you have for certain features.

            Permission : Team information.
      operationId: features/get_values
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturesGetValuesBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesGetValuesBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesGetValuesBatchError'
  /team/properties/template/add:
    post:
      summary: 'Permission : Team member file access.'
      operationId: properties/template/add
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesAddTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesAddTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesModifyTemplateError'
  /team/properties/template/update:
    post:
      summary: 'Permission : Team member file access.'
      operationId: properties/template/update
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesUpdateTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesUpdateTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesModifyTemplateError'
  /team/properties/template/get:
    post:
      summary: 'Permission : Team member file access. The scope for the route is files.team_metadata.write.'
      operationId: properties/template/get
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesGetTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesGetTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesTemplateError'
  /team/properties/template/list:
    post:
      summary: 'Permission : Team member file access. The scope for the route is files.team_metadata.write.'
      operationId: properties/template/list
      security:
      - oauth2:
        - files.team_metadata.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesListTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesTemplateError'
  /team/reports/get_storage:
    post:
      summary: |-
        Retrieves reporting data about a team's storage usage.
            Deprecated: Will be removed on July 1st 2021.
      operationId: reports/get_storage
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateRange'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStorageReport'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateRangeError'
  /team/reports/get_activity:
    post:
      summary: |-
        Retrieves reporting data about a team's user activity.
            Deprecated: Will be removed on July 1st 2021.
      operationId: reports/get_activity
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateRange'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityReport'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateRangeError'
  /team/reports/get_membership:
    post:
      summary: |-
        Retrieves reporting data about a team's membership.
            Deprecated: Will be removed on July 1st 2021.
      operationId: reports/get_membership
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateRange'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMembershipReport'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateRangeError'
  /team/reports/get_devices:
    post:
      summary: |-
        Retrieves reporting data about a team's linked devices.
            Deprecated: Will be removed on July 1st 2021.
      operationId: reports/get_devices
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateRange'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDevicesReport'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateRangeError'
  /contacts/delete_manual_contacts:
    post:
      summary: |-
        Removes all manually added contacts.
            You'll still keep contacts who are on your team or who you imported.
            New contacts will be added when you share.
      operationId: delete_manual_contacts
      security:
      - oauth2:
        - contacts.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
  /contacts/delete_manual_contacts_batch:
    post:
      summary: Removes manually added contacts from the given list.
      operationId: delete_manual_contacts_batch
      security:
      - oauth2:
        - contacts.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteManualContactsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteManualContactsError'
  /files/get_metadata:
    post:
      summary: |-
        Returns the metadata for a file or folder. This is an alpha endpoint
            compatible with the properties API.

            Note: Metadata for the root folder is unsupported.
      operationId: get_metadata
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlphaGetMetadataArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlphaGetMetadataError'
  /files/list_folder/longpoll:
    post:
      summary: |-
        A longpoll endpoint to wait for changes on an account. In conjunction with
            :route:`list_folder/continue`, this call gives you a low-latency way to
            monitor an account for file changes. The connection will block until there
            are changes available or a timeout occurs. This endpoint is useful mostly
            for client-side apps. If you're looking for server-side notifications,
            check out our
            :link:`webhooks documentation https://www.dropbox.com/developers/reference/webhooks`.
      operationId: list_folder/longpoll
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderLongpollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderLongpollResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderLongpollError'
  /files/list_folder:
    post:
      summary: |-
        Starts returning the contents of a folder. If the result's :field:`ListFolderResult.has_more`
            field is :val:`true`, call :route:`list_folder/continue` with the returned
            :field:`ListFolderResult.cursor` to retrieve more entries.

            If you're using :field:`ListFolderArg.recursive` set to :val:`true` to keep a local cache of
            the contents of a Dropbox account, iterate through each entry in order and process them as
            follows to keep your local state in sync:

            For each :type:`FileMetadata`, store the new entry at the given path in your local state. If the
            required parent folders don't exist yet, create them. If there's already something else at the
            given path, replace it and remove all its children.

            For each :type:`FolderMetadata`, store the new entry at the given path in your local state. If
            the required parent folders don't exist yet, create them. If there's already something else at
            the given path, replace it but leave the children as they are. Check the new entry's
            :field:`FolderSharingInfo.read_only` and set all its children's read-only statuses to match.

            For each :type:`DeletedMetadata`, if your local state has something at the given path, remove it
            and all its children. If there's nothing at the given path, ignore this entry.

            Note: :type:`auth.RateLimitError` may be returned if multiple :route:`list_folder` or
            :route:`list_folder/continue` calls with same parameters are made simultaneously by same
            API app for same user. If your app implements retry logic, please hold off the retry until
            the previous request finishes.
      operationId: list_folder
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderError'
  /files/list_folder/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`list_folder`, use this to paginate through all
            files and retrieve updates to the folder, following the same rules as documented for
            :route:`list_folder`.
      operationId: list_folder/continue
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderContinueError'
  /files/list_folder/get_latest_cursor:
    post:
      summary: |-
        A way to quickly get a cursor for the folder's state. Unlike :route:`list_folder`,
            :route:`list_folder/get_latest_cursor` doesn't return any entries. This endpoint is for app
            which only needs to know about new files and modifications and doesn't need to know about
            files that already exist in Dropbox.
      operationId: list_folder/get_latest_cursor
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderGetLatestCursorResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderError'
  /files/download:
    post:
      summary: Download a file from a user's Dropbox.
      operationId: download
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadError'
  /files/download_zip:
    post:
      summary: |-
        Download a folder from the user's Dropbox, as a zip file. The folder must be less than 20 GB
            in size and any single file within must be less than 4 GB in size. The resulting zip must have
            fewer than 10,000 total file and folder entries, including the top level folder. The input
            cannot be a single file.

            Note: this endpoint does not support HTTP range requests.
      operationId: download_zip
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadZipArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadZipResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadZipError'
  /files/export:
    post:
      summary: |-
        Export a file from a user's Dropbox. This route only supports exporting files that cannot be downloaded directly
             and whose :field:`ExportResult.file_metadata` has :field:`ExportInfo.export_as` populated.
      operationId: export
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportError'
  /files/upload_session/start_batch:
    post:
      summary: |-
        This route starts batch of upload_sessions. Please refer to `upload_session/start` usage.

            Calls to this endpoint will count as data transport calls for any Dropbox
            Business teams with a limit on the number of data transport calls allowed
            per month. For more information, see the :link:`Data transport limit page
            https://www.dropbox.com/developers/reference/data-transport-limit`.
      operationId: upload_session/start_batch
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionStartBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionStartBatchResult'
  /files/upload_session/start:
    post:
      summary: |-
        Upload sessions allow you to upload a single file in one or more
            requests, for example where the size of the file is greater than 150
            MB.  This call starts a new upload session with the given data. You
            can then use :route:`upload_session/append:2` to add more data and
            :route:`upload_session/finish` to save all the data to a file in
            Dropbox.

            A single request should not upload more than 150 MB. The maximum size of
            a file one can upload to an upload session is 350 GB.

            An upload session can be used for a maximum of 7 days. Attempting
            to use an :field:`UploadSessionStartResult.session_id` with
            :route:`upload_session/append:2` or :route:`upload_session/finish` more
            than 7 days after its creation will return a
            :field:`UploadSessionLookupError.not_found`.

            Calls to this endpoint will count as data transport calls for any Dropbox
            Business teams with a limit on the number of data transport calls allowed
            per month. For more information, see the :link:`Data transport limit page
            https://www.dropbox.com/developers/reference/data-transport-limit`.

            By default, upload sessions require you to send content of the file in sequential order via
            consecutive :route:`upload_session/start`, :route:`upload_session/append:2`,
            :route:`upload_session/finish` calls. For better performance, you can instead optionally use
            a :field:`UploadSessionType.concurrent` upload session. To start a new concurrent session,
            set :field:`UploadSessionStartArg.session_type` to :field:`UploadSessionType.concurrent`.
            After that, you can send file data in concurrent :route:`upload_session/append:2` requests.
            Finally finish the session with :route:`upload_session/finish`.

            There are couple of constraints with concurrent sessions to make them work. You can not send
            data with :route:`upload_session/start` or :route:`upload_session/finish` call, only with
            :route:`upload_session/append:2` call. Also data uploaded in :route:`upload_session/append:2`
            call must be multiple of 4194304 bytes (except for last :route:`upload_session/append:2` with
            :field:`UploadSessionStartArg.close` to :val:`true`, that may contain any remaining data).
      operationId: upload_session/start
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionStartArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionStartResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionStartError'
  /files/upload_session/append:2:
    post:
      summary: |-
        Append more data to an upload session.

            A single request should not upload more than 150 MB. The maximum size of
            a file one can upload to an upload session is 350 GB.

            Calls to this endpoint will count as data transport calls for any Dropbox
            Business teams with a limit on the number of data transport calls allowed
            per month. For more information, see the :link:`Data transport limit page https://www.dropbox.com/developers/reference/data-transport-limit`.
      operationId: upload_session/append:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionCursor'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionAppendError'
  /files/upload_session/finish:
    post:
      summary: |-
        Finish an upload session and save the uploaded data to the given file
            path.

            A single request should not upload more than 150 MB. The maximum size of
            a file one can upload to an upload session is 350 GB.

            Calls to this endpoint will count as data transport calls for any Dropbox
            Business teams with a limit on the number of data transport calls allowed
            per month. For more information, see the :link:`Data transport limit page https://www.dropbox.com/developers/reference/data-transport-limit`.
      operationId: upload_session/finish
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionFinishArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionFinishError'
  /files/upload:
    post:
      summary: |-
        Create a new file with the contents provided in the request. Note that the
            behavior of this alpha endpoint is unstable and subject to change.

            Do not use this to upload a file larger than 150 MB. Instead, create an
            upload session with :route:`upload_session/start`.
      operationId: upload
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadError'
  /files/upload_session/finish_batch:2:
    post:
      summary: |-
        This route helps you commit many files at once into a user's Dropbox. Use
            :route:`upload_session/start` and :route:`upload_session/append:2` to
            upload file contents. We recommend uploading many files in parallel to increase
            throughput. Once the file contents have been uploaded, rather than calling
            :route:`upload_session/finish`, use this route to finish all your upload sessions
            in a single request.

            :field:`UploadSessionStartArg.close` or :field:`UploadSessionAppendArg.close`
            needs to be true for the last
            :route:`upload_session/start` or :route:`upload_session/append:2` call of each upload session. The maximum
            size of a file one can upload to an upload session is 350 GB.

            We allow up to 1000 entries in a single request.

            Calls to this endpoint will count as data transport calls for any Dropbox
            Business teams with a limit on the number of data transport calls allowed
            per month. For more information, see the :link:`Data transport limit page https://www.dropbox.com/developers/reference/data-transport-limit`.
      operationId: upload_session/finish_batch:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadSessionFinishBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionFinishBatchResult'
  /files/upload_session/finish_batch/check:
    post:
      summary: |-
        Returns the status of an asynchronous job for :route:`upload_session/finish_batch`. If
            success, it returns list of result for each entry.
      operationId: upload_session/finish_batch/check
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSessionFinishBatchJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /files/search:2:
    post:
      summary: |-
        Searches for files and folders.

            Note: :route:`search:2` along with :route:`search/continue:2` can only be used to
            retrieve a maximum of 10,000 matches.

            Recent changes may not immediately be reflected in search results due to a short delay in indexing.
            Duplicate results may be returned across pages. Some results may not be returned.
      operationId: search:2
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchV2Arg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchError'
  /files/search/continue:2:
    post:
      summary: |-
        Fetches the next page of search results returned from :route:`search:2`.

            Note: :route:`search:2` along with :route:`search/continue:2` can only be used to
            retrieve a maximum of 10,000 matches.

            Recent changes may not immediately be reflected in search results due to a short delay in indexing.
            Duplicate results may be returned across pages. Some results may not be returned.
      operationId: search/continue:2
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchV2ContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchError'
  /files/create_folder:2:
    post:
      summary: Create a folder at a given path.
      operationId: create_folder:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderError'
  /files/create_folder_batch:
    post:
      summary: |-
        Create multiple folders at once.

            This route is asynchronous for large batches, which returns a job ID immediately and runs
            the create folder batch asynchronously. Otherwise, creates the folders and returns the result
            synchronously for smaller inputs. You can force asynchronous behaviour by using the
            :field:`CreateFolderBatchArg.force_async` flag.  Use :route:`create_folder_batch/check` to check
            the job status.
      operationId: create_folder_batch
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderBatchLaunch'
  /files/create_folder_batch/check:
    post:
      summary: |-
        Returns the status of an asynchronous job for :route:`create_folder_batch`. If
            success, it returns list of result for each entry.
      operationId: create_folder_batch/check
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderBatchJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /files/delete:2:
    post:
      summary: |-
        Delete the file or folder at a given path.

            If the path is a folder, all its contents will be deleted too.

            A successful response indicates that the file or folder was deleted. The returned metadata will
            be the corresponding :type:`FileMetadata` or :type:`FolderMetadata` for the item at time of
            deletion, and not a :type:`DeletedMetadata` object.
      operationId: delete:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteError'
  /files/delete_batch:
    post:
      summary: |-
        Delete multiple files/folders at once.

            This route is asynchronous, which returns a job ID immediately and runs
            the delete batch asynchronously. Use :route:`delete_batch/check` to check
            the job status.
      operationId: delete_batch
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBatchLaunch'
  /files/delete_batch/check:
    post:
      summary: |-
        Returns the status of an asynchronous job for :route:`delete_batch`. If
            success, it returns list of result for each entry.
      operationId: delete_batch/check
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBatchJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /files/permanently_delete:
    post:
      summary: |-
        Permanently delete the file or folder at a given path
            (see https://www.dropbox.com/en/help/40).

            If the given file or folder is not yet deleted, this route will first delete it.
            It is possible for this route to successfully delete, then fail to permanently
            delete.

            Note: This endpoint is only available for Dropbox Business apps.
      operationId: permanently_delete
      security:
      - oauth2:
        - files.permanent_delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteError'
  /files/copy:2:
    post:
      summary: |-
        Copy a file or folder to a different location in the user's Dropbox.

            If the source path is a folder all its contents will be copied.
      operationId: copy:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelocationArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocationError'
  /files/copy_batch:2:
    post:
      summary: |-
        Copy multiple files or folders to different locations at once in the
            user's Dropbox.

            This route will return job ID immediately and do the async copy job in
            background. Please use :route:`copy_batch/check:1` to check the job status.
      operationId: copy_batch:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelocationBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocationBatchLaunch'
  /files/copy_batch/check:2:
    post:
      summary: |-
        Returns the status of an asynchronous job for :route:`copy_batch:1`. If
            success, it returns list of results for each entry.
      operationId: copy_batch/check:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocationBatchJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /files/move:2:
    post:
      summary: |-
        Move a file or folder to a different location in the user's Dropbox.

            If the source path is a folder all its contents will be moved.
      operationId: move:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelocationArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocationError'
  /files/move_batch:2:
    post:
      summary: |-
        Move multiple files or folders to different locations at once in the
            user's Dropbox.

            This route will return job ID immediately and do the async moving job in
            background. Please use :route:`move_batch/check:1` to check the job status.
      operationId: move_batch:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelocationBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocationBatchLaunch'
  /files/move_batch/check:2:
    post:
      summary: |-
        Returns the status of an asynchronous job for :route:`move_batch:1`. If
            success, it returns list of results for each entry.
      operationId: move_batch/check:2
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelocationBatchJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /files/get_thumbnail:
    post:
      summary: |-
        Get a thumbnail for an image.

            This method currently supports files with the following file extensions:
            jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB
            in size won't be converted to a thumbnail.
      operationId: get_thumbnail
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThumbnailArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbnailError'
  /files/get_thumbnail_batch:
    post:
      summary: |-
        Get thumbnails for a list of images. We allow up to 25 thumbnails in a single batch.

            This method currently supports files with the following file extensions:
            jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB
            in size won't be converted to a thumbnail.
      operationId: get_thumbnail_batch
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetThumbnailBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThumbnailBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThumbnailBatchError'
  /files/get_thumbnail:2:
    post:
      summary: |-
        Get a thumbnail for an image.

            This method currently supports files with the following file extensions:
            jpg, jpeg, png, tiff, tif, gif, webp, ppm and bmp. Photos that are larger than 20MB
            in size won't be converted to a thumbnail.
      operationId: get_thumbnail:2
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThumbnailV2Arg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThumbnailV2Error'
  /files/get_preview:
    post:
      summary: |-
        Get a preview for a file.

            Currently, PDF previews are generated for files with the following extensions:
            .ai, .doc, .docm, .docx, .eps, .gdoc, .gslides, .odp, .odt, .pps, .ppsm, .ppsx, .ppt, .pptm, .pptx, .rtf.

            HTML previews are generated for files with the following extensions: .csv, .ods, .xls, .xlsm, .gsheet, .xlsx.

            Other formats will return an unsupported extension error.
      operationId: get_preview
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewError'
  /files/list_revisions:
    post:
      summary: |-
        Returns revisions for files based on a file path or a file id. The file path or file id is
            identified from the latest file entry at the given file path or id. This end point allows your
            app to query either by file path or file id by setting the mode parameter appropriately.

            In the :field:`ListRevisionsMode.path` (default) mode, all revisions at the same
            file path as the latest file entry are
            returned. If revisions with the same file id are desired, then mode must be set to
            :field:`ListRevisionsMode.id`. The :field:`ListRevisionsMode.id` mode is useful to retrieve
            revisions for a given file across moves or renames.
      operationId: list_revisions
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRevisionsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRevisionsError'
  /files/restore:
    post:
      summary: Restore a specific revision of a file to the given path.
      operationId: restore
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreError'
  /files/get_temporary_link:
    post:
      summary: |-
        Get a temporary link to stream content of a file. This link will expire in four hours and
            afterwards you will get 410 Gone. This URL should not be used to display content directly
            in the browser. The Content-Type of the link is determined automatically by the file's mime type.
      operationId: get_temporary_link
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemporaryLinkArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemporaryLinkResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemporaryLinkError'
  /files/get_temporary_upload_link:
    post:
      summary: "Get a one-time use temporary upload link to upload a file to a Dropbox location.\n\n\n    This endpoint acts as a delayed :route:`upload`. The returned temporary upload link may be used\n    to make a POST request with the data to be uploaded. The upload will then be perfomed with the\n    :type:`CommitInfo` previously provided to :route:`get_temporary_upload_link` but evaluated only\n    upon consumption. Hence, errors stemming from invalid :type:`CommitInfo` with respect to the\n    state of the user's Dropbox will only be communicated at consumption time. Additionally, these\n    errors are surfaced as generic HTTP 409 Conflict responses, potentially hiding issue details.\n    The maximum temporary upload link duration is 4 hours. Upon consumption or expiration,\n    a new link will have to be generated. Multiple links may exist for a specific upload path\n    at any given time.\n\n\n    The POST request on the temporary upload link must have its Content-Type\n    set to \"application/octet-stream\".\n\n\n    Example temporary upload link consumption request:\n\n\n    curl -X POST https://content.dropboxapi.com/apitul/1/bNi2uIYF51cVBND\n\n    --header \"Content-Type: application/octet-stream\"\n\n    --data-binary @local_file.txt\n\n\n    A successful temporary upload link consumption request returns the content hash\n    of the uploaded data in JSON format.\n\n\n    Example successful temporary upload link consumption response:\n\n    {\"content-hash\": \"599d71033d700ac892a0e48fa61b125d2f5994\"}\n\n\n    An unsuccessful temporary upload link consumption request returns any of the following status\n    codes:\n\n\n    HTTP 400 Bad Request: Content-Type is not one of\n    application/octet-stream and text/plain or request is invalid.\n\n    HTTP 409 Conflict: The temporary upload link does not exist or is currently unavailable,\n    the upload failed, or another error happened.\n\n    HTTP 410 Gone: The temporary upload link is expired or consumed.\n\n\n    Example unsuccessful temporary upload link consumption response:\n\n    Temporary upload link has been recently consumed.\n    "
      operationId: get_temporary_upload_link
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemporaryUploadLinkArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemporaryUploadLinkResult'
  /files/copy_reference/get:
    post:
      summary: |-
        Get a copy reference to a file or folder. This reference string can be used to
            save that file or folder to another user's Dropbox by passing it to
            :route:`copy_reference/save`.
      operationId: copy_reference/get
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCopyReferenceArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCopyReferenceResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCopyReferenceError'
  /files/copy_reference/save:
    post:
      summary: Save a copy reference returned by :route:`copy_reference/get` to the user's Dropbox.
      operationId: copy_reference/save
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCopyReferenceArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveCopyReferenceResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveCopyReferenceError'
  /files/save_url:
    post:
      summary: |-
        Save the data from a specified URL into a file in user's Dropbox.

            Note that the transfer from the URL must complete within 15 minutes, or the
            operation will time out and the job will fail.

            If the given path already exists, the file will be renamed to avoid the
            conflict (e.g. myfile (1).txt).
      operationId: save_url
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveUrlArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveUrlResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveUrlError'
  /files/save_url/check_job_status:
    post:
      summary: Check the status of a :route:`save_url` job.
      operationId: save_url/check_job_status
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveUrlJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /files/properties/add:
    post:
      summary: Execute properties/add
      operationId: properties/add
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesAddPropertiesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesAddPropertiesError'
  /files/properties/overwrite:
    post:
      summary: Execute properties/overwrite
      operationId: properties/overwrite
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesOverwritePropertyGroupArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesInvalidPropertyGroupError'
  /files/properties/update:
    post:
      summary: Execute properties/update
      operationId: properties/update
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesUpdatePropertiesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesUpdatePropertiesError'
  /files/properties/remove:
    post:
      summary: Execute properties/remove
      operationId: properties/remove
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesRemovePropertiesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesRemovePropertiesError'
  /files/properties/template/get:
    post:
      summary: Execute properties/template/get
      operationId: properties/template/get
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filepropertiesGetTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesGetTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesTemplateError'
  /files/properties/template/list:
    post:
      summary: Execute properties/template/list
      operationId: properties/template/list
      security:
      - oauth2:
        - files.metadata.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesListTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filepropertiesTemplateError'
  /files/lock_file_batch:
    post:
      summary: "\n    Lock the files at the given paths. A locked file will be writable only by the lock holder.\n    A successful response indicates that the file has been locked. Returns a list of the\n    locked file paths and their metadata after this operation.\n    "
      operationId: lock_file_batch
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockFileBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockFileBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockFileError'
  /files/unlock_file_batch:
    post:
      summary: "\n    Unlock the files at the given paths. A locked file can only be unlocked by the lock holder\n    or, if a business account, a team admin. A successful response indicates that the file has\n    been unlocked. Returns a list of the unlocked file paths and their metadata after\n    this operation.\n    "
      operationId: unlock_file_batch
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnlockFileBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockFileBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockFileError'
  /files/get_file_lock_batch:
    post:
      summary: "\n    Return the lock metadata for the given list of paths.\n    "
      operationId: get_file_lock_batch
      security:
      - oauth2:
        - files.content.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockFileBatchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockFileBatchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockFileError'
  /files/paper/create:
    post:
      summary: "\n    Creates a new Paper doc with the provided content.\n    "
      operationId: paper/create
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperCreateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperCreateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperCreateError'
  /files/paper/update:
    post:
      summary: "\n    Updates an existing Paper doc with the provided content.\n    "
      operationId: paper/update
      security:
      - oauth2:
        - files.content.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperUpdateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperUpdateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaperUpdateError'
  /file_properties/properties/add:
    post:
      summary: |-
        Add property groups to a Dropbox file. See :route:`templates/add_for_user` or
            :route:`templates/add_for_team` to create new templates.
      operationId: properties/add
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPropertiesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPropertiesError'
  /file_properties/properties/overwrite:
    post:
      summary: |-
        Overwrite property groups associated with a file. This endpoint should be used
            instead of :route:`properties/update` when property groups are being updated via a
            "snapshot" instead of via a "delta". In other words, this endpoint will delete all
            omitted fields from a property group, whereas :route:`properties/update` will only
            delete fields that are explicitly marked for deletion.
      operationId: properties/overwrite
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OverwritePropertyGroupArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPropertyGroupError'
  /file_properties/properties/update:
    post:
      summary: |-
        Add, update or remove properties associated with the supplied file and templates.
            This endpoint should be used instead of :route:`properties/overwrite` when property groups
            are being updated via a "delta" instead of via a "snapshot" . In other words, this endpoint
            will not delete any omitted fields from a property group, whereas :route:`properties/overwrite`
            will delete any fields that are omitted from a property group.
      operationId: properties/update
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePropertiesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePropertiesError'
  /file_properties/properties/remove:
    post:
      summary: |-
        Permanently removes the specified property group from the file. To remove specific property field key
            value pairs, see :route:`properties/update`.
            To update a template, see
            :route:`templates/update_for_user` or :route:`templates/update_for_team`.
            To remove a template, see
            :route:`templates/remove_for_user` or :route:`templates/remove_for_team`.
      operationId: properties/remove
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePropertiesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovePropertiesError'
  /file_properties/templates/add_for_user:
    post:
      summary: |-
        Add a template associated with a user. See :route:`properties/add` to add properties to a file. This
            endpoint can't be called on a team member or admin's behalf.
      operationId: templates/add_for_user
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyTemplateError'
  /file_properties/templates/add_for_team:
    post:
      summary: |-
        Add a template associated with a team. See :route:`properties/add` to add properties to a file or folder.

            Note: this endpoint will create team-owned templates.
      operationId: templates/add_for_team
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyTemplateError'
  /file_properties/templates/get_for_user:
    post:
      summary: Get the schema for a specified template. This endpoint can't be called on a team member or admin's behalf.
      operationId: templates/get_for_user
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateError'
  /file_properties/templates/get_for_team:
    post:
      summary: Get the schema for a specified template.
      operationId: templates/get_for_team
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateError'
  /file_properties/templates/update_for_user:
    post:
      summary: |-
        Update a template associated with a user. This route can update the template name,
            the template description and add optional properties to templates. This endpoint can't
            be called on a team member or admin's behalf.
      operationId: templates/update_for_user
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyTemplateError'
  /file_properties/templates/update_for_team:
    post:
      summary: |-
        Update a template associated with a team. This route can update the template name,
            the template description and add optional properties to templates.
      operationId: templates/update_for_team
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyTemplateError'
  /file_properties/templates/list_for_user:
    post:
      summary: |-
        Get the template identifiers for a team. To get the schema of
            each template use :route:`templates/get_for_user`. This endpoint can't be
            called on a team member or admin's behalf.
      operationId: templates/list_for_user
      security:
      - oauth2:
        - files.metadata.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateError'
  /file_properties/templates/list_for_team:
    post:
      summary: |-
        Get the template identifiers for a team. To get the schema of
            each template use :route:`templates/get_for_team`.
      operationId: templates/list_for_team
      security:
      - oauth2:
        - files.team_metadata.write
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTemplateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateError'
  /file_properties/templates/remove_for_user:
    post:
      summary: |-
        Permanently removes the specified template created from :route:`templates/add_for_user`.
            All properties associated with the template will also be removed. This action
            cannot be undone.
      operationId: templates/remove_for_user
      security:
      - oauth2:
        - files.metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateError'
  /file_properties/templates/remove_for_team:
    post:
      summary: |-
        Permanently removes the specified template created from :route:`templates/add_for_user`.
            All properties associated with the template will also be removed. This action
            cannot be undone.
      operationId: templates/remove_for_team
      security:
      - oauth2:
        - files.team_metadata.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTemplateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateError'
  /file_properties/properties/search:
    post:
      summary: Search across property templates for particular property field values.
      operationId: properties/search
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertiesSearchArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesSearchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesSearchError'
  /file_properties/properties/search/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`properties/search`, use this to paginate through all
            search results.
      operationId: properties/search/continue
      security:
      - oauth2:
        - files.metadata.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertiesSearchContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesSearchResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesSearchContinueError'
  /sharing/get_shared_link_metadata:
    post:
      summary: Get the shared link's metadata.
      operationId: get_shared_link_metadata
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSharedLinkMetadataArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLinkMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLinkError'
  /sharing/list_shared_links:
    post:
      summary: |-
        Returns a list of :type:`LinkMetadata` objects for this user,
            including collection links.

            If no path is given, returns a list of all shared links for the current
            user, including collection links, up to a maximum of 1000 links.

            If a non-empty path is given, returns a list of all shared links
            that allow access to the given path.  Collection links are never
            returned in this case.
      operationId: list_shared_links
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSharedLinksArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSharedLinksResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSharedLinksError'
  /sharing/modify_shared_link_settings:
    post:
      summary: |-
        Modify the shared link's settings.

            If the requested visibility conflict with the shared links policy of the team or the
            shared folder (in case the linked file is part of a shared folder) then the
            :field:`LinkPermissions.resolved_visibility` of the returned :type:`SharedLinkMetadata` will
            reflect the actual visibility of the shared link and the
            :field:`LinkPermissions.requested_visibility` will reflect the requested visibility.
      operationId: modify_shared_link_settings
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifySharedLinkSettingsArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLinkMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifySharedLinkSettingsError'
  /sharing/create_shared_link_with_settings:
    post:
      summary: |-
        Create a shared link.

            If a shared link already exists for the given path, that link is returned.

            Previously, it was technically possible to break a shared link by moving or
            renaming the corresponding file or folder. In the future, this will no
            longer be the case, so your app shouldn't rely on this behavior. Instead, if
            your app needs to revoke a shared link, use :route:`revoke_shared_link`.
      operationId: create_shared_link_with_settings
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSharedLinkArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathLinkMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSharedLinkError'
  /sharing/revoke_shared_link:
    post:
      summary: |-
        Revoke a shared link.

            Note that even after revoking a shared link to a file, the file may be accessible if there are
            shared links leading to any of the file parent folders. To list all shared links that enable
            access to a specific file, you can use the :route:`list_shared_links` with the file as the
            :field:`ListSharedLinksArg.path` argument.
      operationId: revoke_shared_link
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeSharedLinkArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeSharedLinkError'
  /sharing/get_shared_link_file:
    post:
      summary: Download the shared link's file from a user's Dropbox.
      operationId: get_shared_link_file
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSharedLinkFileArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLinkMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSharedLinkFileError'
  /team/sharing_allowlist/add:
    post:
      summary: |-
        Endpoint adds Approve List entries. Changes are effective immediately.
            Changes are committed in transaction. In case of single validation error - all entries are rejected.
            Valid domains (RFC-1034/5) and emails (RFC-5322/822) are accepted.
            Added entries cannot overflow limit of 10000 entries per team.
            Maximum 100 entries per call is allowed.
      operationId: sharing_allowlist/add
      security:
      - oauth2:
        - team_info.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingAllowlistAddArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistAddResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistAddError'
  /team/sharing_allowlist/list:
    post:
      summary: |-
        Lists Approve List entries for given team, from newest to oldest, returning
            up to `limit` entries at a time. If there are more than `limit` entries
            associated with the current team, more can be fetched by passing the
            returned `cursor` to :route:`sharing_allowlist/list/continue`.
      operationId: sharing_allowlist/list
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingAllowlistListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistListResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistListError'
  /team/sharing_allowlist/list/continue:
    post:
      summary: Lists entries associated with given team, starting from a the cursor. See :route:`sharing_allowlist/list`.
      operationId: sharing_allowlist/list/continue
      security:
      - oauth2:
        - team_info.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingAllowlistListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistListResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistListContinueError'
  /team/sharing_allowlist/remove:
    post:
      summary: |-
        Endpoint removes Approve List entries. Changes are effective immediately.
            Changes are committed in transaction. In case of single validation error - all entries are rejected.
            Valid domains (RFC-1034/5) and emails (RFC-5322/822) are accepted.
            Entries being removed have to be present on the list.
            Maximum 1000 entries per call is allowed.
      operationId: sharing_allowlist/remove
      security:
      - oauth2:
        - team_info.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingAllowlistRemoveArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistRemoveResponse'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingAllowlistRemoveError'
  /account/set_profile_photo:
    post:
      summary: Sets a user's profile photo.
      operationId: set_profile_photo
      security:
      - oauth2:
        - account_info.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetProfilePhotoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetProfilePhotoResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetProfilePhotoError'
  /team/members/list:2:
    post:
      summary: |-
        Lists members of a team.

            Permission : Team information.
      operationId: members/list:2
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListError'
  /team/members/list:
    post:
      summary: |-
        Lists members of a team.

            Permission : Team information.
      operationId: members/list
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListError'
  /team/members/list/continue:2:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`members/list:2`, use this to paginate
            through all team members.

            Permission : Team information.
      operationId: members/list/continue:2
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListContinueError'
  /team/members/list/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`members/list`, use this to paginate
            through all team members.

            Permission : Team information.
      operationId: members/list/continue
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersListContinueError'
  /team/members/get_info:2:
    post:
      summary: |-
        Returns information about multiple team members.

            Permission : Team information

            This endpoint will return :field:`MembersGetInfoItem.id_not_found`,
            for IDs (or emails) that cannot be matched to a valid team member.
      operationId: members/get_info:2
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersGetInfoV2Arg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetInfoV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetInfoError'
  /team/members/get_info:
    post:
      summary: |-
        Returns information about multiple team members.

            Permission : Team information

            This endpoint will return :field:`MembersGetInfoItem.id_not_found`,
            for IDs (or emails) that cannot be matched to a valid team member.
      operationId: members/get_info
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersGetInfoArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetInfoResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetInfoError'
  /team/members/add:2:
    post:
      summary: |-
        Adds members to a team.

            Permission : Team member management

            A maximum of 20 members can be specified in a single call.

            If no Dropbox account exists with the email address specified, a new Dropbox account will
            be created with the given email address, and that account will be invited to the team.

            If a personal Dropbox account exists with the email address specified in the call,
            this call will create a placeholder Dropbox account for the user on the team and send an
            email inviting the user to migrate their existing personal account onto the team.

            Team member management apps are required to set an initial given_name and surname for a
            user to use in the team invitation and for 'Perform as team member' actions taken on
            the user before they become 'active'.
      operationId: members/add:2
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersAddV2Arg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersAddLaunchV2Result'
  /team/members/add:
    post:
      summary: |-
        Adds members to a team.

            Permission : Team member management

            A maximum of 20 members can be specified in a single call.

            If no Dropbox account exists with the email address specified, a new Dropbox account will
            be created with the given email address, and that account will be invited to the team.

            If a personal Dropbox account exists with the email address specified in the call,
            this call will create a placeholder Dropbox account for the user on the team and send an
            email inviting the user to migrate their existing personal account onto the team.

            Team member management apps are required to set an initial given_name and surname for a
            user to use in the team invitation and for 'Perform as team member' actions taken on
            the user before they become 'active'.
      operationId: members/add
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersAddArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersAddLaunch'
  /team/members/add/job_status/get:2:
    post:
      summary: |-
        Once an async_job_id is returned from :route:`members/add:2` ,
            use this to poll the status of the asynchronous request.

            Permission : Team member management.
      operationId: members/add/job_status/get:2
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersAddJobStatusV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /team/members/add/job_status/get:
    post:
      summary: |-
        Once an async_job_id is returned from :route:`members/add` ,
            use this to poll the status of the asynchronous request.

            Permission : Team member management.
      operationId: members/add/job_status/get
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersAddJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /team/members/set_profile:2:
    post:
      summary: |-
        Updates a team member's profile.

            Permission : Team member management.
      operationId: members/set_profile:2
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersSetProfileArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberInfoV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetProfileError'
  /team/members/set_profile:
    post:
      summary: |-
        Updates a team member's profile.

            Permission : Team member management.
      operationId: members/set_profile
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersSetProfileArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberInfo'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetProfileError'
  /team/members/set_profile_photo:2:
    post:
      summary: |-
        Updates a team member's profile photo.

            Permission : Team member management.
      operationId: members/set_profile_photo:2
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersSetProfilePhotoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberInfoV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetProfilePhotoError'
  /team/members/set_profile_photo:
    post:
      summary: |-
        Updates a team member's profile photo.

            Permission : Team member management.
      operationId: members/set_profile_photo
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersSetProfilePhotoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberInfo'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetProfilePhotoError'
  /team/members/delete_profile_photo:2:
    post:
      summary: |-
        Deletes a team member's profile photo.

            Permission : Team member management.
      operationId: members/delete_profile_photo:2
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersDeleteProfilePhotoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberInfoV2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersDeleteProfilePhotoError'
  /team/members/delete_profile_photo:
    post:
      summary: |-
        Deletes a team member's profile photo.

            Permission : Team member management.
      operationId: members/delete_profile_photo
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersDeleteProfilePhotoArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMemberInfo'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersDeleteProfilePhotoError'
  /team/members/get_available_team_member_roles:
    post:
      summary: |-
        Get available TeamMemberRoles for the connected team. To be used with :route:`members/set_admin_permissions:2`.

            Permission : Team member management.
      operationId: members/get_available_team_member_roles
      security:
      - oauth2:
        - members.read
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersGetAvailableTeamMemberRolesResult'
  /team/members/set_admin_permissions:2:
    post:
      summary: |-
        Updates a team member's permissions.

            Permission : Team member management.
      operationId: members/set_admin_permissions:2
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersSetPermissions2Arg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetPermissions2Result'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetPermissions2Error'
  /team/members/set_admin_permissions:
    post:
      summary: |-
        Updates a team member's permissions.

            Permission : Team member management.
      operationId: members/set_admin_permissions
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersSetPermissionsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetPermissionsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSetPermissionsError'
  /team/members/send_welcome_email:
    post:
      summary: |-
        Sends welcome email to pending team member.

            Permission : Team member management

            Exactly one of team_member_id, email, or external_id must be provided to identify the user account.

            No-op if team member is not pending.
      operationId: members/send_welcome_email
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSelectorArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSendWelcomeError'
  /team/members/remove:
    post:
      summary: |-
        Removes a member from a team.

            Permission : Team member management

            Exactly one of team_member_id, email, or external_id must be provided to identify the user account.

            Accounts can be recovered via :route:`members/recover` for a 7 day period
            or until the account has been permanently deleted or transferred to another account
            (whichever comes first). Calling :route:`members/add` while a user is still recoverable
            on your team will return with :field:`MemberAddResult.user_already_on_team`.

            Accounts can have their files transferred via the admin console for a limited time, based on the version history
            length associated with the team (180 days for most teams).

            This endpoint may initiate an asynchronous job. To obtain the final result
            of the job, the client should periodically poll :route:`members/remove/job_status/get`.
      operationId: members/remove
      security:
      - oauth2:
        - members.delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersRemoveArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncLaunchEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersRemoveError'
  /team/members/remove/job_status/get:
    post:
      summary: |-
        Once an async_job_id is returned from :route:`members/remove` ,
            use this to poll the status of the asynchronous request.

            Permission : Team member management.
      operationId: members/remove/job_status/get
      security:
      - oauth2:
        - members.delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /team/members/suspend:
    post:
      summary: |-
        Suspend a member from a team.

            Permission : Team member management

            Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
      operationId: members/suspend
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersDeactivateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersSuspendError'
  /team/members/unsuspend:
    post:
      summary: |-
        Unsuspend a member from a team.

            Permission : Team member management

            Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
      operationId: members/unsuspend
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersUnsuspendArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersUnsuspendError'
  /team/members/recover:
    post:
      summary: |-
        Recover a deleted member.

            Permission : Team member management

            Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
      operationId: members/recover
      security:
      - oauth2:
        - members.delete
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersRecoverArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersRecoverError'
  /team/members/move_former_member_files:
    post:
      summary: |-
        Moves removed member's files to a different member. This endpoint initiates an asynchronous job. To obtain the final result
            of the job, the client should periodically poll :route:`members/move_former_member_files/job_status/check`.

            Permission : Team member management.
      operationId: members/move_former_member_files
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembersDataTransferArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncLaunchEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersTransferFormerMembersFilesError'
  /team/members/move_former_member_files/job_status/check:
    post:
      summary: |-
        Once an async_job_id is returned from :route:`members/move_former_member_files` ,
            use this to poll the status of the asynchronous request.

            Permission : Team member management.
      operationId: members/move_former_member_files/job_status/check
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /team/legal_holds/create_policy:
    post:
      summary: |-
        Creates new legal hold policy.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/create_policy
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsPolicyCreateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsPolicyCreateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsPolicyCreateError'
  /team/legal_holds/get_policy:
    post:
      summary: |-
        Gets a legal hold by Id.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/get_policy
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsGetPolicyArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsGetPolicyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsGetPolicyError'
  /team/legal_holds/list_policies:
    post:
      summary: |-
        Lists legal holds on a team.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/list_policies
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsListPoliciesArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsListPoliciesResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsListPoliciesError'
  /team/legal_holds/list_held_revisions:
    post:
      summary: |-
        List the file metadata that's under the hold.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/list_held_revisions
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsListHeldRevisionsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsListHeldRevisionResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsListHeldRevisionsError'
  /team/legal_holds/list_held_revisions_continue:
    post:
      summary: |-
        Continue listing the file metadata that's under the hold.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/list_held_revisions_continue
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsListHeldRevisionsContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsListHeldRevisionResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsListHeldRevisionsError'
  /team/legal_holds/update_policy:
    post:
      summary: |-
        Updates a legal hold.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/update_policy
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsPolicyUpdateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsPolicyUpdateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsPolicyUpdateError'
  /team/legal_holds/release_policy:
    post:
      summary: |-
        Releases a legal hold by Id.
            Note: Legal Holds is a paid add-on. Not all teams have the feature.

            Permission : Team member file access.
      operationId: legal_holds/release_policy
      security:
      - oauth2:
        - team_data.governance.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHoldsPolicyReleaseArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldsPolicyReleaseError'
  /sharing/list_folders:
    post:
      summary: Return the list of all shared folders the current user has access to.
      operationId: list_folders
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFoldersArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResult'
  /sharing/list_folders/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`list_folders`, use this to paginate through all
            shared folders. The cursor must come from a previous call to :route:`list_folders` or
            :route:`list_folders/continue`.
      operationId: list_folders/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFoldersContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersContinueError'
  /sharing/list_mountable_folders:
    post:
      summary: Return the list of all shared folders the current user can mount or unmount.
      operationId: list_mountable_folders
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFoldersArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResult'
  /sharing/list_mountable_folders/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`list_mountable_folders`, use this to paginate through all
            mountable shared folders. The cursor must come from a previous call to :route:`list_mountable_folders` or
            :route:`list_mountable_folders/continue`.
      operationId: list_mountable_folders/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFoldersContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFoldersContinueError'
  /sharing/get_folder_metadata:
    post:
      summary: Returns shared folder metadata by its folder ID.
      operationId: get_folder_metadata
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMetadataArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderAccessError'
  /sharing/list_folder_members:
    post:
      summary: Returns shared folder membership by its folder ID.
      operationId: list_folder_members
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderMembersArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderMembers'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderAccessError'
  /sharing/list_folder_members/continue:
    post:
      summary: |-
        Once a cursor has been retrieved from :route:`list_folder_members`, use this to paginate
            through all shared folder members.
      operationId: list_folder_members/continue
      security:
      - oauth2:
        - sharing.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFolderMembersContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderMembers'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFolderMembersContinueError'
  /sharing/share_folder:
    post:
      summary: |-
        Share a folder with collaborators.

            Most sharing will be completed synchronously. Large folders will be
            completed asynchronously. To make testing the async case repeatable, set
            `ShareFolderArg.force_async`.

            If a :field:`ShareFolderLaunch.async_job_id` is returned, you'll need to
            call :route:`check_share_job_status` until the action completes to get the
            metadata for the folder.
      operationId: share_folder
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareFolderLaunch'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareFolderError'
  /sharing/check_share_job_status:
    post:
      summary: Returns the status of an asynchronous job for sharing a folder.
      operationId: check_share_job_status
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareFolderJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /sharing/check_job_status:
    post:
      summary: Returns the status of an asynchronous job.
      operationId: check_job_status
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /sharing/unshare_folder:
    post:
      summary: |-
        Allows a shared folder owner to unshare the folder.

            You'll need to call :route:`check_job_status` to determine if the action has
            completed successfully.
      operationId: unshare_folder
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnshareFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncLaunchEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnshareFolderError'
  /sharing/transfer_folder:
    post:
      summary: |-
        Transfer ownership of a shared folder to a member of the shared folder.

            User must have :field:`AccessLevel.owner` access to the shared folder to perform a transfer.
      operationId: transfer_folder
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferFolderError'
  /sharing/update_folder_policy:
    post:
      summary: |-
        Update the sharing policies for a shared folder.

            User must have :field:`AccessLevel.owner` access to the shared folder to update its policies.
      operationId: update_folder_policy
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderPolicyArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFolderPolicyError'
  /sharing/add_folder_member:
    post:
      summary: |-
        Allows an owner or editor (if the ACL update policy allows) of a shared
            folder to add another member.

            For the new member to get access to all the functionality for this folder,
            you will need to call :route:`mount_folder` on their behalf.
      operationId: add_folder_member
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFolderMemberArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddFolderMemberError'
  /sharing/remove_folder_member:
    post:
      summary: |-
        Allows an owner or editor (if the ACL update policy allows) of a shared
            folder to remove another member.
      operationId: remove_folder_member
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFolderMemberArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncLaunchResultBase'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveFolderMemberError'
  /sharing/check_remove_member_job_status:
    post:
      summary: Returns the status of an asynchronous job for sharing a folder.
      operationId: check_remove_member_job_status
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncPollArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveMemberJobStatus'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncPollError'
  /sharing/update_folder_member:
    post:
      summary: |-
        Allows an owner or editor of a shared folder to update another member's
            permissions.
      operationId: update_folder_member
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderMemberArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberAccessLevelResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFolderMemberError'
  /sharing/mount_folder:
    post:
      summary: |-
        The current user mounts the designated folder.

            Mount a shared folder for a user after they have been added as a member.
            Once mounted, the shared folder will appear in their Dropbox.
      operationId: mount_folder
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MountFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedFolderMetadata'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountFolderError'
  /sharing/unmount_folder:
    post:
      summary: |-
        The current user unmounts the designated folder. They can re-mount the
            folder at a later time using :route:`mount_folder`.
      operationId: unmount_folder
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmountFolderArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmountFolderError'
  /sharing/relinquish_folder_membership:
    post:
      summary: |-
        The current user relinquishes their membership in the designated shared
            folder and will no longer have access to the folder.  A folder owner cannot
            relinquish membership in their own folder.

            This will run synchronously if leave_a_copy is false, and asynchronously
            if leave_a_copy is true.
      operationId: relinquish_folder_membership
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelinquishFolderMembershipArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncLaunchEmptyResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelinquishFolderMembershipError'
  /sharing/set_access_inheritance:
    post:
      summary: |-
        Change the inheritance policy of an existing Shared Folder. Only permitted for shared folders in a shared team root.

            If a :field:`ShareFolderLaunch.async_job_id` is returned, you'll need to
            call :route:`check_share_job_status` until the action completes to get the
            metadata for the folder.
      operationId: set_access_inheritance
      security:
      - oauth2:
        - sharing.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetAccessInheritanceArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareFolderLaunch'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetAccessInheritanceError'
  /team/member_space_limits/set_custom_quota:
    post:
      summary: |-
        Set users custom quota. Custom quota has to be at least 15GB.
            A maximum of 1000 members can be specified in a single call.
            Note: to apply a custom space limit, a team admin needs to set a member space limit for the team first.
            (the team admin can check the settings here: https://www.dropbox.com/team/admin/settings/space).
      operationId: member_space_limits/set_custom_quota
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCustomQuotaArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(CustomQuotaResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetCustomQuotaError'
  /team/member_space_limits/remove_custom_quota:
    post:
      summary: |-
        Remove users custom quota.
            A maximum of 1000 members can be specified in a single call.
            Note: to apply a custom space limit, a team admin needs to set a member space limit for the team first.
            (the team admin can check the settings here: https://www.dropbox.com/team/admin/settings/space).
      operationId: member_space_limits/remove_custom_quota
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomQuotaUsersArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(RemoveCustomQuotaResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomQuotaError'
  /team/member_space_limits/get_custom_quota:
    post:
      summary: |-
        Get users custom quota.
            A maximum of 1000 members can be specified in a single call.
            Note: to apply a custom space limit, a team admin needs to set a member space limit for the team first.
            (the team admin can check the settings here: https://www.dropbox.com/team/admin/settings/space).
      operationId: member_space_limits/get_custom_quota
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomQuotaUsersArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List(CustomQuotaResult)'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomQuotaError'
  /team/member_space_limits/excluded_users/add:
    post:
      summary: Add users to member space limits excluded users list.
      operationId: member_space_limits/excluded_users/add
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludedUsersUpdateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersUpdateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersUpdateError'
  /team/member_space_limits/excluded_users/remove:
    post:
      summary: Remove users from member space limits excluded users list.
      operationId: member_space_limits/excluded_users/remove
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludedUsersUpdateArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersUpdateResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersUpdateError'
  /team/member_space_limits/excluded_users/list:
    post:
      summary: List member space limits excluded users.
      operationId: member_space_limits/excluded_users/list
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludedUsersListArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersListError'
  /team/member_space_limits/excluded_users/list/continue:
    post:
      summary: Continue listing member space limits excluded users.
      operationId: member_space_limits/excluded_users/list/continue
      security:
      - oauth2:
        - members.read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludedUsersListContinueArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersListResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExcludedUsersListContinueError'
  /team/members/secondary_emails/add:
    post:
      summary: |-
        Add secondary emails to users.

            Permission : Team member management.

            Emails that are on verified domains will be verified automatically.
            For each email address not on a verified domain a verification email will be sent.
      operationId: members/secondary_emails/add
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSecondaryEmailsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSecondaryEmailsResult'
        '400':
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSecondaryEmailsError'
  /team/members/secondary_emails/resend_verification_emails:
    post:
      summary: |-
        Resend secondary email verification emails.

            Permission : Team member management.
      operationId: members/secondary_emails/resend_verification_emails
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationEmailArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerificationEmailResult'
  /team/members/secondary_emails/delete:
    post:
      summary: |-
        Delete secondary emails from users

            Permission : Team member management.

            Users will be notified of deletions of verified secondary emails at both the secondary email and their primary email.
      operationId: members/secondary_emails/delete
      security:
      - oauth2:
        - members.write
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSecondaryEmailsArg'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSecondaryEmailsResult'
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://www.dropbox.com/oauth2/authorize
          tokenUrl: https://api.dropboxapi.com/oauth2/token
          scopes:
            sharing.read: Access to sharing.read operations
            account_info.read: Access to account info.read operations
            sessions.list: Access to sessions.list operations
            sessions.modify: Access to sessions.modify operations
            groups.read: Access to groups.read operations
            groups.write: Access to groups.write operations
            openid: Access to openid operations
            sharing.write: Access to sharing.write operations
            events.read: Access to events.read operations
            team_data.content.write: Access to team data.content.write operations
            team_data.content.read: Access to team data.content.read operations
            files.metadata.write: Access to files.metadata.write operations
            files.metadata.read: Access to files.metadata.read operations
            file_requests.read: Access to file requests.read operations
            file_requests.write: Access to file requests.write operations
            files.content.write: Access to files.content.write operations
            files.permanent_delete: Access to files.permanent delete operations
            files.content.read: Access to files.content.read operations
            team_data.member: Access to team data.member operations
            team_info.read: Access to team info.read operations
            files.team_metadata.write: Access to files.team metadata.write operations
            contacts.write: Access to contacts.write operations
            team_info.write: Access to team info.write operations
            account_info.write: Access to account info.write operations
            members.read: Access to members.read operations
            members.write: Access to members.write operations
            members.delete: Access to members.delete operations
            team_data.governance.write: Access to team data.governance.write operations
  schemas:
    GetAccountArg:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - account_id
    Account:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        name:
          $ref: '#/components/schemas/Name'
        email:
          type: string
        email_verified:
          type: boolean
        profile_photo_url:
          type: string
          nullable: true
        disabled:
          type: boolean
      required:
      - account_id
      - name
      - email
      - email_verified
      - disabled
      description: |-
        The amount of detail revealed about an account depends on the user
            being queried and the user making the query.
    BasicAccount:
      allOf:
      - $ref: '#/components/schemas/Account'
      - type: object
        properties:
          is_teammate:
            type: boolean
          team_member_id:
            type: string
            nullable: true
        required:
        - is_teammate
        description: Basic information about any account.
      description: Basic information about any account.
    FullAccount:
      allOf:
      - $ref: '#/components/schemas/Account'
      - type: object
        properties:
          country:
            type: string
            minLength: 2
            maxLength: 2
            nullable: true
          locale:
            type: string
            minLength: 2
          referral_link:
            type: string
          team:
            $ref: '#/components/schemas/FullTeam'
          team_member_id:
            type: string
            nullable: true
          is_paired:
            type: boolean
          account_type:
            $ref: '#/components/schemas/AccountType'
          root_info:
            $ref: '#/components/schemas/RootInfo'
        required:
        - locale
        - referral_link
        - is_paired
        - account_type
        - root_info
        description: Detailed information about the current user's account.
      description: Detailed information about the current user's account.
    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      description: Information about a team.
    FullTeam:
      allOf:
      - $ref: '#/components/schemas/Team'
      - type: object
        properties:
          sharing_policies:
            $ref: '#/components/schemas/TeamSharingPolicies'
          office_addin_policy:
            $ref: '#/components/schemas/OfficeAddInPolicy'
        required:
        - sharing_policies
        - office_addin_policy
        description: Detailed information about a team.
      description: Detailed information about a team.
    Name:
      type: object
      properties:
        given_name:
          type: string
        surname:
          type: string
        familiar_name:
          type: string
        display_name:
          type: string
        abbreviated_name:
          type: string
      required:
      - given_name
      - surname
      - familiar_name
      - display_name
      - abbreviated_name
      description: Representations for a person's name to assist with internationalization.
    SpaceUsage:
      type: object
      properties:
        used:
          type: integer
          format: int64
        allocation:
          $ref: '#/components/schemas/SpaceAllocation'
      required:
      - used
      - allocation
      description: Information about a user's space usage and quota.
    IndividualSpaceAllocation:
      type: object
      properties:
        allocated:
          type: integer
          format: int64
      required:
      - allocated
    TeamSpaceAllocation:
      type: object
      properties:
        used:
          type: integer
          format: int64
        allocated:
          type: integer
          format: int64
        user_within_team_space_allocated:
          type: integer
          format: int64
        user_within_team_space_limit_type:
          $ref: '#/components/schemas/MemberSpaceLimitType'
        user_within_team_space_used_cached:
          type: integer
          format: int64
      required:
      - used
      - allocated
      - user_within_team_space_allocated
      - user_within_team_space_limit_type
      - user_within_team_space_used_cached
    GetAccountBatchArg:
      type: object
      properties:
        account_ids:
          type: array
          items:
            $ref: '#/components/schemas/AccountId'
      required:
      - account_ids
    UserFeaturesGetValuesBatchArg:
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/UserFeature'
      required:
      - features
    UserFeaturesGetValuesBatchResult:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/UserFeatureValue'
      required:
      - values
    GetAccountError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - no_account
      required:
      - .tag
    SpaceAllocation:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - individual
          - team
      required:
      - .tag
      description: Space is allocated differently based on the type of account.
      discriminator:
        propertyName: .tag
        mapping:
          individual: '#/components/schemas/IndividualSpaceAllocation'
          team: '#/components/schemas/TeamSpaceAllocation'
    GetAccountBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - no_account
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          no_account: '#/components/schemas/AccountId'
    UserFeature:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - paper_as_files
          - file_locking
      required:
      - .tag
      description: A set of features that a Dropbox User account may have configured.
    UserFeatureValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - paper_as_files
          - file_locking
      required:
      - .tag
      description: Values that correspond to entries in :type:`UserFeature`.
      discriminator:
        propertyName: .tag
        mapping:
          paper_as_files: '#/components/schemas/PaperAsFilesValue'
          file_locking: '#/components/schemas/FileLockingValue'
    PaperAsFilesValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - enabled
      required:
      - .tag
      description: 'The value for :field:`UserFeature.paper_as_files`.  '
      discriminator:
        propertyName: .tag
        mapping:
          enabled: '#/components/schemas/Boolean'
    FileLockingValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - enabled
      required:
      - .tag
      description: 'The value for :field:`UserFeature.file_locking`.  '
      discriminator:
        propertyName: .tag
        mapping:
          enabled: '#/components/schemas/Boolean'
    UserFeaturesGetValuesBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - empty_features_list
      required:
      - .tag
    GetAccountBatchResult:
      type: array
      items:
        $ref: '#/components/schemas/BasicAccount'
    ListMemberDevicesArg:
      type: object
      properties:
        team_member_id:
          type: string
        include_web_sessions:
          type: boolean
        include_desktop_clients:
          type: boolean
        include_mobile_clients:
          type: boolean
      required:
      - team_member_id
      - include_web_sessions
      - include_desktop_clients
      - include_mobile_clients
    DeviceSession:
      type: object
      properties:
        session_id:
          type: string
        ip_address:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        created:
          $ref: '#/components/schemas/DropboxTimestamp'
        updated:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - session_id
    ActiveWebSession:
      allOf:
      - $ref: '#/components/schemas/DeviceSession'
      - type: object
        properties:
          user_agent:
            type: string
          os:
            type: string
          browser:
            type: string
          expires:
            $ref: '#/components/schemas/DropboxTimestamp'
        required:
        - user_agent
        - os
        - browser
        description: Information on active web sessions.
      description: Information on active web sessions.
    DesktopClientSession:
      allOf:
      - $ref: '#/components/schemas/DeviceSession'
      - type: object
        properties:
          host_name:
            type: string
          client_type:
            $ref: '#/components/schemas/DesktopPlatform'
          client_version:
            type: string
          platform:
            type: string
          is_delete_on_unlink_supported:
            type: boolean
        required:
        - host_name
        - client_type
        - client_version
        - platform
        - is_delete_on_unlink_supported
        description: Information about linked Dropbox desktop client sessions.
      description: Information about linked Dropbox desktop client sessions.
    MobileClientSession:
      allOf:
      - $ref: '#/components/schemas/DeviceSession'
      - type: object
        properties:
          device_name:
            type: string
          client_type:
            $ref: '#/components/schemas/MobileClientPlatform'
          client_version:
            type: string
            nullable: true
          os_version:
            type: string
            nullable: true
          last_carrier:
            type: string
            nullable: true
        required:
        - device_name
        - client_type
        description: Information about linked Dropbox mobile client sessions.
      description: Information about linked Dropbox mobile client sessions.
    ListMemberDevicesResult:
      type: object
      properties:
        active_web_sessions:
          type: array
          items:
            $ref: '#/components/schemas/ActiveWebSession'
          nullable: true
        desktop_client_sessions:
          type: array
          items:
            $ref: '#/components/schemas/DesktopClientSession'
          nullable: true
        mobile_client_sessions:
          type: array
          items:
            $ref: '#/components/schemas/MobileClientSession'
          nullable: true
    ListMembersDevicesArg:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
        include_web_sessions:
          type: boolean
        include_desktop_clients:
          type: boolean
        include_mobile_clients:
          type: boolean
      required:
      - include_web_sessions
      - include_desktop_clients
      - include_mobile_clients
    MemberDevices:
      type: object
      properties:
        team_member_id:
          type: string
        web_sessions:
          type: array
          items:
            $ref: '#/components/schemas/ActiveWebSession'
          nullable: true
        desktop_clients:
          type: array
          items:
            $ref: '#/components/schemas/DesktopClientSession'
          nullable: true
        mobile_clients:
          type: array
          items:
            $ref: '#/components/schemas/MobileClientSession'
          nullable: true
      required:
      - team_member_id
      description: Information on devices of a team's member.
    ListMembersDevicesResult:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/MemberDevices'
        has_more:
          type: boolean
        cursor:
          type: string
          nullable: true
      required:
      - devices
      - has_more
    DeviceSessionArg:
      type: object
      properties:
        session_id:
          type: string
        team_member_id:
          type: string
      required:
      - session_id
      - team_member_id
    RevokeDesktopClientArg:
      allOf:
      - $ref: '#/components/schemas/DeviceSessionArg'
      - type: object
        properties:
          delete_on_unlink:
            type: boolean
        required:
        - delete_on_unlink
    RevokeDeviceSessionBatchArg:
      type: object
      properties:
        revoke_devices:
          type: array
          items:
            $ref: '#/components/schemas/RevokeDeviceSessionArg'
      required:
      - revoke_devices
    RevokeDeviceSessionStatus:
      type: object
      properties:
        success:
          type: boolean
        error_type:
          $ref: '#/components/schemas/RevokeDeviceSessionError'
      required:
      - success
    RevokeDeviceSessionBatchResult:
      type: object
      properties:
        revoke_devices_status:
          type: array
          items:
            $ref: '#/components/schemas/RevokeDeviceSessionStatus'
      required:
      - revoke_devices_status
    ListTeamDevicesArg:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
        include_web_sessions:
          type: boolean
        include_desktop_clients:
          type: boolean
        include_mobile_clients:
          type: boolean
      required:
      - include_web_sessions
      - include_desktop_clients
      - include_mobile_clients
    ListTeamDevicesResult:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/MemberDevices'
        has_more:
          type: boolean
        cursor:
          type: string
          nullable: true
      required:
      - devices
      - has_more
    DesktopPlatform:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - windows
          - mac
          - linux
      required:
      - .tag
    MobileClientPlatform:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - iphone
          - ipad
          - android
          - windows_phone
          - blackberry
      required:
      - .tag
    ListMemberDevicesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member_not_found
      required:
      - .tag
    ListMembersDevicesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - reset
      required:
      - .tag
    RevokeDeviceSessionArg:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - web_session
          - desktop_client
          - mobile_client
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          web_session: '#/components/schemas/DeviceSessionArg'
          desktop_client: '#/components/schemas/RevokeDesktopClientArg'
          mobile_client: '#/components/schemas/DeviceSessionArg'
    RevokeDeviceSessionError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - device_session_not_found
          - member_not_found
      required:
      - .tag
    RevokeDeviceSessionBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    ListTeamDevicesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - reset
      required:
      - .tag
    GroupMemberSelector:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupSelector'
        user:
          $ref: '#/components/schemas/UserSelectorArg'
      required:
      - group
      - user
      description: Argument for selecting a group and a single user.
    GroupMembersSelector:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupSelector'
        users:
          $ref: '#/components/schemas/UsersSelectorArg'
      required:
      - group
      - users
      description: Argument for selecting a group and a list of users.
    IncludeMembersArg:
      type: object
      properties:
        return_members:
          type: boolean
      required:
      - return_members
    GroupMemberInfo:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/MemberProfile'
        access_type:
          $ref: '#/components/schemas/GroupAccessType'
      required:
      - profile
      - access_type
      description: Profile of group member, and role in group.
    GroupFullInfo:
      allOf:
      - $ref: '#/components/schemas/GroupSummary'
      - type: object
        properties:
          members:
            type: array
            items:
              $ref: '#/components/schemas/GroupMemberInfo'
            nullable: true
          created:
            type: integer
            format: int64
        required:
        - created
        description: Full description of a group.
      description: Full description of a group.
    GroupsListArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - limit
    GroupsListResult:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupSummary'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - groups
      - cursor
      - has_more
    GroupsListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    GroupCreateArg:
      type: object
      properties:
        group_name:
          type: string
        add_creator_as_owner:
          type: boolean
        group_external_id:
          $ref: '#/components/schemas/GroupExternalId'
        group_management_type:
          $ref: '#/components/schemas/GroupManagementType'
      required:
      - group_name
      - add_creator_as_owner
    GroupUpdateArgs:
      allOf:
      - $ref: '#/components/schemas/IncludeMembersArg'
      - type: object
        properties:
          group:
            $ref: '#/components/schemas/GroupSelector'
          new_group_name:
            type: string
            nullable: true
          new_group_external_id:
            $ref: '#/components/schemas/GroupExternalId'
          new_group_management_type:
            $ref: '#/components/schemas/GroupManagementType'
        required:
        - group
    GroupMembersChangeResult:
      type: object
      properties:
        group_info:
          $ref: '#/components/schemas/GroupFullInfo'
        async_job_id:
          $ref: '#/components/schemas/AsyncJobId'
      required:
      - group_info
      - async_job_id
      description: Result returned by :route:`groups/members/add` and :route:`groups/members/remove`.
    MemberAccess:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        access_type:
          $ref: '#/components/schemas/GroupAccessType'
      required:
      - user
      - access_type
      description: Specify access type a member should have when joined to a group.
    GroupMembersAddArg:
      allOf:
      - $ref: '#/components/schemas/IncludeMembersArg'
      - type: object
        properties:
          group:
            $ref: '#/components/schemas/GroupSelector'
          members:
            type: array
            items:
              $ref: '#/components/schemas/MemberAccess'
        required:
        - group
        - members
    GroupMembersRemoveArg:
      allOf:
      - $ref: '#/components/schemas/IncludeMembersArg'
      - type: object
        properties:
          group:
            $ref: '#/components/schemas/GroupSelector'
          users:
            type: array
            items:
              $ref: '#/components/schemas/UserSelectorArg'
        required:
        - group
        - users
    GroupMembersSetAccessTypeArg:
      allOf:
      - $ref: '#/components/schemas/GroupMemberSelector'
      - type: object
        properties:
          access_type:
            $ref: '#/components/schemas/GroupAccessType'
          return_members:
            type: boolean
        required:
        - access_type
        - return_members
    GroupsMembersListArg:
      type: object
      properties:
        group:
          $ref: '#/components/schemas/GroupSelector'
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - group
      - limit
    GroupsMembersListResult:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/GroupMemberInfo'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - members
      - cursor
      - has_more
    GroupsMembersListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    GroupAccessType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member
          - owner
      required:
      - .tag
      description: Role of a user in group.
    GroupSelector:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_id
          - group_external_id
      required:
      - .tag
      description: Argument for selecting a single group, either by group_id or by external group ID.
      discriminator:
        propertyName: .tag
        mapping:
          group_id: '#/components/schemas/GroupId'
          group_external_id: '#/components/schemas/GroupExternalId'
    GroupSelectorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_not_found
      required:
      - .tag
      description: Error that can be raised when :type:`GroupSelector` is used.
    GroupSelectorWithTeamGroupError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - system_managed_group_disallowed
      required:
      - .tag
      description: |-
        Error that can be raised when :type:`GroupSelector` is used and team groups are disallowed from
            being used.
    GroupsSelector:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_ids
          - group_external_ids
      required:
      - .tag
      description: Argument for selecting a list of groups, either by group_ids, or external group IDs.
      discriminator:
        propertyName: .tag
        mapping:
          group_ids: '#/components/schemas/List(teamcommonGroupId)'
          group_external_ids: '#/components/schemas/List(String)'
    GroupMemberSelectorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member_not_in_group
      required:
      - .tag
      description: |-
        Error that can be raised when :type:`GroupMemberSelector` is used, and the user
            is required to be a member of the specified group.
    GroupMembersSelectorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member_not_in_group
      required:
      - .tag
      description: |-
        Error that can be raised when :type:`GroupMembersSelector` is used, and the users
            are required to be members of the specified group.
    GroupsListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    GroupsGetInfoItem:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - id_not_found
          - group_info
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          id_not_found: '#/components/schemas/String'
          group_info: '#/components/schemas/GroupFullInfo'
    GroupsGetInfoError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_not_on_team
      required:
      - .tag
    GroupCreateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_name_already_used
          - group_name_invalid
          - external_id_already_in_use
          - system_managed_group_disallowed
      required:
      - .tag
    GroupDeleteError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_already_deleted
      required:
      - .tag
    GroupUpdateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_name_already_used
          - group_name_invalid
          - external_id_already_in_use
      required:
      - .tag
    GroupMembersAddError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - duplicate_user
          - group_not_in_team
          - members_not_in_team
          - users_not_found
          - user_must_be_active_to_be_owner
          - user_cannot_be_manager_of_company_managed_group
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          members_not_in_team: '#/components/schemas/List(String)'
          users_not_found: '#/components/schemas/List(String)'
          user_cannot_be_manager_of_company_managed_group: '#/components/schemas/List(String)'
    GroupMembersRemoveError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group_not_in_team
          - members_not_in_team
          - users_not_found
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          members_not_in_team: '#/components/schemas/List(String)'
          users_not_found: '#/components/schemas/List(String)'
    GroupMemberSetAccessTypeError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_cannot_be_manager_of_company_managed_group
      required:
      - .tag
    GroupsMembersListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    GroupsPollError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_denied
      required:
      - .tag
    GroupsGetInfoResult:
      type: array
      items:
        $ref: '#/components/schemas/GroupsGetInfoItem'
    FilePermission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/FileAction'
        allow:
          type: boolean
        reason:
          $ref: '#/components/schemas/PermissionDeniedReason'
      required:
      - action
      - allow
      description: Whether the user is allowed to take the sharing action on the file.
    SharedFileMetadata:
      type: object
      properties:
        access_type:
          $ref: '#/components/schemas/AccessLevel'
        id:
          $ref: '#/components/schemas/FileId'
        expected_link_metadata:
          $ref: '#/components/schemas/ExpectedSharedContentLinkMetadata'
        link_metadata:
          $ref: '#/components/schemas/SharedContentLinkMetadata'
        name:
          type: string
        owner_display_names:
          type: array
          items:
            type: string
          nullable: true
        owner_team:
          $ref: '#/components/schemas/Team'
        parent_shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        path_display:
          type: string
          nullable: true
        path_lower:
          type: string
          nullable: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/FilePermission'
          nullable: true
        policy:
          $ref: '#/components/schemas/FolderPolicy'
        preview_url:
          type: string
        time_invited:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - id
      - name
      - policy
      - preview_url
      description: Properties of the shared file.
    FileMemberActionResult:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/MemberSelector'
        result:
          $ref: '#/components/schemas/FileMemberActionIndividualResult'
        sckey_sha1:
          type: string
          nullable: true
        invitation_signature:
          type: array
          items:
            type: string
          nullable: true
      required:
      - member
      - result
      description: Per-member result for :route:`add_file_member`.
    AddFileMemberArgs:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        members:
          type: array
          items:
            $ref: '#/components/schemas/MemberSelector'
        custom_message:
          type: string
          nullable: true
        quiet:
          type: boolean
        access_level:
          $ref: '#/components/schemas/AccessLevel'
        add_message_as_comment:
          type: boolean
      required:
      - file
      - members
      - quiet
      - access_level
      - add_message_as_comment
      description: Arguments for :route:`add_file_member`.
    UpdateFileMemberArgs:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        member:
          $ref: '#/components/schemas/MemberSelector'
        access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - file
      - member
      - access_level
      description: Arguments for :route:`update_file_member`.
    GetFileMetadataArg:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FileAction'
          nullable: true
      required:
      - file
      description: Arguments of :route:`get_file_metadata`.
    GetFileMetadataBatchArg:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/PathOrId'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FileAction'
          nullable: true
      required:
      - files
      description: Arguments of :route:`get_file_metadata/batch`.
    GetFileMetadataBatchResult:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        result:
          $ref: '#/components/schemas/GetFileMetadataIndividualResult'
      required:
      - file
      - result
      description: Per file results of :route:`get_file_metadata/batch`.
    ListFileMembersArg:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/MemberAction'
          nullable: true
        include_inherited:
          type: boolean
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 300
      required:
      - file
      - include_inherited
      - limit
      description: Arguments for :route:`list_file_members`.
    SharedFileMembers:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserFileMembershipInfo'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupMembershipInfo'
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/InviteeMembershipInfo'
        cursor:
          type: string
          nullable: true
      required:
      - users
      - groups
      - invitees
      description: |-
        Shared file user, group, and invitee membership.

            Used for the results of :route:`list_file_members` and
            :route:`list_file_members/continue`, and used as part of the results
            for :route:`list_file_members/batch`.
    UserFileMembershipInfo:
      allOf:
      - $ref: '#/components/schemas/UserMembershipInfo'
      - type: object
        properties:
          time_last_seen:
            $ref: '#/components/schemas/DropboxTimestamp'
          platform_type:
            $ref: '#/components/schemas/PlatformType'
        description: The information about a user member of the shared content with an appended last seen timestamp.
      description: The information about a user member of the shared content with an appended last seen timestamp.
    ListFileMembersBatchArg:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/PathOrId'
        limit:
          type: integer
          format: int32
          maximum: 20
      required:
      - files
      - limit
      description: Arguments for :route:`list_file_members/batch`.
    ListFileMembersBatchResult:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        result:
          $ref: '#/components/schemas/ListFileMembersIndividualResult'
      required:
      - file
      - result
      description: Per-file result for :route:`list_file_members/batch`.
    ListFileMembersCountResult:
      type: object
      properties:
        members:
          $ref: '#/components/schemas/SharedFileMembers'
        member_count:
          type: integer
          format: int64
      required:
      - members
      - member_count
    ListFileMembersContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
      description: Arguments for :route:`list_file_members/continue`.
    ListFilesArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 300
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FileAction'
          nullable: true
      required:
      - limit
      description: Arguments for :route:`list_received_files`.
    ListFilesResult:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SharedFileMetadata'
        cursor:
          type: string
          nullable: true
      required:
      - entries
      description: Success results for :route:`list_received_files`.
    ListFilesContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
      description: Arguments for :route:`list_received_files/continue`.
    RemoveFileMemberArg:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
        member:
          $ref: '#/components/schemas/MemberSelector'
      required:
      - file
      - member
      description: Arguments for :route:`remove_file_member_2`.
    RelinquishFileMembershipArg:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
      required:
      - file
    UnshareFileArg:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/PathOrId'
      required:
      - file
      description: Arguments for :route:`unshare_file`.
    SharingUserError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - email_unverified
      required:
      - .tag
      description: User account had a problem preventing this action.
    SharingFileAccessError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - no_permission
          - invalid_file
          - is_folder
          - inside_public_folder
          - inside_osx_package
      required:
      - .tag
      description: User could not access this file.
    FileErrorResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - file_not_found_error
          - invalid_file_action_error
          - permission_denied_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          file_not_found_error: '#/components/schemas/Id'
          invalid_file_action_error: '#/components/schemas/Id'
          permission_denied_error: '#/components/schemas/Id'
    FileAction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disable_viewer_info
          - edit_contents
          - enable_viewer_info
          - invite_viewer
          - invite_viewer_no_comment
          - invite_editor
          - unshare
          - relinquish_membership
          - share_link
          - create_link
          - create_view_link
          - create_edit_link
      required:
      - .tag
      description: Sharing actions that may be taken on files.
    ViewerInfoPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - enabled
          - disabled
      required:
      - .tag
    FileMemberActionIndividualResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - member_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/AccessLevel?'
          member_error: '#/components/schemas/FileMemberActionError'
    FileMemberRemoveActionResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - member_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/MemberAccessLevelResult'
          member_error: '#/components/schemas/FileMemberActionError'
    AddFileMemberError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - access_error
          - rate_limit
          - invalid_comment
      required:
      - .tag
      description: Errors for :route:`add_file_member`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
          access_error: '#/components/schemas/SharingFileAccessError'
    RemoveFileMemberError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - access_error
          - no_explicit_access
      required:
      - .tag
      description: Errors for :route:`remove_file_member_2`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
          access_error: '#/components/schemas/SharingFileAccessError'
          no_explicit_access: '#/components/schemas/MemberAccessLevelResult'
    FileMemberActionError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_member
          - no_permission
          - access_error
          - no_explicit_access
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharingFileAccessError'
          no_explicit_access: '#/components/schemas/MemberAccessLevelResult'
    GetFileMetadataError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - access_error
      required:
      - .tag
      description: Error result for :route:`get_file_metadata`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
          access_error: '#/components/schemas/SharingFileAccessError'
    GetFileMetadataIndividualResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - metadata
          - access_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          metadata: '#/components/schemas/SharedFileMetadata'
          access_error: '#/components/schemas/SharingFileAccessError'
    ListFileMembersError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - access_error
      required:
      - .tag
      description: Error for :route:`list_file_members`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
          access_error: '#/components/schemas/SharingFileAccessError'
    ListFileMembersIndividualResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - result
          - access_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          result: '#/components/schemas/ListFileMembersCountResult'
          access_error: '#/components/schemas/SharingFileAccessError'
    ListFileMembersContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - access_error
          - invalid_cursor
      required:
      - .tag
      description: Error for :route:`list_file_members/continue`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
          access_error: '#/components/schemas/SharingFileAccessError'
    ListFilesContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - invalid_cursor
      required:
      - .tag
      description: Error results for :route:`list_received_files/continue`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
    RelinquishFileMembershipError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - group_access
          - no_permission
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharingFileAccessError'
    UnshareFileError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_error
          - access_error
      required:
      - .tag
      description: Error result for :route:`unshare_file`.
      discriminator:
        propertyName: .tag
        mapping:
          user_error: '#/components/schemas/SharingUserError'
          access_error: '#/components/schemas/SharingFileAccessError'
    PathOrId:
      type: string
    ListMemberAppsArg:
      type: object
      properties:
        team_member_id:
          type: string
      required:
      - team_member_id
    ApiApp:
      type: object
      properties:
        app_id:
          type: string
        app_name:
          type: string
        publisher:
          type: string
          nullable: true
        publisher_url:
          type: string
          nullable: true
        linked:
          $ref: '#/components/schemas/DropboxTimestamp'
        is_app_folder:
          type: boolean
      required:
      - app_id
      - app_name
      - is_app_folder
      description: Information on linked third party applications.
    ListMemberAppsResult:
      type: object
      properties:
        linked_api_apps:
          type: array
          items:
            $ref: '#/components/schemas/ApiApp'
      required:
      - linked_api_apps
    ListMembersAppsArg:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
      description: Arguments for :route:`linked_apps/list_members_linked_apps`.
    MemberLinkedApps:
      type: object
      properties:
        team_member_id:
          type: string
        linked_api_apps:
          type: array
          items:
            $ref: '#/components/schemas/ApiApp'
      required:
      - team_member_id
      - linked_api_apps
      description: Information on linked applications of a team member.
    ListMembersAppsResult:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/MemberLinkedApps'
        has_more:
          type: boolean
        cursor:
          type: string
          nullable: true
      required:
      - apps
      - has_more
      description: Information returned by :route:`linked_apps/list_members_linked_apps`.
    RevokeLinkedApiAppArg:
      type: object
      properties:
        app_id:
          type: string
        team_member_id:
          type: string
        keep_app_folder:
          type: boolean
      required:
      - app_id
      - team_member_id
      - keep_app_folder
    RevokeLinkedApiAppBatchArg:
      type: object
      properties:
        revoke_linked_app:
          type: array
          items:
            $ref: '#/components/schemas/RevokeLinkedApiAppArg'
      required:
      - revoke_linked_app
    RevokeLinkedAppStatus:
      type: object
      properties:
        success:
          type: boolean
        error_type:
          $ref: '#/components/schemas/RevokeLinkedAppError'
      required:
      - success
    RevokeLinkedAppBatchResult:
      type: object
      properties:
        revoke_linked_app_status:
          type: array
          items:
            $ref: '#/components/schemas/RevokeLinkedAppStatus'
      required:
      - revoke_linked_app_status
    ListTeamAppsArg:
      type: object
      properties:
        cursor:
          type: string
          nullable: true
      description: Arguments for :route:`linked_apps/list_team_linked_apps`.
    ListTeamAppsResult:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/MemberLinkedApps'
        has_more:
          type: boolean
        cursor:
          type: string
          nullable: true
      required:
      - apps
      - has_more
      description: Information returned by :route:`linked_apps/list_team_linked_apps`.
    ListMemberAppsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member_not_found
      required:
      - .tag
      description: Error returned by :route:`linked_apps/list_member_linked_apps`.
    ListMembersAppsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - reset
      required:
      - .tag
      description: Error returned by :route:`linked_apps/list_members_linked_apps`.
    RevokeLinkedAppError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - app_not_found
          - member_not_found
          - app_folder_removal_not_supported
      required:
      - .tag
      description: Error returned by :route:`linked_apps/revoke_linked_app`.
    RevokeLinkedAppBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: Error returned by :route:`linked_apps/revoke_linked_app_batch`.
    ListTeamAppsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - reset
      required:
      - .tag
      description: Error returned by :route:`linked_apps/list_team_linked_apps`.
    GetTeamEventsArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
        account_id:
          $ref: '#/components/schemas/AccountId'
        time:
          $ref: '#/components/schemas/TimeRange'
        category:
          $ref: '#/components/schemas/EventCategory'
        event_type:
          $ref: '#/components/schemas/EventTypeArg'
      required:
      - limit
    GetTeamEventsResult:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/TeamEvent'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - events
      - cursor
      - has_more
    GetTeamEventsContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    GetTeamEventsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - account_id_not_found
          - invalid_time_range
          - invalid_filters
      required:
      - .tag
      description: Errors that can be raised when calling :route:`get_events`.
    GetTeamEventsContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - bad_cursor
          - reset
      required:
      - .tag
      description: Errors that can be raised when calling :route:`get_events/continue`.
      discriminator:
        propertyName: .tag
        mapping:
          reset: '#/components/schemas/DropboxTimestamp'
    TeamEventList:
      type: array
      items:
        $ref: '#/components/schemas/TeamEvent'
    TeamFolderIdArg:
      type: object
      properties:
        team_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
      required:
      - team_folder_id
    TeamFolderIdListArg:
      type: object
      properties:
        team_folder_ids:
          type: array
          items:
            $ref: '#/components/schemas/SharedFolderId'
      required:
      - team_folder_ids
    TeamFolderMetadata:
      type: object
      properties:
        team_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        name:
          type: string
        status:
          $ref: '#/components/schemas/TeamFolderStatus'
        is_team_shared_dropbox:
          type: boolean
        sync_setting:
          $ref: '#/components/schemas/SyncSetting'
        content_sync_settings:
          type: array
          items:
            $ref: '#/components/schemas/ContentSyncSetting'
      required:
      - team_folder_id
      - name
      - status
      - is_team_shared_dropbox
      - sync_setting
      - content_sync_settings
      description: Properties of a team folder.
    TeamFolderCreateArg:
      type: object
      properties:
        name:
          type: string
        sync_setting:
          $ref: '#/components/schemas/SyncSettingArg'
      required:
      - name
    TeamFolderRenameArg:
      allOf:
      - $ref: '#/components/schemas/TeamFolderIdArg'
      - type: object
        properties:
          name:
            type: string
        required:
        - name
    TeamFolderListArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - limit
    TeamFolderListResult:
      type: object
      properties:
        team_folders:
          type: array
          items:
            $ref: '#/components/schemas/TeamFolderMetadata'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - team_folders
      - cursor
      - has_more
      description: Result for :route:`team_folder/list` and :route:`team_folder/list/continue`.
    TeamFolderListError:
      type: object
      properties:
        access_error:
          $ref: '#/components/schemas/TeamFolderAccessError'
      required:
      - access_error
    TeamFolderListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    TeamFolderArchiveArg:
      allOf:
      - $ref: '#/components/schemas/TeamFolderIdArg'
      - type: object
        properties:
          force_async_off:
            type: boolean
        required:
        - force_async_off
    TeamFolderUpdateSyncSettingsArg:
      allOf:
      - $ref: '#/components/schemas/TeamFolderIdArg'
      - type: object
        properties:
          sync_setting:
            $ref: '#/components/schemas/SyncSettingArg'
          content_sync_settings:
            type: array
            items:
              $ref: '#/components/schemas/ContentSyncSettingArg'
            nullable: true
    TeamFolderStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - archived
          - archive_in_progress
      required:
      - .tag
    TeamFolderAccessError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_team_folder_id
          - no_access
      required:
      - .tag
    TeamFolderInvalidStatusError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - archived
          - archive_in_progress
      required:
      - .tag
    TeamFolderTeamSharedDropboxError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disallowed
      required:
      - .tag
    BaseTeamFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - status_error
          - team_shared_dropbox_error
      required:
      - .tag
      description: Base error that all errors for existing team folders should extend.
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/TeamFolderAccessError'
          status_error: '#/components/schemas/TeamFolderInvalidStatusError'
          team_shared_dropbox_error: '#/components/schemas/TeamFolderTeamSharedDropboxError'
    TeamFolderCreateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_folder_name
          - folder_name_already_used
          - folder_name_reserved
          - sync_settings_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          sync_settings_error: '#/components/schemas/SyncSettingsError'
    TeamFolderRenameError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_folder_name
          - folder_name_already_used
          - folder_name_reserved
      required:
      - .tag
    TeamFolderListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    TeamFolderGetInfoItem:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - id_not_found
          - team_folder_metadata
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          id_not_found: '#/components/schemas/String'
          team_folder_metadata: '#/components/schemas/TeamFolderMetadata'
    TeamFolderActivateError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    TeamFolderArchiveLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/TeamFolderMetadata'
    TeamFolderArchiveError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    TeamFolderArchiveJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/TeamFolderMetadata'
          failed: '#/components/schemas/TeamFolderArchiveError'
    TeamFolderPermanentlyDeleteError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    TeamFolderUpdateSyncSettingsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - sync_settings_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          sync_settings_error: '#/components/schemas/SyncSettingsError'
    UserGeneratedTag:
      type: object
      properties:
        tag_text:
          $ref: '#/components/schemas/TagText'
      required:
      - tag_text
    AddTagArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/Path'
        tag_text:
          $ref: '#/components/schemas/TagText'
      required:
      - path
      - tag_text
    RemoveTagArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/Path'
        tag_text:
          $ref: '#/components/schemas/TagText'
      required:
      - path
      - tag_text
    GetTagsArg:
      type: object
      properties:
        paths:
          type: array
          items:
            $ref: '#/components/schemas/Path'
      required:
      - paths
    PathToTags:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/Path'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
      - path
      - tags
    GetTagsResult:
      type: object
      properties:
        paths_to_tags:
          type: array
          items:
            $ref: '#/components/schemas/PathToTags'
      required:
      - paths_to_tags
    Tag:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_generated_tag
      required:
      - .tag
      description: Tag that can be added in multiple ways.
      discriminator:
        propertyName: .tag
        mapping:
          user_generated_tag: '#/components/schemas/UserGeneratedTag'
    BaseTagError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    AddTagError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_tags
      required:
      - .tag
    RemoveTagError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - tag_not_present
      required:
      - .tag
    TagText:
      type: string
      minLength: 1
      maxLength: 32
    TokenScopeError:
      type: object
      properties:
        required_scope:
          type: string
      required:
      - required_scope
    RateLimitError:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/RateLimitReason'
        retry_after:
          type: integer
          format: int64
      required:
      - reason
      - retry_after
      description: Error occurred because the app is being rate limited.
    TokenFromOAuth1Arg:
      type: object
      properties:
        oauth1_token:
          type: string
          minLength: 1
        oauth1_token_secret:
          type: string
          minLength: 1
      required:
      - oauth1_token
      - oauth1_token_secret
    TokenFromOAuth1Result:
      type: object
      properties:
        oauth2_token:
          type: string
          minLength: 1
      required:
      - oauth2_token
    AuthError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_access_token
          - invalid_select_user
          - invalid_select_admin
          - user_suspended
          - expired_access_token
          - missing_scope
          - route_access_denied
      required:
      - .tag
      description: Errors occurred during authentication.
      discriminator:
        propertyName: .tag
        mapping:
          missing_scope: '#/components/schemas/TokenScopeError'
    RateLimitReason:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_requests
          - too_many_write_operations
      required:
      - .tag
    TokenFromOAuth1Error:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_oauth1_token_info
          - app_id_mismatch
      required:
      - .tag
    AccessError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_account_type
          - paper_access_denied
      required:
      - .tag
      description: Error occurred because the account doesn't have permission to access the resource.
      discriminator:
        propertyName: .tag
        mapping:
          invalid_account_type: '#/components/schemas/InvalidAccountTypeError'
          paper_access_denied: '#/components/schemas/PaperAccessError'
    PaperAccessError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - paper_disabled
          - not_paper_user
      required:
      - .tag
    InvalidAccountTypeError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - endpoint
          - feature
      required:
      - .tag
    FileRequestDeadline:
      type: object
      properties:
        deadline:
          $ref: '#/components/schemas/DropboxTimestamp'
        allow_late_uploads:
          type: string
          nullable: true
      description: File request deadline
    FileRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FileRequestId'
        url:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
        destination:
          $ref: '#/components/schemas/Path'
        created:
          $ref: '#/components/schemas/DropboxTimestamp'
        deadline:
          $ref: '#/components/schemas/FileRequestDeadline'
        is_open:
          type: boolean
        file_count:
          type: integer
          format: int64
        description:
          type: string
          nullable: true
      required:
      - id
      - url
      - title
      - created
      - is_open
      - file_count
      description: |-
        A :link:`file request https://www.dropbox.com/help/9090` for receiving
            files into the user's Dropbox account.
    ListFileRequestsArg:
      type: object
      properties:
        limit:
          type: integer
          format: int64
      required:
      - limit
      description: Arguments for :route:`list:2`.
    ListFileRequestsV2Result:
      type: object
      properties:
        file_requests:
          type: array
          items:
            $ref: '#/components/schemas/FileRequest'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - file_requests
      - cursor
      - has_more
      description: Result for :route:`list:2` and :route:`list/continue`.
    ListFileRequestsContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    ListFileRequestsResult:
      type: object
      properties:
        file_requests:
          type: array
          items:
            $ref: '#/components/schemas/FileRequest'
      required:
      - file_requests
      description: Result for :route:`list`.
    GetFileRequestArgs:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FileRequestId'
      required:
      - id
      description: Arguments for :route:`get`.
    CreateFileRequestArgs:
      type: object
      properties:
        title:
          type: string
          minLength: 1
        destination:
          $ref: '#/components/schemas/Path'
        deadline:
          $ref: '#/components/schemas/FileRequestDeadline'
        open:
          type: boolean
        description:
          type: string
          nullable: true
      required:
      - title
      - destination
      - open
      description: Arguments for :route:`create`.
    UpdateFileRequestArgs:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FileRequestId'
        title:
          type: string
          minLength: 1
          nullable: true
        destination:
          $ref: '#/components/schemas/Path'
        deadline:
          $ref: '#/components/schemas/UpdateFileRequestDeadline'
        open:
          type: boolean
          nullable: true
        description:
          type: string
          nullable: true
      required:
      - id
      - deadline
      description: Arguments for :route:`update`.
    CountFileRequestsResult:
      type: object
      properties:
        file_request_count:
          type: integer
          format: int64
      required:
      - file_request_count
      description: Result for :route:`count`.
    DeleteFileRequestArgs:
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/FileRequestId'
      required:
      - ids
      description: Arguments for :route:`delete`.
    DeleteFileRequestsResult:
      type: object
      properties:
        file_requests:
          type: array
          items:
            $ref: '#/components/schemas/FileRequest'
      required:
      - file_requests
      description: Result for :route:`delete`.
    DeleteAllClosedFileRequestsResult:
      type: object
      properties:
        file_requests:
          type: array
          items:
            $ref: '#/components/schemas/FileRequest'
      required:
      - file_requests
      description: Result for :route:`delete_all_closed`.
    GracePeriod:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - one_day
          - two_days
          - seven_days
          - thirty_days
          - always
      required:
      - .tag
    GeneralFileRequestsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled_for_team
      required:
      - .tag
      description: There is an error accessing the file requests functionality.
    FileRequestError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - not_found
          - not_a_folder
          - app_lacks_access
          - no_permission
          - email_unverified
          - validation_error
      required:
      - .tag
      description: There is an error with the file request.
    ListFileRequestsContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
      description: There was an error retrieving the file requests.
    ListFileRequestsError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: There was an error retrieving the file requests.
    GetFileRequestError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: There was an error retrieving the specified file request.
    CreateFileRequestError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_location
          - rate_limit
      required:
      - .tag
      description: There was an error creating the file request.
    UpdateFileRequestError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: There is an error updating the file request.
    CountFileRequestsError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: There was an error counting the file requests.
    DeleteFileRequestError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - file_request_open
      required:
      - .tag
      description: There was an error deleting these file requests.
    DeleteAllClosedFileRequestsError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: There was an error deleting all closed file requests.
    FileRequestId:
      type: string
      minLength: 1
    FileRequestValidationError:
      type: string
      nullable: true
    RefPaperDoc:
      type: object
      properties:
        doc_id:
          $ref: '#/components/schemas/PaperDocId'
      required:
      - doc_id
    ListPaperDocsArgs:
      type: object
      properties:
        filter_by:
          $ref: '#/components/schemas/ListPaperDocsFilterBy'
        sort_by:
          $ref: '#/components/schemas/ListPaperDocsSortBy'
        sort_order:
          $ref: '#/components/schemas/ListPaperDocsSortOrder'
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - filter_by
      - sort_by
      - sort_order
      - limit
    ListPaperDocsContinueArgs:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    Cursor:
      type: object
      properties:
        value:
          type: string
        expiration:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - value
    ListPaperDocsResponse:
      type: object
      properties:
        doc_ids:
          type: array
          items:
            $ref: '#/components/schemas/PaperDocId'
        cursor:
          $ref: '#/components/schemas/Cursor'
        has_more:
          type: boolean
      required:
      - doc_ids
      - cursor
      - has_more
    PaperDocExport:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          export_format:
            $ref: '#/components/schemas/ExportFormat'
        required:
        - export_format
    PaperDocExportResult:
      type: object
      properties:
        owner:
          type: string
        title:
          type: string
        revision:
          type: integer
          format: int64
        mime_type:
          type: string
      required:
      - owner
      - title
      - revision
      - mime_type
    SharingPolicy:
      type: object
      properties:
        public_sharing_policy:
          $ref: '#/components/schemas/SharingPublicPolicyType'
        team_sharing_policy:
          $ref: '#/components/schemas/SharingTeamPolicyType'
      description: Sharing policy of Paper doc.
    Folder:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      description: Data structure representing a Paper folder.
    FoldersContainingPaperDoc:
      type: object
      properties:
        folder_sharing_policy_type:
          $ref: '#/components/schemas/FolderSharingPolicyType'
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
          nullable: true
      description: Metadata about Paper folders containing the specififed Paper doc.
    PaperDocSharingPolicy:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          sharing_policy:
            $ref: '#/components/schemas/SharingPolicy'
        required:
        - sharing_policy
    RemovePaperDocUser:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          member:
            $ref: '#/components/schemas/MemberSelector'
        required:
        - member
    AddMember:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/MemberSelector'
        access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - member
      - access_level
      description: The member and type of access the member should have when added to a shared folder.
    ListUsersOnPaperDocArgs:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          limit:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
          filter_by:
            $ref: '#/components/schemas/UserOnPaperDocFilter'
        required:
        - limit
        - filter_by
    ListUsersOnPaperDocContinueArgs:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          cursor:
            type: string
        required:
        - cursor
    InviteeInfoWithPermissionLevel:
      type: object
      properties:
        invitee:
          $ref: '#/components/schemas/InviteeInfo'
        permission_level:
          $ref: '#/components/schemas/PaperDocPermissionLevel'
      required:
      - invitee
      - permission_level
    UserInfoWithPermissionLevel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserInfo'
        permission_level:
          $ref: '#/components/schemas/PaperDocPermissionLevel'
      required:
      - user
      - permission_level
    ListUsersOnPaperDocResponse:
      type: object
      properties:
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/InviteeInfoWithPermissionLevel'
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfoWithPermissionLevel'
        doc_owner:
          $ref: '#/components/schemas/UserInfo'
        cursor:
          $ref: '#/components/schemas/Cursor'
        has_more:
          type: boolean
      required:
      - invitees
      - users
      - doc_owner
      - cursor
      - has_more
    AddPaperDocUser:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          members:
            type: array
            items:
              $ref: '#/components/schemas/AddMember'
          custom_message:
            type: string
            nullable: true
          quiet:
            type: boolean
        required:
        - members
        - quiet
    AddPaperDocUserMemberResult:
      type: object
      properties:
        member:
          $ref: '#/components/schemas/MemberSelector'
        result:
          $ref: '#/components/schemas/AddPaperDocUserResult'
      required:
      - member
      - result
      description: Per-member result for :route:`docs/users/add`.
    ListUsersOnFolderResponse:
      type: object
      properties:
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/InviteeInfo'
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
        cursor:
          $ref: '#/components/schemas/Cursor'
        has_more:
          type: boolean
      required:
      - invitees
      - users
      - cursor
      - has_more
    ListUsersOnFolderArgs:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          limit:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
        required:
        - limit
    ListUsersOnFolderContinueArgs:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          cursor:
            type: string
        required:
        - cursor
    PaperDocCreateArgs:
      type: object
      properties:
        parent_folder_id:
          type: string
          nullable: true
        import_format:
          $ref: '#/components/schemas/ImportFormat'
      required:
      - import_format
    PaperDocCreateUpdateResult:
      type: object
      properties:
        doc_id:
          type: string
        revision:
          type: integer
          format: int64
        title:
          type: string
      required:
      - doc_id
      - revision
      - title
    PaperDocUpdateArgs:
      allOf:
      - $ref: '#/components/schemas/RefPaperDoc'
      - type: object
        properties:
          doc_update_policy:
            $ref: '#/components/schemas/PaperDocUpdatePolicy'
          revision:
            type: integer
            format: int64
          import_format:
            $ref: '#/components/schemas/ImportFormat'
        required:
        - doc_update_policy
        - revision
        - import_format
    PaperFolderCreateArg:
      type: object
      properties:
        name:
          type: string
        parent_folder_id:
          type: string
          nullable: true
        is_team_folder:
          type: boolean
          nullable: true
      required:
      - name
    PaperFolderCreateResult:
      type: object
      properties:
        folder_id:
          type: string
      required:
      - folder_id
    ListPaperDocsFilterBy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - docs_accessed
          - docs_created
      required:
      - .tag
    ListPaperDocsSortBy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - accessed
          - modified
          - created
      required:
      - .tag
    ListPaperDocsSortOrder:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - ascending
          - descending
      required:
      - .tag
    ExportFormat:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - html
          - markdown
      required:
      - .tag
      description: The desired export format of the Paper doc.
    DocSubscriptionLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - ignore
          - every
          - no_email
      required:
      - .tag
      description: The subscription level of a Paper doc.
    FolderSubscriptionLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - none
          - activity_only
          - daily_emails
          - weekly_emails
      required:
      - .tag
      description: The subscription level of a Paper folder.
    FolderSharingPolicyType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team
          - invite_only
      required:
      - .tag
      description: |-
        The sharing policy of a Paper folder.

            The sharing policy of subfolders is inherited from the root folder.
    SharingTeamPolicyType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - people_with_link_can_edit
          - people_with_link_can_view_and_comment
          - invite_only
      required:
      - .tag
      description: The sharing policy type of the Paper doc.
    SharingPublicPolicyType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
      required:
      - .tag
    PaperDocPermissionLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - edit
          - view_and_comment
      required:
      - .tag
    UserOnPaperDocFilter:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - visited
          - shared
      required:
      - .tag
    AddPaperDocUserResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - unknown_error
          - sharing_outside_team_disabled
          - daily_limit_reached
          - user_is_owner
          - failed_user_data_retrieval
          - permission_already_granted
      required:
      - .tag
    PaperApiBaseError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - insufficient_permissions
      required:
      - .tag
    PaperApiCursorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - expired_cursor
          - invalid_cursor
          - wrong_user_in_cursor
          - reset
      required:
      - .tag
    DocLookupError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - doc_not_found
      required:
      - .tag
    ListDocsCursorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - cursor_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          cursor_error: '#/components/schemas/PaperApiCursorError'
    ListUsersCursorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - doc_not_found
          - cursor_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          cursor_error: '#/components/schemas/PaperApiCursorError'
    ImportFormat:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - html
          - markdown
          - plain_text
      required:
      - .tag
      description: The import format of the incoming Paper doc content.
    PaperDocCreateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - content_malformed
          - folder_not_found
          - doc_length_exceeded
          - image_size_exceeded
      required:
      - .tag
    PaperDocUpdatePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - update
          - overwrite
          - prepend
          - append
      required:
      - .tag
    PaperDocUpdateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - content_malformed
          - revision_mismatch
          - doc_length_exceeded
          - image_size_exceeded
          - doc_archived
          - doc_deleted
      required:
      - .tag
    PaperFolderCreateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - folder_not_found
          - invalid_folder_id
      required:
      - .tag
    PaperDocId:
      type: string
    NamespaceMetadata:
      type: object
      properties:
        name:
          type: string
        namespace_id:
          $ref: '#/components/schemas/SharedFolderId'
        namespace_type:
          $ref: '#/components/schemas/NamespaceType'
        team_member_id:
          $ref: '#/components/schemas/TeamMemberId'
      required:
      - name
      - namespace_id
      - namespace_type
      description: Properties of a namespace.
    TeamNamespacesListResult:
      type: object
      properties:
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceMetadata'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - namespaces
      - cursor
      - has_more
      description: Result for :route:`namespaces/list`.
    TeamNamespacesListArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - limit
    TeamNamespacesListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    NamespaceType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - app_folder
          - shared_folder
          - team_folder
          - team_member_folder
      required:
      - .tag
    TeamNamespacesListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    TeamNamespacesListError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_arg
      required:
      - .tag
    TeamMemberPolicies:
      type: object
      properties:
        sharing:
          $ref: '#/components/schemas/TeamSharingPolicies'
        emm_state:
          $ref: '#/components/schemas/EmmState'
        office_addin:
          $ref: '#/components/schemas/OfficeAddInPolicy'
        suggest_members_policy:
          $ref: '#/components/schemas/SuggestMembersPolicy'
      required:
      - sharing
      - emm_state
      - office_addin
      - suggest_members_policy
      description: Policies governing team members.
    TeamSharingPolicies:
      type: object
      properties:
        shared_folder_member_policy:
          $ref: '#/components/schemas/SharedFolderMemberPolicy'
        shared_folder_join_policy:
          $ref: '#/components/schemas/SharedFolderJoinPolicy'
        shared_link_create_policy:
          $ref: '#/components/schemas/SharedLinkCreatePolicy'
        group_creation_policy:
          $ref: '#/components/schemas/GroupCreation'
        shared_folder_link_restriction_policy:
          $ref: '#/components/schemas/SharedFolderBlanketLinkRestrictionPolicy'
      required:
      - shared_folder_member_policy
      - shared_folder_join_policy
      - shared_link_create_policy
      - group_creation_policy
      - shared_folder_link_restriction_policy
      description: Policies governing sharing within and outside of the team.
    SharedFolderMemberPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team
          - anyone
      required:
      - .tag
      description: Policy governing who can be a member of a folder shared by a team member.
    SharedFolderJoinPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - from_team_only
          - from_anyone
      required:
      - .tag
      description: Policy governing which shared folders a team member can join.
    SharedLinkCreatePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default_public
          - default_team_only
          - team_only
          - default_no_one
      required:
      - .tag
      description: |-
        Policy governing the visibility of shared links. This policy can apply to newly created shared
            links, or all shared links.
    SharedFolderBlanketLinkRestrictionPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - members
          - anyone
      required:
      - .tag
      description: Policy governing whether shared folder membership is required to access shared links.
    EmmState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - optional
          - required
      required:
      - .tag
    OfficeAddInPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    SsoPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - optional
          - required
      required:
      - .tag
    PaperDeploymentPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - full
          - partial
      required:
      - .tag
    RolloutMethod:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unlink_all
          - unlink_most_inactive
          - add_member_to_exceptions
      required:
      - .tag
    PaperEnabledPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
          - unspecified
      required:
      - .tag
    PasswordControlMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    PasswordStrengthPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - minimal_requirements
          - moderate_password
          - strong_password
      required:
      - .tag
    TwoStepVerificationPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - require_tfa_enable
          - require_tfa_disable
      required:
      - .tag
    TwoStepVerificationState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - required
          - optional
          - disabled
      required:
      - .tag
    SmartSyncPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - local
          - on_demand
      required:
      - .tag
    GroupCreation:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admins_and_members
          - admins_only
      required:
      - .tag
    ShowcaseEnabledPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling whether Showcase is enabled.
    ShowcaseDownloadPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling if files can be downloaded from Showcases by team members
    ShowcaseExternalSharingPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling if team members can share Showcases externally.
    CameraUploadsPolicyState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    SmarterSmartSyncPolicyState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    FileLockingPolicyState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    PaperDefaultFolderPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - everyone_in_team
          - invite_only
      required:
      - .tag
      description: Policy to set default access for newly created Paper folders.
    PaperDesktopPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling if team members can use Paper Desktop
    SuggestMembersPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    ComputerBackupPolicyState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
          - default
      required:
      - .tag
    ExternalDriveBackupPolicyState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
          - default
      required:
      - .tag
    FileProviderMigrationPolicyState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
          - default
      required:
      - .tag
    RemovedStatus:
      type: object
      properties:
        is_recoverable:
          type: boolean
        is_disconnected:
          type: boolean
      required:
      - is_recoverable
      - is_disconnected
    MemberProfile:
      type: object
      properties:
        team_member_id:
          $ref: '#/components/schemas/TeamMemberId'
        external_id:
          type: string
          nullable: true
        account_id:
          $ref: '#/components/schemas/AccountId'
        email:
          type: string
        email_verified:
          type: boolean
        secondary_emails:
          type: array
          items:
            $ref: '#/components/schemas/SecondaryEmail'
          nullable: true
        status:
          $ref: '#/components/schemas/TeamMemberStatus'
        name:
          $ref: '#/components/schemas/Name'
        membership_type:
          $ref: '#/components/schemas/TeamMembershipType'
        invited_on:
          $ref: '#/components/schemas/DropboxTimestamp'
        joined_on:
          $ref: '#/components/schemas/DropboxTimestamp'
        suspended_on:
          $ref: '#/components/schemas/DropboxTimestamp'
        persistent_id:
          type: string
          nullable: true
        is_directory_restricted:
          type: boolean
          nullable: true
        profile_photo_url:
          type: string
          nullable: true
      required:
      - team_member_id
      - email
      - email_verified
      - status
      - name
      - membership_type
      description: Basic member profile.
    TeamGetInfoResult:
      type: object
      properties:
        name:
          type: string
        team_id:
          type: string
        num_licensed_users:
          type: integer
          format: int64
        num_provisioned_users:
          type: integer
          format: int64
        num_used_licenses:
          type: integer
          format: int64
        policies:
          $ref: '#/components/schemas/TeamMemberPolicies'
      required:
      - name
      - team_id
      - num_licensed_users
      - num_provisioned_users
      - num_used_licenses
      - policies
    TokenGetAuthenticatedAdminResult:
      type: object
      properties:
        admin_profile:
          $ref: '#/components/schemas/TeamMemberProfile'
      required:
      - admin_profile
      description: Results for :route:`token/get_authenticated_admin`.
    FeaturesGetValuesBatchArg:
      type: object
      properties:
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
      required:
      - features
    FeaturesGetValuesBatchResult:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/FeatureValue'
      required:
      - values
    TeamMemberStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - invited
          - suspended
          - removed
      required:
      - .tag
      description: The user's status as a member of a specific team.
      discriminator:
        propertyName: .tag
        mapping:
          removed: '#/components/schemas/RemovedStatus'
    TeamMembershipType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - free
          - full
          - guest
      required:
      - .tag
    UserSelectorArg:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team_member_id
          - external_id
          - email
      required:
      - .tag
      description: Argument for selecting a single user, either by team_member_id, external_id or email.
      discriminator:
        propertyName: .tag
        mapping:
          team_member_id: '#/components/schemas/TeamMemberId'
          external_id: '#/components/schemas/MemberExternalId'
          email: '#/components/schemas/EmailAddress'
    UserSelectorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_not_found
      required:
      - .tag
      description: Error that can be returned whenever a struct derived from :type:`UserSelectorArg` is used.
    UsersSelectorArg:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team_member_ids
          - external_ids
          - emails
      required:
      - .tag
      description: Argument for selecting a list of users, either by team_member_ids, external_ids or emails.
      discriminator:
        propertyName: .tag
        mapping:
          team_member_ids: '#/components/schemas/List(teamcommonTeamMemberId)'
          external_ids: '#/components/schemas/List(teamcommonMemberExternalId)'
          emails: '#/components/schemas/List(commonEmailAddress)'
    TokenGetAuthenticatedAdminError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - mapping_not_found
          - admin_not_active
      required:
      - .tag
      description: Error returned by :route:`token/get_authenticated_admin`.
    Feature:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - upload_api_rate_limit
          - has_team_shared_dropbox
          - has_team_file_events
          - has_team_selective_sync
      required:
      - .tag
      description: A set of features that a Dropbox Business account may support.
    FeatureValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - upload_api_rate_limit
          - has_team_shared_dropbox
          - has_team_file_events
          - has_team_selective_sync
      required:
      - .tag
      description: |-
        The values correspond to entries in :type:`Feature`. You may get different value according
            to your Dropbox Business plan.
      discriminator:
        propertyName: .tag
        mapping:
          upload_api_rate_limit: '#/components/schemas/UploadApiRateLimitValue'
          has_team_shared_dropbox: '#/components/schemas/HasTeamSharedDropboxValue'
          has_team_file_events: '#/components/schemas/HasTeamFileEventsValue'
          has_team_selective_sync: '#/components/schemas/HasTeamSelectiveSyncValue'
    UploadApiRateLimitValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unlimited
          - limit
      required:
      - .tag
      description: The value for :field:`Feature.upload_api_rate_limit`.
      discriminator:
        propertyName: .tag
        mapping:
          limit: '#/components/schemas/UInt32'
    HasTeamSharedDropboxValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - has_team_shared_dropbox
      required:
      - .tag
      description: The value for :field:`Feature.has_team_shared_dropbox`.
      discriminator:
        propertyName: .tag
        mapping:
          has_team_shared_dropbox: '#/components/schemas/Boolean'
    HasTeamFileEventsValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - enabled
      required:
      - .tag
      description: The value for :field:`Feature.has_team_file_events`.
      discriminator:
        propertyName: .tag
        mapping:
          enabled: '#/components/schemas/Boolean'
    HasTeamSelectiveSyncValue:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - has_team_selective_sync
      required:
      - .tag
      description: The value for :field:`Feature.has_team_selective_sync`.
      discriminator:
        propertyName: .tag
        mapping:
          has_team_selective_sync: '#/components/schemas/Boolean'
    FeaturesGetValuesBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - empty_features_list
      required:
      - .tag
    DateRange:
      type: object
      properties:
        start_date:
          $ref: '#/components/schemas/Date'
        end_date:
          $ref: '#/components/schemas/Date'
      description: Input arguments that can be provided for most reports.
    StorageBucket:
      type: object
      properties:
        bucket:
          type: string
        users:
          type: integer
          format: int64
      required:
      - bucket
      - users
      description: Describes the number of users in a specific storage bucket.
    BaseDfbReport:
      type: object
      properties:
        start_date:
          type: string
      required:
      - start_date
      description: Base report structure.
    GetStorageReport:
      allOf:
      - $ref: '#/components/schemas/BaseDfbReport'
      - type: object
        properties:
          total_usage:
            $ref: '#/components/schemas/NumberPerDay'
          shared_usage:
            $ref: '#/components/schemas/NumberPerDay'
          unshared_usage:
            $ref: '#/components/schemas/NumberPerDay'
          shared_folders:
            $ref: '#/components/schemas/NumberPerDay'
          member_storage_map:
            type: array
            items:
              type: array
              items:
                $ref: '#/components/schemas/StorageBucket'
        required:
        - total_usage
        - shared_usage
        - unshared_usage
        - shared_folders
        - member_storage_map
        description: |-
          Storage Report Result.
              Each of the items in the storage report is an array of values, one value per day.
              If there is no data for a day, then the value will be None.
      description: |-
        Storage Report Result.
            Each of the items in the storage report is an array of values, one value per day.
            If there is no data for a day, then the value will be None.
    GetActivityReport:
      allOf:
      - $ref: '#/components/schemas/BaseDfbReport'
      - type: object
        properties:
          adds:
            $ref: '#/components/schemas/NumberPerDay'
          edits:
            $ref: '#/components/schemas/NumberPerDay'
          deletes:
            $ref: '#/components/schemas/NumberPerDay'
          active_users_28_day:
            $ref: '#/components/schemas/NumberPerDay'
          active_users_7_day:
            $ref: '#/components/schemas/NumberPerDay'
          active_users_1_day:
            $ref: '#/components/schemas/NumberPerDay'
          active_shared_folders_28_day:
            $ref: '#/components/schemas/NumberPerDay'
          active_shared_folders_7_day:
            $ref: '#/components/schemas/NumberPerDay'
          active_shared_folders_1_day:
            $ref: '#/components/schemas/NumberPerDay'
          shared_links_created:
            $ref: '#/components/schemas/NumberPerDay'
          shared_links_viewed_by_team:
            $ref: '#/components/schemas/NumberPerDay'
          shared_links_viewed_by_outside_user:
            $ref: '#/components/schemas/NumberPerDay'
          shared_links_viewed_by_not_logged_in:
            $ref: '#/components/schemas/NumberPerDay'
          shared_links_viewed_total:
            $ref: '#/components/schemas/NumberPerDay'
        required:
        - adds
        - edits
        - deletes
        - active_users_28_day
        - active_users_7_day
        - active_users_1_day
        - active_shared_folders_28_day
        - active_shared_folders_7_day
        - active_shared_folders_1_day
        - shared_links_created
        - shared_links_viewed_by_team
        - shared_links_viewed_by_outside_user
        - shared_links_viewed_by_not_logged_in
        - shared_links_viewed_total
        description: |-
          Activity Report Result.
              Each of the items in the storage report is an array of values, one value per day.
              If there is no data for a day, then the value will be None.
      description: |-
        Activity Report Result.
            Each of the items in the storage report is an array of values, one value per day.
            If there is no data for a day, then the value will be None.
    GetMembershipReport:
      allOf:
      - $ref: '#/components/schemas/BaseDfbReport'
      - type: object
        properties:
          team_size:
            $ref: '#/components/schemas/NumberPerDay'
          pending_invites:
            $ref: '#/components/schemas/NumberPerDay'
          members_joined:
            $ref: '#/components/schemas/NumberPerDay'
          suspended_members:
            $ref: '#/components/schemas/NumberPerDay'
          licenses:
            $ref: '#/components/schemas/NumberPerDay'
        required:
        - team_size
        - pending_invites
        - members_joined
        - suspended_members
        - licenses
        description: |-
          Membership Report Result.
              Each of the items in the storage report is an array of values, one value per day.
              If there is no data for a day, then the value will be None.
      description: |-
        Membership Report Result.
            Each of the items in the storage report is an array of values, one value per day.
            If there is no data for a day, then the value will be None.
    DevicesActive:
      type: object
      properties:
        windows:
          $ref: '#/components/schemas/NumberPerDay'
        macos:
          $ref: '#/components/schemas/NumberPerDay'
        linux:
          $ref: '#/components/schemas/NumberPerDay'
        ios:
          $ref: '#/components/schemas/NumberPerDay'
        android:
          $ref: '#/components/schemas/NumberPerDay'
        other:
          $ref: '#/components/schemas/NumberPerDay'
        total:
          $ref: '#/components/schemas/NumberPerDay'
      required:
      - windows
      - macos
      - linux
      - ios
      - android
      - other
      - total
      description: |-
        Each of the items is an array of values, one value per day.
            The value is the number of devices active within a time window, ending with that day.

            If there is no data for a day, then the value will be None.
    GetDevicesReport:
      allOf:
      - $ref: '#/components/schemas/BaseDfbReport'
      - type: object
        properties:
          active_1_day:
            $ref: '#/components/schemas/DevicesActive'
          active_7_day:
            $ref: '#/components/schemas/DevicesActive'
          active_28_day:
            $ref: '#/components/schemas/DevicesActive'
        required:
        - active_1_day
        - active_7_day
        - active_28_day
        description: |-
          Devices Report Result. Contains subsections for different time ranges of activity.
              Each of the items in each subsection of the storage report is an array of values,
              one value per day.
              If there is no data for a day, then the value will be None.
      description: |-
        Devices Report Result. Contains subsections for different time ranges of activity.
            Each of the items in each subsection of the storage report is an array of values,
            one value per day.
            If there is no data for a day, then the value will be None.
    TeamReportFailureReason:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - temporary_error
          - many_reports_at_once
          - too_much_data
      required:
      - .tag
    DateRangeError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: Errors that can originate from problems in input arguments to reports.
    NumberPerDay:
      type: array
      items:
        type: integer
        format: int64
        nullable: true
    RootInfo:
      type: object
      properties:
        root_namespace_id:
          $ref: '#/components/schemas/NamespaceId'
        home_namespace_id:
          $ref: '#/components/schemas/NamespaceId'
      required:
      - root_namespace_id
      - home_namespace_id
      description: Information about current user's root.
    TeamRootInfo:
      allOf:
      - $ref: '#/components/schemas/RootInfo'
      - type: object
        properties:
          home_path:
            type: string
        required:
        - home_path
        description: Root info when user is member of a team with a separate root namespace ID.
      description: Root info when user is member of a team with a separate root namespace ID.
    UserRootInfo:
      allOf:
      - $ref: '#/components/schemas/RootInfo'
      - type: object
        properties: {}
        description: |-
          Root info when user is not member of a team or
              the user is a member of a team and the team does not have a separate root namespace.
      description: |-
        Root info when user is not member of a team or
            the user is a member of a team and the team does not have a separate root namespace.
    PathRoot:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - home
          - root
          - namespace_id
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          root: '#/components/schemas/NamespaceId'
          namespace_id: '#/components/schemas/NamespaceId'
    PathRootError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_root
          - no_permission
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          invalid_root: '#/components/schemas/RootInfo'
    NamespaceId:
      type: string
    SharedFolderId:
      allOf:
      - $ref: '#/components/schemas/NamespaceId'
    OptionalNamePart:
      type: string
      maxLength: 100
    DisplayNameLegacy:
      type: string
    LanguageCode:
      type: string
      minLength: 2
    SessionId:
      type: string
    Date:
      type: string
      format: date-time
    NamePart:
      type: string
      minLength: 1
      maxLength: 100
    EmailAddress:
      type: string
      maxLength: 255
    DisplayName:
      type: string
    DropboxTimestamp:
      type: string
      format: date-time
    DeleteManualContactsArg:
      type: object
      properties:
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
      required:
      - email_addresses
    DeleteManualContactsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - contacts_not_found
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          contacts_not_found: '#/components/schemas/List(commonEmailAddress)'
    Metadata:
      type: object
      properties:
        name:
          type: string
        path_lower:
          type: string
          nullable: true
        path_display:
          type: string
          nullable: true
        parent_shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        preview_url:
          type: string
          nullable: true
      required:
      - name
      description: Metadata for a file or folder.
    HighlightSpan:
      type: object
      properties:
        highlight_str:
          type: string
        is_highlighted:
          type: boolean
      required:
      - highlight_str
      - is_highlighted
    SharingInfo:
      type: object
      properties:
        read_only:
          type: boolean
      required:
      - read_only
      description: Sharing info for a file or folder.
    FileSharingInfo:
      allOf:
      - $ref: '#/components/schemas/SharingInfo'
      - type: object
        properties:
          parent_shared_folder_id:
            $ref: '#/components/schemas/SharedFolderId'
          modified_by:
            $ref: '#/components/schemas/AccountId'
        required:
        - parent_shared_folder_id
        description: Sharing info for a file which is contained by a shared folder.
      description: Sharing info for a file which is contained by a shared folder.
    ExportInfo:
      type: object
      properties:
        export_as:
          type: string
          nullable: true
        export_options:
          type: array
          items:
            type: string
          nullable: true
      description: Export information for a file.
    FolderSharingInfo:
      allOf:
      - $ref: '#/components/schemas/SharingInfo'
      - type: object
        properties:
          parent_shared_folder_id:
            $ref: '#/components/schemas/SharedFolderId'
          shared_folder_id:
            $ref: '#/components/schemas/SharedFolderId'
          traverse_only:
            type: boolean
          no_access:
            type: boolean
        required:
        - traverse_only
        - no_access
        description: |-
          Sharing info for a folder which is contained in a shared folder or is a
              shared folder mount point.
      description: |-
        Sharing info for a folder which is contained in a shared folder or is a
            shared folder mount point.
    Dimensions:
      type: object
      properties:
        height:
          type: integer
          format: int64
        width:
          type: integer
          format: int64
      required:
      - height
      - width
      description: Dimensions for a photo or video.
    GpsCoordinates:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      required:
      - latitude
      - longitude
      description: GPS coordinates for a photo or video.
    MediaMetadata:
      type: object
      properties:
        dimensions:
          $ref: '#/components/schemas/Dimensions'
        location:
          $ref: '#/components/schemas/GpsCoordinates'
        time_taken:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Metadata for a photo or video.
    PhotoMetadata:
      allOf:
      - $ref: '#/components/schemas/MediaMetadata'
      - type: object
        properties: {}
        description: Metadata for a photo.
      description: Metadata for a photo.
    VideoMetadata:
      allOf:
      - $ref: '#/components/schemas/MediaMetadata'
      - type: object
        properties:
          duration:
            type: integer
            format: int64
            nullable: true
        description: Metadata for a video.
      description: Metadata for a video.
    SymlinkInfo:
      type: object
      properties:
        target:
          type: string
      required:
      - target
    FileLockMetadata:
      type: object
      properties:
        is_lockholder:
          type: boolean
          nullable: true
        lockholder_name:
          type: string
          nullable: true
        lockholder_account_id:
          $ref: '#/components/schemas/AccountId'
        created:
          $ref: '#/components/schemas/DropboxTimestamp'
    FileMetadata:
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - type: object
        properties:
          id:
            $ref: '#/components/schemas/Id'
          client_modified:
            $ref: '#/components/schemas/DropboxTimestamp'
          server_modified:
            $ref: '#/components/schemas/DropboxTimestamp'
          rev:
            $ref: '#/components/schemas/Rev'
          size:
            type: integer
            format: int64
          media_info:
            $ref: '#/components/schemas/MediaInfo'
          symlink_info:
            $ref: '#/components/schemas/SymlinkInfo'
          sharing_info:
            $ref: '#/components/schemas/FileSharingInfo'
          is_downloadable:
            type: boolean
          export_info:
            $ref: '#/components/schemas/ExportInfo'
          property_groups:
            type: array
            items:
              $ref: '#/components/schemas/PropertyGroup'
            nullable: true
          has_explicit_shared_members:
            type: boolean
            nullable: true
          content_hash:
            $ref: '#/components/schemas/Sha256HexHash'
          file_lock_info:
            $ref: '#/components/schemas/FileLockMetadata'
        required:
        - id
        - client_modified
        - server_modified
        - rev
        - size
        - is_downloadable
    FolderMetadata:
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - type: object
        properties:
          id:
            $ref: '#/components/schemas/Id'
          shared_folder_id:
            $ref: '#/components/schemas/SharedFolderId'
          sharing_info:
            $ref: '#/components/schemas/FolderSharingInfo'
          property_groups:
            type: array
            items:
              $ref: '#/components/schemas/PropertyGroup'
            nullable: true
        required:
        - id
    DeletedMetadata:
      allOf:
      - $ref: '#/components/schemas/Metadata'
      - type: object
        properties: {}
        description: Indicates that there used to be a file or folder at this path, but it no longer exists.
      description: Indicates that there used to be a file or folder at this path, but it no longer exists.
    GetMetadataArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        include_media_info:
          type: boolean
        include_deleted:
          type: boolean
        include_has_explicit_shared_members:
          type: boolean
        include_property_groups:
          $ref: '#/components/schemas/TemplateFilterBase'
      required:
      - path
      - include_media_info
      - include_deleted
      - include_has_explicit_shared_members
    FileOpsResult:
      type: object
      properties: {}
    ListFolderLongpollArg:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/ListFolderCursor'
        timeout:
          type: integer
          format: int64
          minimum: 30
          maximum: 480
      required:
      - cursor
      - timeout
    ListFolderLongpollResult:
      type: object
      properties:
        changes:
          type: boolean
        backoff:
          type: integer
          format: int64
          nullable: true
      required:
      - changes
    SharedLink:
      type: object
      properties:
        url:
          $ref: '#/components/schemas/SharedLinkUrl'
        password:
          type: string
          nullable: true
      required:
      - url
    ListFolderArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathROrId'
        recursive:
          type: boolean
        include_media_info:
          type: boolean
        include_deleted:
          type: boolean
        include_has_explicit_shared_members:
          type: boolean
        include_mounted_folders:
          type: boolean
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 2000
          nullable: true
        shared_link:
          $ref: '#/components/schemas/SharedLink'
        include_property_groups:
          $ref: '#/components/schemas/TemplateFilterBase'
        include_non_downloadable_files:
          type: boolean
      required:
      - path
      - recursive
      - include_media_info
      - include_deleted
      - include_has_explicit_shared_members
      - include_mounted_folders
      - include_non_downloadable_files
    ListFolderResult:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        cursor:
          $ref: '#/components/schemas/ListFolderCursor'
        has_more:
          type: boolean
      required:
      - entries
      - cursor
      - has_more
    ListFolderContinueArg:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/ListFolderCursor'
      required:
      - cursor
    ListFolderGetLatestCursorResult:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/ListFolderCursor'
      required:
      - cursor
    DownloadArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        rev:
          $ref: '#/components/schemas/Rev'
      required:
      - path
    DownloadZipArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
      required:
      - path
    DownloadZipResult:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/FolderMetadata'
      required:
      - metadata
    ExportArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        export_format:
          type: string
          nullable: true
      required:
      - path
    ExportMetadata:
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
          format: int64
        export_hash:
          $ref: '#/components/schemas/Sha256HexHash'
        paper_revision:
          type: integer
          format: int64
          nullable: true
      required:
      - name
      - size
    ExportResult:
      type: object
      properties:
        export_metadata:
          $ref: '#/components/schemas/ExportMetadata'
        file_metadata:
          $ref: '#/components/schemas/FileMetadata'
      required:
      - export_metadata
      - file_metadata
    UploadWriteFailed:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/WriteError'
        upload_session_id:
          type: string
      required:
      - reason
      - upload_session_id
    UploadSessionOffsetError:
      type: object
      properties:
        correct_offset:
          type: integer
          format: int64
      required:
      - correct_offset
    UploadSessionStartArg:
      type: object
      properties:
        close:
          type: boolean
        session_type:
          $ref: '#/components/schemas/UploadSessionType'
        content_hash:
          $ref: '#/components/schemas/Sha256HexHash'
      required:
      - close
    UploadSessionStartResult:
      type: object
      properties:
        session_id:
          type: string
      required:
      - session_id
    UploadSessionStartBatchArg:
      type: object
      properties:
        session_type:
          $ref: '#/components/schemas/UploadSessionType'
        num_sessions:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
      required:
      - num_sessions
    UploadSessionStartBatchResult:
      type: object
      properties:
        session_ids:
          type: array
          items:
            type: string
      required:
      - session_ids
    UploadSessionAppendArg:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/UploadSessionCursor'
        close:
          type: boolean
        content_hash:
          $ref: '#/components/schemas/Sha256HexHash'
      required:
      - cursor
      - close
    UploadSessionCursor:
      type: object
      properties:
        session_id:
          type: string
        offset:
          type: integer
          format: int64
      required:
      - session_id
      - offset
    CommitInfo:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePathOrId'
        mode:
          $ref: '#/components/schemas/WriteMode'
        autorename:
          type: boolean
        client_modified:
          $ref: '#/components/schemas/DropboxTimestamp'
        mute:
          type: boolean
        property_groups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroup'
          nullable: true
        strict_conflict:
          type: boolean
      required:
      - path
      - mode
      - autorename
      - mute
      - strict_conflict
    UploadSessionFinishArg:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/UploadSessionCursor'
        commit:
          $ref: '#/components/schemas/CommitInfo'
        content_hash:
          $ref: '#/components/schemas/Sha256HexHash'
      required:
      - cursor
      - commit
    UploadArg:
      allOf:
      - $ref: '#/components/schemas/CommitInfo'
      - type: object
        properties:
          content_hash:
            $ref: '#/components/schemas/Sha256HexHash'
    UploadSessionFinishBatchArg:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UploadSessionFinishArg'
      required:
      - entries
    UploadSessionFinishBatchResult:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UploadSessionFinishBatchResultEntry'
      required:
      - entries
    SearchArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathROrId'
        query:
          type: string
          maxLength: 1000
        start:
          type: integer
          format: int64
          maximum: 9999
        max_results:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
        mode:
          $ref: '#/components/schemas/SearchMode'
      required:
      - path
      - query
      - start
      - max_results
      - mode
    SearchMatch:
      type: object
      properties:
        match_type:
          $ref: '#/components/schemas/SearchMatchType'
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - match_type
      - metadata
    SearchResult:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/SearchMatch'
        more:
          type: boolean
        start:
          type: integer
          format: int64
      required:
      - matches
      - more
      - start
    SearchV2Arg:
      type: object
      properties:
        query:
          type: string
          maxLength: 1000
        options:
          $ref: '#/components/schemas/SearchOptions'
        match_field_options:
          $ref: '#/components/schemas/SearchMatchFieldOptions'
        include_highlights:
          type: boolean
          nullable: true
      required:
      - query
    SearchOptions:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathROrId'
        max_results:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
        order_by:
          $ref: '#/components/schemas/SearchOrderBy'
        file_status:
          $ref: '#/components/schemas/FileStatus'
        filename_only:
          type: boolean
        file_extensions:
          type: array
          items:
            type: string
          nullable: true
        file_categories:
          type: array
          items:
            $ref: '#/components/schemas/FileCategory'
          nullable: true
        account_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - max_results
      - file_status
      - filename_only
    SearchMatchFieldOptions:
      type: object
      properties:
        include_highlights:
          type: boolean
      required:
      - include_highlights
    SearchV2ContinueArg:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/SearchV2Cursor'
      required:
      - cursor
    SearchV2Result:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/SearchMatchV2'
        has_more:
          type: boolean
        cursor:
          $ref: '#/components/schemas/SearchV2Cursor'
      required:
      - matches
      - has_more
    SearchMatchV2:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/MetadataV2'
        match_type:
          $ref: '#/components/schemas/SearchMatchTypeV2'
        highlight_spans:
          type: array
          items:
            $ref: '#/components/schemas/HighlightSpan'
          nullable: true
      required:
      - metadata
    CreateFolderArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePath'
        autorename:
          type: boolean
      required:
      - path
      - autorename
    CreateFolderResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          metadata:
            $ref: '#/components/schemas/FolderMetadata'
        required:
        - metadata
    CreateFolderBatchArg:
      type: object
      properties:
        paths:
          type: array
          items:
            $ref: '#/components/schemas/WritePath'
        autorename:
          type: boolean
        force_async:
          type: boolean
      required:
      - paths
      - autorename
      - force_async
    CreateFolderEntryResult:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/FolderMetadata'
      required:
      - metadata
    CreateFolderBatchResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          entries:
            type: array
            items:
              $ref: '#/components/schemas/CreateFolderBatchResultEntry'
        required:
        - entries
    DeleteArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePathOrId'
        parent_rev:
          $ref: '#/components/schemas/Rev'
      required:
      - path
    DeleteBatchArg:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/DeleteArg'
      required:
      - entries
    DeleteBatchResultData:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - metadata
    DeleteResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          metadata:
            $ref: '#/components/schemas/Metadata'
        required:
        - metadata
    DeleteBatchResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          entries:
            type: array
            items:
              $ref: '#/components/schemas/DeleteBatchResultEntry'
        required:
        - entries
    RelocationPath:
      type: object
      properties:
        from_path:
          $ref: '#/components/schemas/WritePathOrId'
        to_path:
          $ref: '#/components/schemas/WritePathOrId'
      required:
      - from_path
      - to_path
    RelocationArg:
      allOf:
      - $ref: '#/components/schemas/RelocationPath'
      - type: object
        properties:
          allow_shared_folder:
            type: boolean
          autorename:
            type: boolean
          allow_ownership_transfer:
            type: boolean
        required:
        - allow_shared_folder
        - autorename
        - allow_ownership_transfer
    RelocationResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          metadata:
            $ref: '#/components/schemas/Metadata'
        required:
        - metadata
    RelocationBatchArgBase:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/RelocationPath'
        autorename:
          type: boolean
      required:
      - entries
      - autorename
    RelocationBatchV2Result:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          entries:
            type: array
            items:
              $ref: '#/components/schemas/RelocationBatchResultEntry'
        required:
        - entries
    RelocationBatchArg:
      allOf:
      - $ref: '#/components/schemas/RelocationBatchArgBase'
      - type: object
        properties:
          allow_shared_folder:
            type: boolean
          allow_ownership_transfer:
            type: boolean
        required:
        - allow_shared_folder
        - allow_ownership_transfer
    RelocationBatchResultData:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - metadata
    RelocationBatchResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          entries:
            type: array
            items:
              $ref: '#/components/schemas/RelocationBatchResultData'
        required:
        - entries
    MoveBatchArg:
      allOf:
      - $ref: '#/components/schemas/RelocationBatchArgBase'
      - type: object
        properties:
          allow_ownership_transfer:
            type: boolean
        required:
        - allow_ownership_transfer
    ThumbnailArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        format:
          $ref: '#/components/schemas/ThumbnailFormat'
        size:
          $ref: '#/components/schemas/ThumbnailSize'
        mode:
          $ref: '#/components/schemas/ThumbnailMode'
      required:
      - path
      - format
      - size
      - mode
    GetThumbnailBatchArg:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ThumbnailArg'
      required:
      - entries
      description: Arguments for :route:`get_thumbnail_batch`.
    GetThumbnailBatchResult:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/GetThumbnailBatchResultEntry'
      required:
      - entries
    GetThumbnailBatchResultData:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/FileMetadata'
        thumbnail:
          type: string
      required:
      - metadata
      - thumbnail
    MinimalFileLinkMetadata:
      type: object
      properties:
        url:
          type: string
        id:
          $ref: '#/components/schemas/Id'
        path:
          type: string
          nullable: true
        rev:
          $ref: '#/components/schemas/Rev'
      required:
      - url
      - rev
    PreviewResult:
      type: object
      properties:
        file_metadata:
          $ref: '#/components/schemas/FileMetadata'
        link_metadata:
          $ref: '#/components/schemas/MinimalFileLinkMetadata'
    SharedLinkFileInfo:
      type: object
      properties:
        url:
          type: string
        path:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      required:
      - url
    ThumbnailV2Arg:
      type: object
      properties:
        resource:
          $ref: '#/components/schemas/PathOrLink'
        format:
          $ref: '#/components/schemas/ThumbnailFormat'
        size:
          $ref: '#/components/schemas/ThumbnailSize'
        mode:
          $ref: '#/components/schemas/ThumbnailMode'
      required:
      - resource
      - format
      - size
      - mode
    PreviewArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        rev:
          $ref: '#/components/schemas/Rev'
      required:
      - path
    ListRevisionsArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathOrId'
        mode:
          $ref: '#/components/schemas/ListRevisionsMode'
        limit:
          type: integer
          format: int64
          minimum: 1
          maximum: 100
      required:
      - path
      - mode
      - limit
    ListRevisionsResult:
      type: object
      properties:
        is_deleted:
          type: boolean
        server_deleted:
          $ref: '#/components/schemas/DropboxTimestamp'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
      required:
      - is_deleted
      - entries
    RestoreArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePath'
        rev:
          $ref: '#/components/schemas/Rev'
      required:
      - path
      - rev
    GetTemporaryLinkArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
      required:
      - path
    GetTemporaryLinkResult:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/FileMetadata'
        link:
          type: string
      required:
      - metadata
      - link
    GetTemporaryUploadLinkArg:
      type: object
      properties:
        commit_info:
          $ref: '#/components/schemas/CommitInfo'
        duration:
          type: number
          format: double
      required:
      - commit_info
      - duration
    GetTemporaryUploadLinkResult:
      type: object
      properties:
        link:
          type: string
      required:
      - link
    GetCopyReferenceArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
      required:
      - path
    GetCopyReferenceResult:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        copy_reference:
          type: string
        expires:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - metadata
      - copy_reference
      - expires
    SaveCopyReferenceArg:
      type: object
      properties:
        copy_reference:
          type: string
        path:
          $ref: '#/components/schemas/Path'
      required:
      - copy_reference
      - path
    SaveCopyReferenceResult:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
      required:
      - metadata
    SaveUrlArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/Path'
        url:
          type: string
      required:
      - path
      - url
    AlphaGetMetadataArg:
      allOf:
      - $ref: '#/components/schemas/GetMetadataArg'
      - type: object
        properties:
          include_property_templates:
            type: array
            items:
              $ref: '#/components/schemas/TemplateId'
            nullable: true
    ContentSyncSettingArg:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FileId'
        sync_setting:
          $ref: '#/components/schemas/SyncSettingArg'
      required:
      - id
      - sync_setting
    ContentSyncSetting:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/FileId'
        sync_setting:
          $ref: '#/components/schemas/SyncSetting'
      required:
      - id
      - sync_setting
    SingleUserLock:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/DropboxTimestamp'
        lock_holder_account_id:
          $ref: '#/components/schemas/AccountId'
        lock_holder_team_id:
          type: string
          nullable: true
      required:
      - created
      - lock_holder_account_id
    FileLock:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/FileLockContent'
      required:
      - content
    UnlockFileArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePathOrId'
      required:
      - path
    LockFileResult:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
        lock:
          $ref: '#/components/schemas/FileLock'
      required:
      - metadata
      - lock
    LockConflictError:
      type: object
      properties:
        lock:
          $ref: '#/components/schemas/FileLock'
      required:
      - lock
    LockFileBatchResult:
      allOf:
      - $ref: '#/components/schemas/FileOpsResult'
      - type: object
        properties:
          entries:
            type: array
            items:
              $ref: '#/components/schemas/LockFileResultEntry'
        required:
        - entries
    LockFileArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePathOrId'
      required:
      - path
    LockFileBatchArg:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LockFileArg'
      required:
      - entries
    UnlockFileBatchArg:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UnlockFileArg'
      required:
      - entries
    PaperCreateArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/Path'
        import_format:
          $ref: '#/components/schemas/ImportFormat'
      required:
      - path
      - import_format
    PaperCreateResult:
      type: object
      properties:
        url:
          type: string
        result_path:
          type: string
        file_id:
          $ref: '#/components/schemas/FileId'
        paper_revision:
          type: integer
          format: int64
      required:
      - url
      - result_path
      - file_id
      - paper_revision
    PaperUpdateArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/WritePathOrId'
        import_format:
          $ref: '#/components/schemas/ImportFormat'
        doc_update_policy:
          $ref: '#/components/schemas/PaperDocUpdatePolicy'
        paper_revision:
          type: integer
          format: int64
          nullable: true
      required:
      - path
      - import_format
      - doc_update_policy
    PaperUpdateResult:
      type: object
      properties:
        paper_revision:
          type: integer
          format: int64
      required:
      - paper_revision
    MetadataV2:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - metadata
      required:
      - .tag
      description: Metadata for a file, folder or other resource types.
      discriminator:
        propertyName: .tag
        mapping:
          metadata: '#/components/schemas/Metadata'
    MediaInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - pending
          - metadata
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          metadata: '#/components/schemas/MediaMetadata'
    GetMetadataError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    ListFolderLongpollError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - reset
      required:
      - .tag
    ListFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - template_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
          template_error: '#/components/schemas/TemplateError'
    ListFolderContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - reset
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    DownloadError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - unsupported_file
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    DownloadZipError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - too_large
          - too_many_files
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    ExportError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - non_exportable
          - invalid_export_format
          - retry_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    UploadError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - properties_error
          - payload_too_large
          - content_hash_mismatch
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/UploadWriteFailed'
          properties_error: '#/components/schemas/InvalidPropertyGroupError'
    UploadSessionStartError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - concurrent_session_data_not_allowed
          - concurrent_session_close_not_allowed
          - payload_too_large
          - content_hash_mismatch
      required:
      - .tag
    UploadSessionLookupError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - not_found
          - incorrect_offset
          - closed
          - not_closed
          - too_large
          - concurrent_session_invalid_offset
          - concurrent_session_invalid_data_size
          - payload_too_large
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          incorrect_offset: '#/components/schemas/UploadSessionOffsetError'
    UploadSessionAppendError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - content_hash_mismatch
      required:
      - .tag
    UploadSessionFinishError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - lookup_failed
          - path
          - properties_error
          - too_many_shared_folder_targets
          - too_many_write_operations
          - concurrent_session_data_not_allowed
          - concurrent_session_not_closed
          - concurrent_session_missing_data
          - payload_too_large
          - content_hash_mismatch
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          lookup_failed: '#/components/schemas/UploadSessionLookupError'
          path: '#/components/schemas/WriteError'
          properties_error: '#/components/schemas/InvalidPropertyGroupError'
    UploadSessionType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - sequential
          - concurrent
      required:
      - .tag
    WriteMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - add
          - overwrite
          - update
      required:
      - .tag
      description: |-
        Your intent when writing a file to some path. This is used to determine
            what constitutes a conflict and what the autorename strategy is.

            In some situations, the conflict behavior is identical:
            (a) If the target path doesn't refer to anything, the file is always written;
            no conflict.
            (b) If the target path refers to a folder, it's always a conflict.
            (c) If the target path refers to a file with identical contents, nothing gets
            written; no conflict.

            The conflict checking differs in the case where there's a file at the target
            path with contents different from the contents you're trying to write.
      discriminator:
        propertyName: .tag
        mapping:
          update: '#/components/schemas/Rev'
    UploadSessionFinishBatchResultEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - failure
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/FileMetadata'
          failure: '#/components/schemas/UploadSessionFinishError'
    UploadSessionFinishBatchJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/UploadSessionFinishBatchResult'
    UploadSessionFinishBatchLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by :route:`upload_session/finish_batch` that may either launch an
            asynchronous job or complete synchronously.
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/UploadSessionFinishBatchResult'
    SearchMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - filename
          - filename_and_content
          - deleted_filename
      required:
      - .tag
    SearchMatchType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - filename
          - content
          - both
      required:
      - .tag
      description: Indicates what type of match was found for a given item.
    SearchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - invalid_argument
          - internal_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
          invalid_argument: '#/components/schemas/String?'
    SearchOrderBy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - relevance
          - last_modified_time
      required:
      - .tag
    FileStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - deleted
      required:
      - .tag
    FileCategory:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - image
          - document
          - pdf
          - spreadsheet
          - presentation
          - audio
          - video
          - folder
          - paper
          - others
      required:
      - .tag
    SearchMatchTypeV2:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - filename
          - file_content
          - filename_and_content
          - image_content
      required:
      - .tag
      description: Indicates what type of match was found for a given item.
    LookupError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - malformed_path
          - not_found
          - not_file
          - not_folder
          - restricted_content
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          malformed_path: '#/components/schemas/String'
    WriteError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - malformed_path
          - conflict
          - no_write_permission
          - insufficient_space
          - disallowed_name
          - team_folder
          - operation_suppressed
          - too_many_write_operations
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          malformed_path: '#/components/schemas/MalformedPathError'
          conflict: '#/components/schemas/WriteConflictError'
    WriteConflictError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - file
          - folder
          - file_ancestor
      required:
      - .tag
    CreateFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/WriteError'
    CreateFolderEntryError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/WriteError'
    CreateFolderBatchResultEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - failure
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/CreateFolderEntryResult'
          failure: '#/components/schemas/CreateFolderEntryError'
    CreateFolderBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_files
      required:
      - .tag
    CreateFolderBatchJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/CreateFolderBatchResult'
          failed: '#/components/schemas/CreateFolderBatchError'
    CreateFolderBatchLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by :route:`create_folder_batch` that may either launch an
            asynchronous job or complete synchronously.
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/CreateFolderBatchResult'
    DeleteError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path_lookup
          - path_write
          - too_many_write_operations
          - too_many_files
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path_lookup: '#/components/schemas/LookupError'
          path_write: '#/components/schemas/WriteError'
    DeleteBatchResultEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - failure
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/DeleteBatchResultData'
          failure: '#/components/schemas/DeleteError'
    DeleteBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_write_operations
      required:
      - .tag
    DeleteBatchJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/DeleteBatchResult'
          failed: '#/components/schemas/DeleteBatchError'
    DeleteBatchLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by :route:`delete_batch` that may either launch an asynchronous job or complete
            synchronously.
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/DeleteBatchResult'
    RelocationError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - from_lookup
          - from_write
          - to
          - cant_copy_shared_folder
          - cant_nest_shared_folder
          - cant_move_folder_into_itself
          - too_many_files
          - duplicated_or_nested_paths
          - cant_transfer_ownership
          - insufficient_quota
          - internal_error
          - cant_move_shared_folder
          - cant_move_into_vault
          - cant_move_into_family
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          from_lookup: '#/components/schemas/LookupError'
          from_write: '#/components/schemas/WriteError'
          to: '#/components/schemas/WriteError'
          cant_move_into_vault: '#/components/schemas/MoveIntoVaultError'
          cant_move_into_family: '#/components/schemas/MoveIntoFamilyError'
    MoveIntoVaultError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - is_shared_folder
      required:
      - .tag
    MoveIntoFamilyError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - is_shared_folder
      required:
      - .tag
    RelocationBatchV2Launch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by :route:`copy_batch:2` or :route:`move_batch:2` that may either launch an
            asynchronous job or complete synchronously.
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/RelocationBatchV2Result'
    RelocationBatchV2JobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by :route:`copy_batch/check:2` or :route:`move_batch/check:2` that may either
            be in progress or completed with result for each entry.
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/RelocationBatchV2Result'
    RelocationBatchErrorEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - relocation_error
          - internal_error
          - too_many_write_operations
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          relocation_error: '#/components/schemas/RelocationError'
    RelocationBatchResultEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - failure
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/Metadata'
          failure: '#/components/schemas/RelocationBatchErrorEntry'
    RelocationBatchJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/RelocationBatchResult'
          failed: '#/components/schemas/RelocationBatchError'
    RelocationBatchLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by :route:`copy_batch` or :route:`move_batch` that may either launch an
            asynchronous job or complete synchronously.
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/RelocationBatchResult'
    RelocationBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_write_operations
      required:
      - .tag
    ThumbnailSize:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - w32h32
          - w64h64
          - w128h128
          - w256h256
          - w480h320
          - w640h480
          - w960h640
          - w1024h768
          - w2048h1536
      required:
      - .tag
    ThumbnailFormat:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - jpeg
          - png
      required:
      - .tag
    ThumbnailMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - strict
          - bestfit
          - fitone_bestfit
      required:
      - .tag
    GetThumbnailBatchResultEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - failure
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/GetThumbnailBatchResultData'
          failure: '#/components/schemas/ThumbnailError'
    GetThumbnailBatchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_files
      required:
      - .tag
    ThumbnailError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - unsupported_extension
          - unsupported_image
          - conversion_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    ThumbnailV2Error:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - unsupported_extension
          - unsupported_image
          - conversion_error
          - access_denied
          - not_found
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    PathOrLink:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - link
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/ReadPath'
          link: '#/components/schemas/SharedLinkFileInfo'
    PreviewError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - in_progress
          - unsupported_extension
          - unsupported_content
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    ListRevisionsMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - id
      required:
      - .tag
    ListRevisionsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    RestoreError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path_lookup
          - path_write
          - invalid_revision
          - in_progress
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path_lookup: '#/components/schemas/LookupError'
          path_write: '#/components/schemas/WriteError'
    GetTemporaryLinkError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - email_not_verified
          - unsupported_file
          - not_allowed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    GetCopyReferenceError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    SaveCopyReferenceError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - invalid_copy_reference
          - no_permission
          - not_found
          - too_many_files
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/WriteError'
    SaveUrlResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/FileMetadata'
    SaveUrlError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - download_failed
          - invalid_url
          - not_found
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/WriteError'
    SaveUrlJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/FileMetadata'
          failed: '#/components/schemas/SaveUrlError'
    AlphaGetMetadataError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - properties_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          properties_error: '#/components/schemas/LookUpPropertiesError'
    SyncSettingArg:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - not_synced
      required:
      - .tag
    SyncSetting:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - not_synced
          - not_synced_inactive
      required:
      - .tag
    SyncSettingsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - unsupported_combination
          - unsupported_configuration
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    FileLockContent:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unlocked
          - single_user
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          single_user: '#/components/schemas/SingleUserLock'
    LockFileError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path_lookup
          - too_many_write_operations
          - too_many_files
          - no_write_permission
          - cannot_be_locked
          - file_not_shared
          - lock_conflict
          - internal_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path_lookup: '#/components/schemas/LookupError'
          lock_conflict: '#/components/schemas/LockConflictError'
    LockFileResultEntry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - failure
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/LockFileResult'
          failure: '#/components/schemas/LockFileError'
    PaperContentError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - insufficient_permissions
          - content_malformed
          - doc_length_exceeded
          - image_size_exceeded
      required:
      - .tag
    PaperCreateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_path
          - email_unverified
          - invalid_file_extension
          - paper_disabled
      required:
      - .tag
    PaperUpdateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - revision_mismatch
          - doc_archived
          - doc_deleted
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    PathR:
      type: string
    CopyBatchArg:
      allOf:
      - $ref: '#/components/schemas/RelocationBatchArgBase'
    WritePath:
      type: string
    SearchV2Cursor:
      type: string
      minLength: 1
    FileId:
      type: string
      minLength: 4
    Rev:
      allOf:
      - $ref: '#/components/schemas/Rev'
    Sha256HexHash:
      type: string
      minLength: 64
      maxLength: 64
    Id:
      allOf:
      - $ref: '#/components/schemas/Id'
    SharedLinkUrl:
      type: string
    PathROrId:
      type: string
    MalformedPathError:
      type: string
      nullable: true
    ListFolderCursor:
      type: string
      minLength: 1
    Path:
      type: string
    ReadPath:
      allOf:
      - $ref: '#/components/schemas/ReadPath'
    WritePathOrId:
      type: string
    Route:
      type: object
      properties:
        auth:
          type: string
        host:
          type: string
        style:
          type: string
        is_preview:
          type: boolean
        allow_app_folder_app:
          type: boolean
        select_admin_mode:
          type: string
          nullable: true
        scope:
          type: string
          nullable: true
        is_cloud_doc_auth:
          type: boolean
      required:
      - auth
      - host
      - style
      - is_preview
      - allow_app_folder_app
      - is_cloud_doc_auth
    LinkSettings:
      type: object
      properties:
        access_level:
          $ref: '#/components/schemas/AccessLevel'
        audience:
          $ref: '#/components/schemas/LinkAudience'
        expiry:
          $ref: '#/components/schemas/LinkExpiry'
        password:
          $ref: '#/components/schemas/LinkPassword'
      description: Settings that apply to a link.
    LinkPermission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/LinkAction'
        allow:
          type: boolean
        reason:
          $ref: '#/components/schemas/PermissionDeniedReason'
      required:
      - action
      - allow
      description: Permissions for actions that can be performed on a link.
    SharedContentLinkMetadataBase:
      type: object
      properties:
        access_level:
          $ref: '#/components/schemas/AccessLevel'
        audience_options:
          type: array
          items:
            $ref: '#/components/schemas/LinkAudience'
        audience_restricting_shared_folder:
          $ref: '#/components/schemas/AudienceRestrictingSharedFolder'
        current_audience:
          $ref: '#/components/schemas/LinkAudience'
        expiry:
          $ref: '#/components/schemas/DropboxTimestamp'
        link_permissions:
          type: array
          items:
            $ref: '#/components/schemas/LinkPermission'
        password_protected:
          type: boolean
      required:
      - audience_options
      - current_audience
      - link_permissions
      - password_protected
    SharedContentLinkMetadata:
      allOf:
      - $ref: '#/components/schemas/SharedContentLinkMetadataBase'
      - type: object
        properties:
          audience_exceptions:
            $ref: '#/components/schemas/AudienceExceptions'
          url:
            type: string
        required:
        - url
        description: Metadata of a shared link for a file or folder.
      description: Metadata of a shared link for a file or folder.
    ExpectedSharedContentLinkMetadata:
      allOf:
      - $ref: '#/components/schemas/SharedContentLinkMetadataBase'
      - type: object
        properties: {}
        description: |-
          The expected metadata of a shared link for a file or folder when a link is first created for
              the content. Absent if the link already exists.
      description: |-
        The expected metadata of a shared link for a file or folder when a link is first created for
            the content. Absent if the link already exists.
    AudienceRestrictingSharedFolder:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        name:
          type: string
        audience:
          $ref: '#/components/schemas/LinkAudience'
      required:
      - shared_folder_id
      - name
      - audience
      description: |-
        Information about the shared folder that prevents the link audience for this link from being
            more restrictive.
    AudienceExceptions:
      type: object
      properties:
        count:
          type: integer
          format: int64
        exceptions:
          type: array
          items:
            $ref: '#/components/schemas/AudienceExceptionContentInfo'
      required:
      - count
      - exceptions
      description: |-
        The total count and truncated list of information of content inside this folder that has a
            different audience than the link on this folder. This is only returned for folders.
    AudienceExceptionContentInfo:
      type: object
      properties:
        name:
          type: string
      required:
      - name
      description: Information about the content that has a link audience different than that of this folder.
    LinkExpiry:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - remove_expiry
          - set_expiry
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          set_expiry: '#/components/schemas/DropboxTimestamp'
    LinkPassword:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - remove_password
          - set_password
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          set_password: '#/components/schemas/String'
    LinkAudience:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - public
          - team
          - no_one
          - password
          - members
      required:
      - .tag
    LinkAction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - change_access_level
          - change_audience
          - remove_expiry
          - remove_password
          - set_expiry
          - set_password
      required:
      - .tag
      description: Actions that can be performed on a link.
    PropertyField:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      description: |-
        Raw key/value data to be associated with a Dropbox file. Property fields are added to Dropbox
            files as a :type:`PropertyGroup`.
    PropertyGroup:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyField'
      required:
      - template_id
      - fields
      description: |-
        A subset of the property fields described by the corresponding :type:`PropertyGroupTemplate`.
            Properties are always added to a Dropbox file as a :type:`PropertyGroup`.
            The possible key names and value types in this group are defined by the
            corresponding :type:`PropertyGroupTemplate`.
    PropertyFieldTemplate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/PropertyType'
      required:
      - name
      - description
      - type
      description: Defines how a single property field may be structured. Used exclusively by :type:`PropertyGroupTemplate`.
    PropertyGroupTemplate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyFieldTemplate'
      required:
      - name
      - description
      - fields
      description: Defines how a property group may be structured.
    AddPropertiesArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathOrId'
        property_groups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroup'
      required:
      - path
      - property_groups
    OverwritePropertyGroupArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathOrId'
        property_groups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroup'
      required:
      - path
      - property_groups
    PropertyGroupUpdate:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
        add_or_update_fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyField'
          nullable: true
        remove_fields:
          type: array
          items:
            type: string
          nullable: true
      required:
      - template_id
    UpdatePropertiesArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathOrId'
        update_property_groups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroupUpdate'
      required:
      - path
      - update_property_groups
    RemovePropertiesArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathOrId'
        property_template_ids:
          type: array
          items:
            $ref: '#/components/schemas/TemplateId'
      required:
      - path
      - property_template_ids
    AddTemplateArg:
      allOf:
      - $ref: '#/components/schemas/PropertyGroupTemplate'
      - type: object
        properties: {}
    AddTemplateResult:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
      required:
      - template_id
    GetTemplateArg:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
      required:
      - template_id
    GetTemplateResult:
      allOf:
      - $ref: '#/components/schemas/PropertyGroupTemplate'
      - type: object
        properties: {}
    UpdateTemplateArg:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        add_fields:
          type: array
          items:
            $ref: '#/components/schemas/PropertyFieldTemplate'
          nullable: true
      required:
      - template_id
    UpdateTemplateResult:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
      required:
      - template_id
    ListTemplateResult:
      type: object
      properties:
        template_ids:
          type: array
          items:
            $ref: '#/components/schemas/TemplateId'
      required:
      - template_ids
    RemoveTemplateArg:
      type: object
      properties:
        template_id:
          $ref: '#/components/schemas/TemplateId'
      required:
      - template_id
    PropertiesSearchQuery:
      type: object
      properties:
        query:
          type: string
        mode:
          $ref: '#/components/schemas/PropertiesSearchMode'
        logical_operator:
          $ref: '#/components/schemas/LogicalOperator'
      required:
      - query
      - mode
      - logical_operator
    PropertiesSearchArg:
      type: object
      properties:
        queries:
          type: array
          items:
            $ref: '#/components/schemas/PropertiesSearchQuery'
        template_filter:
          $ref: '#/components/schemas/TemplateFilter'
      required:
      - queries
      - template_filter
    PropertiesSearchMatch:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        path:
          type: string
        is_deleted:
          type: boolean
        property_groups:
          type: array
          items:
            $ref: '#/components/schemas/PropertyGroup'
      required:
      - id
      - path
      - is_deleted
      - property_groups
    PropertiesSearchResult:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/PropertiesSearchMatch'
        cursor:
          $ref: '#/components/schemas/PropertiesSearchCursor'
      required:
      - matches
    PropertiesSearchContinueArg:
      type: object
      properties:
        cursor:
          $ref: '#/components/schemas/PropertiesSearchCursor'
      required:
      - cursor
    LookUpPropertiesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - property_group_not_found
      required:
      - .tag
    TemplateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - template_not_found
          - restricted_content
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          template_not_found: '#/components/schemas/TemplateId'
    PropertiesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - unsupported_folder
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    InvalidPropertyGroupError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - property_field_too_large
          - does_not_fit_template
          - duplicate_property_groups
      required:
      - .tag
    AddPropertiesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - property_group_already_exists
      required:
      - .tag
    UpdatePropertiesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - property_group_lookup
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          property_group_lookup: '#/components/schemas/LookUpPropertiesError'
    RemovePropertiesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - property_group_lookup
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          property_group_lookup: '#/components/schemas/LookUpPropertiesError'
    ModifyTemplateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - conflicting_property_names
          - too_many_properties
          - too_many_templates
          - template_attribute_too_large
      required:
      - .tag
    TemplateOwnerType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user
          - team
      required:
      - .tag
    LogicalOperator:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - or_operator
      required:
      - .tag
      description: Logical operator to join search queries together.
    PropertiesSearchMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - field_name
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          field_name: '#/components/schemas/String'
    TemplateFilterBase:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - filter_some
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          filter_some: '#/components/schemas/List(TemplateId, minitems=1)'
    TemplateFilter:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - filter_none
      required:
      - .tag
    PropertiesSearchError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - property_group_lookup
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          property_group_lookup: '#/components/schemas/LookUpPropertiesError'
    PropertiesSearchContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - reset
      required:
      - .tag
    PropertiesSearchCursor:
      type: string
      minLength: 1
    TemplateId:
      type: string
      minLength: 1
    JoinTeamDetails:
      type: object
      properties:
        linked_apps:
          type: array
          items:
            $ref: '#/components/schemas/UserLinkedAppLogInfo'
        linked_devices:
          type: array
          items:
            $ref: '#/components/schemas/LinkedDeviceLogInfo'
        linked_shared_folders:
          type: array
          items:
            $ref: '#/components/schemas/FolderLogInfo'
        was_linked_apps_truncated:
          type: boolean
          nullable: true
        was_linked_devices_truncated:
          type: boolean
          nullable: true
        was_linked_shared_folders_truncated:
          type: boolean
          nullable: true
        has_linked_apps:
          type: boolean
          nullable: true
        has_linked_devices:
          type: boolean
          nullable: true
        has_linked_shared_folders:
          type: boolean
          nullable: true
      required:
      - linked_apps
      - linked_devices
      - linked_shared_folders
      description: Additional information relevant when a new member joins the team.
    TeamInviteDetails:
      type: object
      properties:
        invite_method:
          $ref: '#/components/schemas/InviteMethod'
        additional_license_purchase:
          type: boolean
          nullable: true
      required:
      - invite_method
      description: Details about team invites
    AdminAlertingAlertConfiguration:
      type: object
      properties:
        alert_state:
          $ref: '#/components/schemas/AdminAlertingAlertStatePolicy'
        sensitivity_level:
          $ref: '#/components/schemas/AdminAlertingAlertSensitivity'
        recipients_settings:
          $ref: '#/components/schemas/RecipientsConfiguration'
        text:
          type: string
          nullable: true
        excluded_file_extensions:
          type: string
          nullable: true
      description: Alert configurations
    RecipientsConfiguration:
      type: object
      properties:
        recipient_setting_type:
          $ref: '#/components/schemas/AlertRecipientsSettingType'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
          nullable: true
        groups:
          type: array
          items:
            type: string
          nullable: true
      description: Recipients Configuration
    Certificate:
      type: object
      properties:
        subject:
          type: string
        issuer:
          type: string
        issue_date:
          type: string
        expiration_date:
          type: string
        serial_number:
          type: string
        sha1_fingerprint:
          type: string
        common_name:
          type: string
          nullable: true
      required:
      - subject
      - issuer
      - issue_date
      - expiration_date
      - serial_number
      - sha1_fingerprint
      description: Certificate details.
    FailureDetailsLogInfo:
      type: object
      properties:
        user_friendly_message:
          type: string
          nullable: true
        technical_error_message:
          type: string
          nullable: true
      description: Provides details about a failure
    TeamDetails:
      type: object
      properties:
        team:
          type: string
      required:
      - team
      description: More details about the team.
    OrganizationDetails:
      type: object
      properties:
        organization:
          type: string
      required:
      - organization
      description: More details about the organization.
    OrganizationName:
      type: object
      properties:
        organization:
          type: string
      required:
      - organization
      description: The name of the organization
    NonTrustedTeamDetails:
      type: object
      properties:
        team:
          type: string
      required:
      - team
      description: The email to which the request was sent
    ConnectedTeamName:
      type: object
      properties:
        team:
          type: string
      required:
      - team
      description: The name of the team
    FileRequestDetails:
      type: object
      properties:
        asset_index:
          type: integer
          format: int64
        deadline:
          $ref: '#/components/schemas/FileRequestDeadline'
      required:
      - asset_index
      description: File request details
    GeoLocationLogInfo:
      type: object
      properties:
        city:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        ip_address:
          $ref: '#/components/schemas/IpAddress'
      required:
      - ip_address
      description: Geographic location details.
    MemberTransferredInternalFields:
      type: object
      properties:
        source_team_id:
          $ref: '#/components/schemas/TeamId'
        target_team_id:
          $ref: '#/components/schemas/TeamId'
      required:
      - source_team_id
      - target_team_id
      description: Internal only - fields for target team computations
    RelocateAssetReferencesLogInfo:
      type: object
      properties:
        src_asset_index:
          type: integer
          format: int64
        dest_asset_index:
          type: integer
          format: int64
      required:
      - src_asset_index
      - dest_asset_index
      description: Provides the indices of the source asset and the destination asset for a relocate action.
    ShowcaseDocumentLogInfo:
      type: object
      properties:
        showcase_id:
          type: string
        showcase_title:
          type: string
      required:
      - showcase_id
      - showcase_title
      description: Showcase document's logged information.
    TeamLogInfo:
      type: object
      properties:
        display_name:
          type: string
      required:
      - display_name
      description: Team's logged information.
    SecondaryTeamRequestAcceptedDetails:
      type: object
      properties:
        primary_team:
          type: string
        sent_by:
          type: string
      required:
      - primary_team
      - sent_by
      description: Team merge request acceptance details shown to the secondary team
    PrimaryTeamRequestAcceptedDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Team merge request acceptance details shown to the primary team
    SecondaryTeamRequestCanceledDetails:
      type: object
      properties:
        sent_to:
          type: string
        sent_by:
          type: string
      required:
      - sent_to
      - sent_by
      description: Team merge request cancellation details shown to the secondary team
    PrimaryTeamRequestCanceledDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Team merge request cancellation details shown to the primary team
    SecondaryTeamRequestExpiredDetails:
      type: object
      properties:
        sent_to:
          type: string
      required:
      - sent_to
      description: Team merge request expiration details shown to the secondary team
    PrimaryTeamRequestExpiredDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Team merge request expiration details shown to the primary team
    SecondaryTeamRequestReminderDetails:
      type: object
      properties:
        sent_to:
          type: string
      required:
      - sent_to
      description: Team merge request reminder details shown to the secondary team
    PrimaryTeamRequestReminderDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_to:
          type: string
      required:
      - secondary_team
      - sent_to
      description: Team merge request reminder details shown to the primary team
    TeamName:
      type: object
      properties:
        team_display_name:
          type: string
        team_legal_name:
          type: string
      required:
      - team_display_name
      - team_legal_name
      description: Team name details
    TrustedNonTeamMemberLogInfo:
      allOf:
      - $ref: '#/components/schemas/UserLogInfo'
      - type: object
        properties:
          trusted_non_team_member_type:
            $ref: '#/components/schemas/TrustedNonTeamMemberType'
          team:
            $ref: '#/components/schemas/TeamLogInfo'
        required:
        - trusted_non_team_member_type
        description: User that is not a member of the team but considered trusted.
      description: User that is not a member of the team but considered trusted.
    UserNameLogInfo:
      type: object
      properties:
        given_name:
          type: string
        surname:
          type: string
        locale:
          type: string
          nullable: true
      required:
      - given_name
      - surname
      description: User's name logged information
    ApiSessionLogInfo:
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
      required:
      - request_id
      description: Api session.
    AppLogInfo:
      type: object
      properties:
        app_id:
          $ref: '#/components/schemas/AppId'
        display_name:
          type: string
          nullable: true
      description: App's logged information.
    DesktopSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/SessionLogInfo'
      - type: object
        properties: {}
        description: Desktop session.
      description: Desktop session.
    DeviceSessionLogInfo:
      type: object
      properties:
        ip_address:
          $ref: '#/components/schemas/IpAddress'
        created:
          $ref: '#/components/schemas/DropboxTimestamp'
        updated:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Device's session logged information.
    DesktopDeviceSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/DeviceSessionLogInfo'
      - type: object
        properties:
          session_info:
            $ref: '#/components/schemas/DesktopSessionLogInfo'
          host_name:
            type: string
          client_type:
            $ref: '#/components/schemas/DesktopPlatform'
          client_version:
            type: string
            nullable: true
          platform:
            type: string
          is_delete_on_unlink_supported:
            type: boolean
        required:
        - host_name
        - client_type
        - platform
        - is_delete_on_unlink_supported
        description: Information about linked Dropbox desktop client sessions
      description: Information about linked Dropbox desktop client sessions
    MobileDeviceSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/DeviceSessionLogInfo'
      - type: object
        properties:
          session_info:
            $ref: '#/components/schemas/MobileSessionLogInfo'
          device_name:
            type: string
          client_type:
            $ref: '#/components/schemas/MobileClientPlatform'
          client_version:
            type: string
            nullable: true
          os_version:
            type: string
            nullable: true
          last_carrier:
            type: string
            nullable: true
        required:
        - device_name
        - client_type
        description: Information about linked Dropbox mobile client sessions
      description: Information about linked Dropbox mobile client sessions
    WebDeviceSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/DeviceSessionLogInfo'
      - type: object
        properties:
          session_info:
            $ref: '#/components/schemas/WebSessionLogInfo'
          user_agent:
            type: string
          os:
            type: string
          browser:
            type: string
        required:
        - user_agent
        - os
        - browser
        description: Information on active web sessions
      description: Information on active web sessions
    LegacyDeviceSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/DeviceSessionLogInfo'
      - type: object
        properties:
          session_info:
            $ref: '#/components/schemas/SessionLogInfo'
          display_name:
            type: string
            nullable: true
          is_emm_managed:
            type: boolean
            nullable: true
          platform:
            type: string
            nullable: true
          mac_address:
            $ref: '#/components/schemas/IpAddress'
          os_version:
            type: string
            nullable: true
          device_type:
            type: string
            nullable: true
          client_version:
            type: string
            nullable: true
          legacy_uniq_id:
            type: string
            nullable: true
        description: Information on sessions, in legacy format
      description: Information on sessions, in legacy format
    SessionLogInfo:
      type: object
      properties:
        session_id:
          $ref: '#/components/schemas/SessionId'
      description: Session's logged information.
    UserLogInfo:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        display_name:
          $ref: '#/components/schemas/DisplayNameLegacy'
        email:
          $ref: '#/components/schemas/EmailAddress'
      description: User's logged information.
    UserLinkedAppLogInfo:
      allOf:
      - $ref: '#/components/schemas/AppLogInfo'
      - type: object
        properties: {}
        description: User linked app
      description: User linked app
    UserOrTeamLinkedAppLogInfo:
      allOf:
      - $ref: '#/components/schemas/AppLogInfo'
      - type: object
        properties: {}
        description: User or team linked app. Used when linked type is missing due to historical data gap.
      description: User or team linked app. Used when linked type is missing due to historical data gap.
    TeamMemberLogInfo:
      allOf:
      - $ref: '#/components/schemas/UserLogInfo'
      - type: object
        properties:
          team_member_id:
            $ref: '#/components/schemas/TeamMemberId'
          member_external_id:
            $ref: '#/components/schemas/MemberExternalId'
          team:
            $ref: '#/components/schemas/TeamLogInfo'
        description: Team member's logged information.
      description: Team member's logged information.
    TeamLinkedAppLogInfo:
      allOf:
      - $ref: '#/components/schemas/AppLogInfo'
      - type: object
        properties: {}
        description: Team linked app
      description: Team linked app
    FileOrFolderLogInfo:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/PathLogInfo'
        display_name:
          type: string
          nullable: true
        file_id:
          type: string
          nullable: true
        file_size:
          type: integer
          format: int64
          nullable: true
      required:
      - path
      description: Generic information relevant both for files and folders
    FileLogInfo:
      allOf:
      - $ref: '#/components/schemas/FileOrFolderLogInfo'
      - type: object
        properties: {}
        description: File's logged information.
      description: File's logged information.
    FolderLogInfo:
      allOf:
      - $ref: '#/components/schemas/FileOrFolderLogInfo'
      - type: object
        properties:
          file_count:
            type: integer
            format: int64
            nullable: true
        description: Folder's logged information.
      description: Folder's logged information.
    GroupLogInfo:
      type: object
      properties:
        group_id:
          $ref: '#/components/schemas/GroupId'
        display_name:
          type: string
        external_id:
          $ref: '#/components/schemas/GroupExternalId'
      required:
      - display_name
      description: Group's logged information.
    PathLogInfo:
      type: object
      properties:
        contextual:
          $ref: '#/components/schemas/FilePath'
        namespace_relative:
          $ref: '#/components/schemas/NamespaceRelativePathLogInfo'
      required:
      - namespace_relative
      description: Path's details.
    PaperDocumentLogInfo:
      type: object
      properties:
        doc_id:
          type: string
        doc_title:
          type: string
      required:
      - doc_id
      - doc_title
      description: Paper document's logged information.
    PaperFolderLogInfo:
      type: object
      properties:
        folder_id:
          type: string
        folder_name:
          type: string
      required:
      - folder_id
      - folder_name
      description: Paper folder's logged information.
    NonTeamMemberLogInfo:
      allOf:
      - $ref: '#/components/schemas/UserLogInfo'
      - type: object
        properties: {}
        description: Non team member's logged information.
      description: Non team member's logged information.
    NamespaceRelativePathLogInfo:
      type: object
      properties:
        ns_id:
          $ref: '#/components/schemas/NamespaceId'
        relative_path:
          $ref: '#/components/schemas/FilePath'
        is_shared_namespace:
          type: boolean
          nullable: true
      description: Namespace relative path details.
    WebSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/SessionLogInfo'
      - type: object
        properties: {}
        description: Web session.
      description: Web session.
    MobileSessionLogInfo:
      allOf:
      - $ref: '#/components/schemas/SessionLogInfo'
      - type: object
        properties: {}
        description: Mobile session.
      description: Mobile session.
    ResellerLogInfo:
      type: object
      properties:
        reseller_name:
          type: string
        reseller_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - reseller_name
      - reseller_email
      description: Reseller information.
    OriginLogInfo:
      type: object
      properties:
        geo_location:
          $ref: '#/components/schemas/GeoLocationLogInfo'
        access_method:
          $ref: '#/components/schemas/AccessMethodLogInfo'
      required:
      - access_method
      description: The origin from which the actor performed the action.
    DurationLogInfo:
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/TimeUnit'
        amount:
          type: integer
          format: int64
      required:
      - unit
      - amount
      description: 'Represents a time duration: unit and amount'
    ExternalUserLogInfo:
      type: object
      properties:
        user_identifier:
          type: string
        identifier_type:
          $ref: '#/components/schemas/IdentifierType'
      required:
      - user_identifier
      - identifier_type
      description: A user without a Dropbox account.
    MissingDetails:
      type: object
      properties:
        source_event_fields:
          type: string
          nullable: true
      description: An indication that an error occurred while retrieving the event. Some attributes of the event may be omitted as a result.
    AdminAlertingAlertStateChangedDetails:
      type: object
      properties:
        alert_name:
          type: string
        alert_severity:
          $ref: '#/components/schemas/AdminAlertSeverityEnum'
        alert_category:
          $ref: '#/components/schemas/AdminAlertCategoryEnum'
        alert_instance_id:
          type: string
        previous_value:
          $ref: '#/components/schemas/AdminAlertGeneralStateEnum'
        new_value:
          $ref: '#/components/schemas/AdminAlertGeneralStateEnum'
      required:
      - alert_name
      - alert_severity
      - alert_category
      - alert_instance_id
      - previous_value
      - new_value
      description: Changed an alert state.
    AdminAlertingChangedAlertConfigDetails:
      type: object
      properties:
        alert_name:
          type: string
        previous_alert_config:
          $ref: '#/components/schemas/AdminAlertingAlertConfiguration'
        new_alert_config:
          $ref: '#/components/schemas/AdminAlertingAlertConfiguration'
      required:
      - alert_name
      - previous_alert_config
      - new_alert_config
      description: Changed an alert setting.
    AdminAlertingTriggeredAlertDetails:
      type: object
      properties:
        alert_name:
          type: string
        alert_severity:
          $ref: '#/components/schemas/AdminAlertSeverityEnum'
        alert_category:
          $ref: '#/components/schemas/AdminAlertCategoryEnum'
        alert_instance_id:
          type: string
      required:
      - alert_name
      - alert_severity
      - alert_category
      - alert_instance_id
      description: Triggered security alert.
    RansomwareRestoreProcessCompletedDetails:
      type: object
      properties:
        status:
          type: string
        restored_files_count:
          type: integer
          format: int64
        restored_files_failed_count:
          type: integer
          format: int64
      required:
      - status
      - restored_files_count
      - restored_files_failed_count
      description: Completed ransomware restore process.
    RansomwareRestoreProcessStartedDetails:
      type: object
      properties:
        extension:
          type: string
      required:
      - extension
      description: Started ransomware restore process.
    AppBlockedByPermissionsDetails:
      type: object
      properties:
        app_info:
          $ref: '#/components/schemas/AppLogInfo'
      required:
      - app_info
      description: Failed to connect app for member.
    AppLinkTeamDetails:
      type: object
      properties:
        app_info:
          $ref: '#/components/schemas/AppLogInfo'
      required:
      - app_info
      description: Linked app for team.
    AppLinkUserDetails:
      type: object
      properties:
        app_info:
          $ref: '#/components/schemas/AppLogInfo'
      required:
      - app_info
      description: Linked app for member.
    AppUnlinkTeamDetails:
      type: object
      properties:
        app_info:
          $ref: '#/components/schemas/AppLogInfo'
      required:
      - app_info
      description: Unlinked app for team.
    AppUnlinkUserDetails:
      type: object
      properties:
        app_info:
          $ref: '#/components/schemas/AppLogInfo'
      required:
      - app_info
      description: Unlinked app for member.
    IntegrationConnectedDetails:
      type: object
      properties:
        integration_name:
          type: string
      required:
      - integration_name
      description: Connected integration for member.
    IntegrationDisconnectedDetails:
      type: object
      properties:
        integration_name:
          type: string
      required:
      - integration_name
      description: Disconnected integration for member.
    FileAddCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
      description: Added file comment.
    FileChangeCommentSubscriptionDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FileCommentNotificationPolicy'
        previous_value:
          $ref: '#/components/schemas/FileCommentNotificationPolicy'
      required:
      - new_value
      description: Subscribed to or unsubscribed from comment notifications for file.
    FileDeleteCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
      description: Deleted file comment.
    FileEditCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
        previous_comment_text:
          type: string
      required:
      - previous_comment_text
      description: Edited file comment.
    FileLikeCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
      description: Liked file comment.
    FileResolveCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
      description: Resolved file comment.
    FileUnlikeCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
      description: Unliked file comment.
    FileUnresolveCommentDetails:
      type: object
      properties:
        comment_text:
          type: string
          nullable: true
      description: Unresolved file comment.
    GovernancePolicyAddFoldersDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        folders:
          type: array
          items:
            type: string
          nullable: true
      required:
      - governance_policy_id
      - name
      description: Added folders to policy.
    GovernancePolicyAddFolderFailedDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        folder:
          type: string
        reason:
          type: string
          nullable: true
      required:
      - governance_policy_id
      - name
      - folder
      description: Couldn't add a folder to a policy.
    GovernancePolicyContentDisposedDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        disposition_type:
          $ref: '#/components/schemas/DispositionActionType'
      required:
      - governance_policy_id
      - name
      - disposition_type
      description: Content disposed.
    GovernancePolicyCreateDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        duration:
          $ref: '#/components/schemas/DurationLogInfo'
        folders:
          type: array
          items:
            type: string
          nullable: true
      required:
      - governance_policy_id
      - name
      - duration
      description: Activated a new policy.
    GovernancePolicyDeleteDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
      required:
      - governance_policy_id
      - name
      description: Deleted a policy.
    GovernancePolicyEditDetailsDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        attribute:
          type: string
        previous_value:
          type: string
        new_value:
          type: string
      required:
      - governance_policy_id
      - name
      - attribute
      - previous_value
      - new_value
      description: Edited policy.
    GovernancePolicyEditDurationDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        previous_value:
          $ref: '#/components/schemas/DurationLogInfo'
        new_value:
          $ref: '#/components/schemas/DurationLogInfo'
      required:
      - governance_policy_id
      - name
      - previous_value
      - new_value
      description: Changed policy duration.
    GovernancePolicyExportCreatedDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        export_name:
          type: string
      required:
      - governance_policy_id
      - name
      - export_name
      description: Created a policy download.
    GovernancePolicyExportRemovedDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        export_name:
          type: string
      required:
      - governance_policy_id
      - name
      - export_name
      description: Removed a policy download.
    GovernancePolicyRemoveFoldersDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        folders:
          type: array
          items:
            type: string
          nullable: true
        reason:
          type: string
          nullable: true
      required:
      - governance_policy_id
      - name
      description: Removed folders from policy.
    GovernancePolicyReportCreatedDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
      required:
      - governance_policy_id
      - name
      description: Created a summary report for a policy.
    GovernancePolicyZipPartDownloadedDetails:
      type: object
      properties:
        governance_policy_id:
          type: string
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyType'
        export_name:
          type: string
        part:
          type: string
          nullable: true
      required:
      - governance_policy_id
      - name
      - export_name
      description: Downloaded content from a policy.
    LegalHoldsActivateAHoldDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - legal_hold_id
      - name
      - start_date
      description: Activated a hold.
    LegalHoldsAddMembersDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
      required:
      - legal_hold_id
      - name
      description: Added members to a hold.
    LegalHoldsChangeHoldDetailsDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
        previous_value:
          type: string
        new_value:
          type: string
      required:
      - legal_hold_id
      - name
      - previous_value
      - new_value
      description: Edited details for a hold.
    LegalHoldsChangeHoldNameDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        previous_value:
          type: string
        new_value:
          type: string
      required:
      - legal_hold_id
      - previous_value
      - new_value
      description: Renamed a hold.
    LegalHoldsExportAHoldDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
        export_name:
          type: string
          nullable: true
      required:
      - legal_hold_id
      - name
      description: Exported hold.
    LegalHoldsExportCancelledDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
        export_name:
          type: string
      required:
      - legal_hold_id
      - name
      - export_name
      description: Canceled export for a hold.
    LegalHoldsExportDownloadedDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
        export_name:
          type: string
        part:
          type: string
          nullable: true
        file_name:
          type: string
          nullable: true
      required:
      - legal_hold_id
      - name
      - export_name
      description: Downloaded export for a hold.
    LegalHoldsExportRemovedDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
        export_name:
          type: string
      required:
      - legal_hold_id
      - name
      - export_name
      description: Removed export for a hold.
    LegalHoldsReleaseAHoldDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
      required:
      - legal_hold_id
      - name
      description: Released a hold.
    LegalHoldsRemoveMembersDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
      required:
      - legal_hold_id
      - name
      description: Removed members from a hold.
    LegalHoldsReportAHoldDetails:
      type: object
      properties:
        legal_hold_id:
          type: string
        name:
          type: string
      required:
      - legal_hold_id
      - name
      description: Created a summary report for a hold.
    DeviceChangeIpDesktopDetails:
      type: object
      properties:
        device_session_info:
          $ref: '#/components/schemas/DeviceSessionLogInfo'
      required:
      - device_session_info
      description: Changed IP address associated with active desktop session.
    DeviceChangeIpMobileDetails:
      type: object
      properties:
        device_session_info:
          $ref: '#/components/schemas/DeviceSessionLogInfo'
      description: Changed IP address associated with active mobile session.
    DeviceChangeIpWebDetails:
      type: object
      properties:
        user_agent:
          type: string
      required:
      - user_agent
      description: Changed IP address associated with active web session.
    DeviceDeleteOnUnlinkFailDetails:
      type: object
      properties:
        session_info:
          $ref: '#/components/schemas/SessionLogInfo'
        display_name:
          type: string
          nullable: true
        num_failures:
          type: integer
          format: int64
      required:
      - num_failures
      description: Failed to delete all files from unlinked device.
    DeviceDeleteOnUnlinkSuccessDetails:
      type: object
      properties:
        session_info:
          $ref: '#/components/schemas/SessionLogInfo'
        display_name:
          type: string
          nullable: true
      description: Deleted all files from unlinked device.
    DeviceLinkFailDetails:
      type: object
      properties:
        ip_address:
          $ref: '#/components/schemas/IpAddress'
        device_type:
          $ref: '#/components/schemas/DeviceType'
      required:
      - device_type
      description: Failed to link device.
    DeviceLinkSuccessDetails:
      type: object
      properties:
        device_session_info:
          $ref: '#/components/schemas/DeviceSessionLogInfo'
      description: Linked device.
    DeviceManagementDisabledDetails:
      type: object
      properties: {}
      description: Disabled device management.
    DeviceManagementEnabledDetails:
      type: object
      properties: {}
      description: Enabled device management.
    DeviceSyncBackupStatusChangedDetails:
      type: object
      properties:
        desktop_device_session_info:
          $ref: '#/components/schemas/DesktopDeviceSessionLogInfo'
        previous_value:
          $ref: '#/components/schemas/BackupStatus'
        new_value:
          $ref: '#/components/schemas/BackupStatus'
      required:
      - desktop_device_session_info
      - previous_value
      - new_value
      description: Enabled/disabled backup for computer.
    DeviceUnlinkDetails:
      type: object
      properties:
        session_info:
          $ref: '#/components/schemas/SessionLogInfo'
        display_name:
          type: string
          nullable: true
        delete_data:
          type: boolean
      required:
      - delete_data
      description: Disconnected device.
    DropboxPasswordsExportedDetails:
      type: object
      properties:
        platform:
          type: string
      required:
      - platform
      description: Exported passwords.
    DropboxPasswordsNewDeviceEnrolledDetails:
      type: object
      properties:
        is_first_device:
          type: boolean
        platform:
          type: string
      required:
      - is_first_device
      - platform
      description: Enrolled new Dropbox Passwords device.
    EmmRefreshAuthTokenDetails:
      type: object
      properties: {}
      description: Refreshed auth token used for setting up EMM.
    ExternalDriveBackupEligibilityStatusCheckedDetails:
      type: object
      properties:
        desktop_device_session_info:
          $ref: '#/components/schemas/DesktopDeviceSessionLogInfo'
        status:
          $ref: '#/components/schemas/ExternalDriveBackupEligibilityStatus'
        number_of_external_drive_backup:
          type: integer
          format: int64
      required:
      - desktop_device_session_info
      - status
      - number_of_external_drive_backup
      description: Checked external drive backup eligibility status.
    ExternalDriveBackupStatusChangedDetails:
      type: object
      properties:
        desktop_device_session_info:
          $ref: '#/components/schemas/DesktopDeviceSessionLogInfo'
        previous_value:
          $ref: '#/components/schemas/ExternalDriveBackupStatus'
        new_value:
          $ref: '#/components/schemas/ExternalDriveBackupStatus'
      required:
      - desktop_device_session_info
      - previous_value
      - new_value
      description: Modified external drive backup.
    AccountCaptureChangeAvailabilityDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/AccountCaptureAvailability'
        previous_value:
          $ref: '#/components/schemas/AccountCaptureAvailability'
      required:
      - new_value
      description: Granted/revoked option to enable account capture on team domains.
    AccountCaptureMigrateAccountDetails:
      type: object
      properties:
        domain_name:
          type: string
      required:
      - domain_name
      description: Account-captured user migrated account to team.
    AccountCaptureNotificationEmailsSentDetails:
      type: object
      properties:
        domain_name:
          type: string
        notification_type:
          $ref: '#/components/schemas/AccountCaptureNotificationType'
      required:
      - domain_name
      description: Sent account capture email to all unmanaged members.
    AccountCaptureRelinquishAccountDetails:
      type: object
      properties:
        domain_name:
          type: string
      required:
      - domain_name
      description: Account-captured user changed account email to personal email.
    DisabledDomainInvitesDetails:
      type: object
      properties: {}
      description: Disabled domain invites.
    DomainInvitesApproveRequestToJoinTeamDetails:
      type: object
      properties: {}
      description: Approved user's request to join team.
    DomainInvitesDeclineRequestToJoinTeamDetails:
      type: object
      properties: {}
      description: Declined user's request to join team.
    DomainInvitesEmailExistingUsersDetails:
      type: object
      properties:
        domain_name:
          type: string
        num_recipients:
          type: integer
          format: int64
      required:
      - domain_name
      - num_recipients
      description: Sent domain invites to existing domain accounts.
    DomainInvitesRequestToJoinTeamDetails:
      type: object
      properties: {}
      description: Requested to join team.
    DomainInvitesSetInviteNewUserPrefToNoDetails:
      type: object
      properties: {}
      description: Disabled "Automatically invite new users".
    DomainInvitesSetInviteNewUserPrefToYesDetails:
      type: object
      properties: {}
      description: Enabled "Automatically invite new users".
    DomainVerificationAddDomainFailDetails:
      type: object
      properties:
        domain_name:
          type: string
        verification_method:
          type: string
          nullable: true
      required:
      - domain_name
      description: Failed to verify team domain.
    DomainVerificationAddDomainSuccessDetails:
      type: object
      properties:
        domain_names:
          type: array
          items:
            type: string
        verification_method:
          type: string
          nullable: true
      required:
      - domain_names
      description: Verified team domain.
    DomainVerificationRemoveDomainDetails:
      type: object
      properties:
        domain_names:
          type: array
          items:
            type: string
      required:
      - domain_names
      description: Removed domain from list of verified team domains.
    EnabledDomainInvitesDetails:
      type: object
      properties: {}
      description: Enabled domain invites.
    TeamEncryptionKeyCancelKeyDeletionDetails:
      type: object
      properties: {}
      description: Canceled team encryption key deletion.
    TeamEncryptionKeyCreateKeyDetails:
      type: object
      properties: {}
      description: Created team encryption key.
    TeamEncryptionKeyDeleteKeyDetails:
      type: object
      properties: {}
      description: Deleted team encryption key.
    TeamEncryptionKeyDisableKeyDetails:
      type: object
      properties: {}
      description: Disabled team encryption key.
    TeamEncryptionKeyEnableKeyDetails:
      type: object
      properties: {}
      description: Enabled team encryption key.
    TeamEncryptionKeyRotateKeyDetails:
      type: object
      properties: {}
      description: Rotated team encryption key.
    TeamEncryptionKeyScheduleKeyDeletionDetails:
      type: object
      properties: {}
      description: Scheduled encryption key deletion.
    ApplyNamingConventionDetails:
      type: object
      properties: {}
      description: Applied naming convention.
    CreateFolderDetails:
      type: object
      properties: {}
      description: Created folders.
    FileAddDetails:
      type: object
      properties: {}
      description: Added files and/or folders.
    FileAddFromAutomationDetails:
      type: object
      properties: {}
      description: Added files and/or folders from automation.
    FileCopyDetails:
      type: object
      properties:
        relocate_action_details:
          type: array
          items:
            $ref: '#/components/schemas/RelocateAssetReferencesLogInfo'
      required:
      - relocate_action_details
      description: Copied files and/or folders.
    FileDeleteDetails:
      type: object
      properties: {}
      description: Deleted files and/or folders.
    FileDownloadDetails:
      type: object
      properties: {}
      description: Downloaded files and/or folders.
    FileEditDetails:
      type: object
      properties: {}
      description: Edited files.
    FileGetCopyReferenceDetails:
      type: object
      properties: {}
      description: Created copy reference to file/folder.
    FileLockingLockStatusChangedDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/LockStatus'
        new_value:
          $ref: '#/components/schemas/LockStatus'
      required:
      - previous_value
      - new_value
      description: Locked/unlocked editing for a file.
    FileMoveDetails:
      type: object
      properties:
        relocate_action_details:
          type: array
          items:
            $ref: '#/components/schemas/RelocateAssetReferencesLogInfo'
      required:
      - relocate_action_details
      description: Moved files and/or folders.
    FilePermanentlyDeleteDetails:
      type: object
      properties: {}
      description: Permanently deleted files and/or folders.
    FilePreviewDetails:
      type: object
      properties: {}
      description: Previewed files and/or folders.
    FileRenameDetails:
      type: object
      properties:
        relocate_action_details:
          type: array
          items:
            $ref: '#/components/schemas/RelocateAssetReferencesLogInfo'
      required:
      - relocate_action_details
      description: Renamed files and/or folders.
    FileRestoreDetails:
      type: object
      properties: {}
      description: Restored deleted files and/or folders.
    FileRevertDetails:
      type: object
      properties: {}
      description: Reverted files to previous version.
    FileRollbackChangesDetails:
      type: object
      properties: {}
      description: Rolled back file actions.
    FileSaveCopyReferenceDetails:
      type: object
      properties:
        relocate_action_details:
          type: array
          items:
            $ref: '#/components/schemas/RelocateAssetReferencesLogInfo'
      required:
      - relocate_action_details
      description: Saved file/folder using copy reference.
    FolderOverviewDescriptionChangedDetails:
      type: object
      properties:
        folder_overview_location_asset:
          type: integer
          format: int64
      required:
      - folder_overview_location_asset
      description: Updated folder overview.
    FolderOverviewItemPinnedDetails:
      type: object
      properties:
        folder_overview_location_asset:
          type: integer
          format: int64
        pinned_items_asset_indices:
          type: array
          items:
            type: integer
            format: int64
      required:
      - folder_overview_location_asset
      - pinned_items_asset_indices
      description: Pinned item to folder overview.
    FolderOverviewItemUnpinnedDetails:
      type: object
      properties:
        folder_overview_location_asset:
          type: integer
          format: int64
        pinned_items_asset_indices:
          type: array
          items:
            type: integer
            format: int64
      required:
      - folder_overview_location_asset
      - pinned_items_asset_indices
      description: Unpinned item from folder overview.
    ObjectLabelAddedDetails:
      type: object
      properties:
        label_type:
          $ref: '#/components/schemas/LabelType'
      required:
      - label_type
      description: Added a label.
    ObjectLabelRemovedDetails:
      type: object
      properties:
        label_type:
          $ref: '#/components/schemas/LabelType'
      required:
      - label_type
      description: Removed a label.
    ObjectLabelUpdatedValueDetails:
      type: object
      properties:
        label_type:
          $ref: '#/components/schemas/LabelType'
      required:
      - label_type
      description: Updated a label's value.
    OrganizeFolderWithTidyDetails:
      type: object
      properties: {}
      description: Organized a folder with multi-file organize.
    ReplayFileDeleteDetails:
      type: object
      properties: {}
      description: Deleted files in Replay.
    RewindFolderDetails:
      type: object
      properties:
        rewind_folder_target_ts_ms:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - rewind_folder_target_ts_ms
      description: Rewound a folder.
    UndoNamingConventionDetails:
      type: object
      properties: {}
      description: Reverted naming convention.
    UndoOrganizeFolderWithTidyDetails:
      type: object
      properties: {}
      description: Removed multi-file organize.
    UserTagsAddedDetails:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      required:
      - values
      description: Tagged a file.
    UserTagsRemovedDetails:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      required:
      - values
      description: Removed tags.
    EmailIngestReceiveFileDetails:
      type: object
      properties:
        inbox_name:
          type: string
        attachment_names:
          type: array
          items:
            type: string
        subject:
          type: string
          nullable: true
        from_name:
          $ref: '#/components/schemas/DisplayNameLegacy'
        from_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - inbox_name
      - attachment_names
      description: Received files via Email to Dropbox.
    FileRequestChangeDetails:
      type: object
      properties:
        file_request_id:
          $ref: '#/components/schemas/FileRequestId'
        previous_details:
          $ref: '#/components/schemas/FileRequestDetails'
        new_details:
          $ref: '#/components/schemas/FileRequestDetails'
      required:
      - new_details
      description: Changed file request.
    FileRequestCloseDetails:
      type: object
      properties:
        file_request_id:
          $ref: '#/components/schemas/FileRequestId'
        previous_details:
          $ref: '#/components/schemas/FileRequestDetails'
      description: Closed file request.
    FileRequestCreateDetails:
      type: object
      properties:
        file_request_id:
          $ref: '#/components/schemas/FileRequestId'
        request_details:
          $ref: '#/components/schemas/FileRequestDetails'
      description: Created file request.
    FileRequestDeleteDetails:
      type: object
      properties:
        file_request_id:
          $ref: '#/components/schemas/FileRequestId'
        previous_details:
          $ref: '#/components/schemas/FileRequestDetails'
      description: Delete file request.
    FileRequestReceiveFileDetails:
      type: object
      properties:
        file_request_id:
          $ref: '#/components/schemas/FileRequestId'
        file_request_details:
          $ref: '#/components/schemas/FileRequestDetails'
        submitted_file_names:
          type: array
          items:
            type: string
        submitter_name:
          $ref: '#/components/schemas/DisplayNameLegacy'
        submitter_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - submitted_file_names
      description: Received files for file request.
    GroupAddExternalIdDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/GroupExternalId'
      required:
      - new_value
      description: Added external ID for group.
    GroupAddMemberDetails:
      type: object
      properties:
        is_group_owner:
          type: boolean
      required:
      - is_group_owner
      description: Added team members to group.
    GroupChangeExternalIdDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/GroupExternalId'
        previous_value:
          $ref: '#/components/schemas/GroupExternalId'
      required:
      - new_value
      - previous_value
      description: Changed external ID for group.
    GroupChangeManagementTypeDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/GroupManagementType'
        previous_value:
          $ref: '#/components/schemas/GroupManagementType'
      required:
      - new_value
      description: Changed group management type.
    GroupChangeMemberRoleDetails:
      type: object
      properties:
        is_group_owner:
          type: boolean
      required:
      - is_group_owner
      description: Changed manager permissions of group member.
    GroupCreateDetails:
      type: object
      properties:
        is_company_managed:
          type: boolean
          nullable: true
        join_policy:
          $ref: '#/components/schemas/GroupJoinPolicy'
      description: Created group.
    GroupDeleteDetails:
      type: object
      properties:
        is_company_managed:
          type: boolean
          nullable: true
      description: Deleted group.
    GroupDescriptionUpdatedDetails:
      type: object
      properties: {}
      description: Updated group.
    GroupJoinPolicyUpdatedDetails:
      type: object
      properties:
        is_company_managed:
          type: boolean
          nullable: true
        join_policy:
          $ref: '#/components/schemas/GroupJoinPolicy'
      description: Updated group join policy.
    GroupMovedDetails:
      type: object
      properties: {}
      description: Moved group.
    GroupRemoveExternalIdDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/GroupExternalId'
      required:
      - previous_value
      description: Removed external ID for group.
    GroupRemoveMemberDetails:
      type: object
      properties: {}
      description: Removed team members from group.
    GroupRenameDetails:
      type: object
      properties:
        previous_value:
          type: string
        new_value:
          type: string
      required:
      - previous_value
      - new_value
      description: Renamed group.
    AccountLockOrUnlockedDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/AccountState'
        new_value:
          $ref: '#/components/schemas/AccountState'
      required:
      - previous_value
      - new_value
      description: Unlocked/locked account after failed sign in attempts.
    EmmErrorDetails:
      type: object
      properties:
        error_details:
          $ref: '#/components/schemas/FailureDetailsLogInfo'
      required:
      - error_details
      description: Failed to sign in via EMM.
    GuestAdminSignedInViaTrustedTeamsDetails:
      type: object
      properties:
        team_name:
          type: string
          nullable: true
        trusted_team_name:
          type: string
          nullable: true
      description: Started trusted team admin session.
    GuestAdminSignedOutViaTrustedTeamsDetails:
      type: object
      properties:
        team_name:
          type: string
          nullable: true
        trusted_team_name:
          type: string
          nullable: true
      description: Ended trusted team admin session.
    LoginFailDetails:
      type: object
      properties:
        is_emm_managed:
          type: boolean
          nullable: true
        login_method:
          $ref: '#/components/schemas/LoginMethod'
        error_details:
          $ref: '#/components/schemas/FailureDetailsLogInfo'
      required:
      - login_method
      - error_details
      description: Failed to sign in.
    LoginSuccessDetails:
      type: object
      properties:
        is_emm_managed:
          type: boolean
          nullable: true
        login_method:
          $ref: '#/components/schemas/LoginMethod'
      required:
      - login_method
      description: Signed in.
    LogoutDetails:
      type: object
      properties:
        login_id:
          type: string
          nullable: true
      description: Signed out.
    ResellerSupportSessionEndDetails:
      type: object
      properties: {}
      description: Ended reseller support session.
    ResellerSupportSessionStartDetails:
      type: object
      properties: {}
      description: Started reseller support session.
    SignInAsSessionEndDetails:
      type: object
      properties: {}
      description: Ended admin sign-in-as session.
    SignInAsSessionStartDetails:
      type: object
      properties: {}
      description: Started admin sign-in-as session.
    SsoErrorDetails:
      type: object
      properties:
        error_details:
          $ref: '#/components/schemas/FailureDetailsLogInfo'
      required:
      - error_details
      description: Failed to sign in via SSO.
    BackupAdminInvitationSentDetails:
      type: object
      properties: {}
      description: Invited members to activate Backup.
    BackupInvitationOpenedDetails:
      type: object
      properties: {}
      description: Opened Backup invite.
    CreateTeamInviteLinkDetails:
      type: object
      properties:
        link_url:
          type: string
        expiry_date:
          type: string
      required:
      - link_url
      - expiry_date
      description: Created team invite link.
    DeleteTeamInviteLinkDetails:
      type: object
      properties:
        link_url:
          type: string
      required:
      - link_url
      description: Deleted team invite link.
    MemberAddExternalIdDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MemberExternalId'
      required:
      - new_value
      description: Added an external ID for team member.
    MemberAddNameDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/UserNameLogInfo'
      required:
      - new_value
      description: Added team member name.
    MemberChangeAdminRoleDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/AdminRole'
        previous_value:
          $ref: '#/components/schemas/AdminRole'
      description: Changed team member admin role.
    MemberChangeEmailDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/EmailAddress'
        previous_value:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - new_value
      description: Changed team member email.
    MemberChangeExternalIdDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MemberExternalId'
        previous_value:
          $ref: '#/components/schemas/MemberExternalId'
      required:
      - new_value
      - previous_value
      description: Changed the external ID for team member.
    MemberChangeMembershipTypeDetails:
      type: object
      properties:
        prev_value:
          $ref: '#/components/schemas/TeamMembershipType'
        new_value:
          $ref: '#/components/schemas/TeamMembershipType'
      required:
      - prev_value
      - new_value
      description: Changed membership type (limited/full) of member.
    MemberChangeNameDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/UserNameLogInfo'
        previous_value:
          $ref: '#/components/schemas/UserNameLogInfo'
      required:
      - new_value
      description: Changed team member name.
    MemberChangeResellerRoleDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ResellerRole'
        previous_value:
          $ref: '#/components/schemas/ResellerRole'
      required:
      - new_value
      - previous_value
      description: Changed team member reseller role.
    MemberChangeStatusDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/MemberStatus'
        new_value:
          $ref: '#/components/schemas/MemberStatus'
        action:
          $ref: '#/components/schemas/ActionDetails'
        new_team:
          type: string
          nullable: true
        previous_team:
          type: string
          nullable: true
      required:
      - new_value
      description: Changed member status (invited, joined, suspended, etc.).
    MemberDeleteManualContactsDetails:
      type: object
      properties: {}
      description: Cleared manually added contacts.
    MemberDeleteProfilePhotoDetails:
      type: object
      properties: {}
      description: Deleted team member profile photo.
    MemberPermanentlyDeleteAccountContentsDetails:
      type: object
      properties: {}
      description: Permanently deleted contents of deleted team member account.
    MemberRemoveExternalIdDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/MemberExternalId'
      required:
      - previous_value
      description: Removed the external ID for team member.
    MemberSetProfilePhotoDetails:
      type: object
      properties: {}
      description: Set team member profile photo.
    MemberSpaceLimitsAddCustomQuotaDetails:
      type: object
      properties:
        new_value:
          type: integer
          format: int64
      required:
      - new_value
      description: Set custom member space limit.
    MemberSpaceLimitsChangeCustomQuotaDetails:
      type: object
      properties:
        previous_value:
          type: integer
          format: int64
        new_value:
          type: integer
          format: int64
      required:
      - previous_value
      - new_value
      description: Changed custom member space limit.
    MemberSpaceLimitsChangeStatusDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SpaceLimitsStatus'
        new_value:
          $ref: '#/components/schemas/SpaceLimitsStatus'
      required:
      - previous_value
      - new_value
      description: Changed space limit status.
    MemberSpaceLimitsRemoveCustomQuotaDetails:
      type: object
      properties: {}
      description: Removed custom member space limit.
    MemberSuggestDetails:
      type: object
      properties:
        suggested_members:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
      required:
      - suggested_members
      description: Suggested person to add to team.
    MemberTransferAccountContentsDetails:
      type: object
      properties: {}
      description: Transferred contents of deleted member account to another member.
    PendingSecondaryEmailAddedDetails:
      type: object
      properties:
        secondary_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - secondary_email
      description: Added pending secondary email.
    SecondaryEmailDeletedDetails:
      type: object
      properties:
        secondary_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - secondary_email
      description: Deleted secondary email.
    SecondaryEmailVerifiedDetails:
      type: object
      properties:
        secondary_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - secondary_email
      description: Verified secondary email.
    SecondaryMailsPolicyChangedDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SecondaryMailsPolicy'
        new_value:
          $ref: '#/components/schemas/SecondaryMailsPolicy'
      required:
      - previous_value
      - new_value
      description: Secondary mails policy changed.
    BinderAddPageDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Added Binder page.
    BinderAddSectionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Added Binder section.
    BinderRemovePageDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Removed Binder page.
    BinderRemoveSectionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Removed Binder section.
    BinderRenamePageDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
        previous_binder_item_name:
          type: string
          nullable: true
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Renamed Binder page.
    BinderRenameSectionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
        previous_binder_item_name:
          type: string
          nullable: true
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Renamed Binder section.
    BinderReorderPageDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Reordered Binder page.
    BinderReorderSectionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        doc_title:
          type: string
        binder_item_name:
          type: string
      required:
      - event_uuid
      - doc_title
      - binder_item_name
      description: Reordered Binder section.
    PaperContentAddMemberDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Added users and/or groups to Paper doc/folder.
    PaperContentAddToFolderDetails:
      type: object
      properties:
        event_uuid:
          type: string
        target_asset_index:
          type: integer
          format: int64
        parent_asset_index:
          type: integer
          format: int64
      required:
      - event_uuid
      - target_asset_index
      - parent_asset_index
      description: Added Paper doc/folder to folder.
    PaperContentArchiveDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Archived Paper doc/folder.
    PaperContentCreateDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Created Paper doc/folder.
    PaperContentPermanentlyDeleteDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Permanently deleted Paper doc/folder.
    PaperContentRemoveFromFolderDetails:
      type: object
      properties:
        event_uuid:
          type: string
        target_asset_index:
          type: integer
          format: int64
          nullable: true
        parent_asset_index:
          type: integer
          format: int64
          nullable: true
      required:
      - event_uuid
      description: Removed Paper doc/folder from folder.
    PaperContentRemoveMemberDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Removed users and/or groups from Paper doc/folder.
    PaperContentRenameDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Renamed Paper doc/folder.
    PaperContentRestoreDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Restored archived Paper doc/folder.
    PaperDocAddCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Added Paper doc comment.
    PaperDocChangeMemberRoleDetails:
      type: object
      properties:
        event_uuid:
          type: string
        access_type:
          $ref: '#/components/schemas/PaperAccessType'
      required:
      - event_uuid
      - access_type
      description: Changed member permissions for Paper doc.
    PaperDocChangeSharingPolicyDetails:
      type: object
      properties:
        event_uuid:
          type: string
        public_sharing_policy:
          type: string
          nullable: true
        team_sharing_policy:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Changed sharing setting for Paper doc.
    PaperDocChangeSubscriptionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        new_subscription_level:
          type: string
        previous_subscription_level:
          type: string
          nullable: true
      required:
      - event_uuid
      - new_subscription_level
      description: Followed/unfollowed Paper doc.
    PaperDocDeletedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Archived Paper doc.
    PaperDocDeleteCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Deleted Paper doc comment.
    PaperDocDownloadDetails:
      type: object
      properties:
        event_uuid:
          type: string
        export_file_format:
          $ref: '#/components/schemas/PaperDownloadFormat'
      required:
      - event_uuid
      - export_file_format
      description: Downloaded Paper doc in specific format.
    PaperDocEditDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Edited Paper doc.
    PaperDocEditCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Edited Paper doc comment.
    PaperDocFollowedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Followed Paper doc.
    PaperDocMentionDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Mentioned user in Paper doc.
    PaperDocOwnershipChangedDetails:
      type: object
      properties:
        event_uuid:
          type: string
        old_owner_user_id:
          $ref: '#/components/schemas/AccountId'
        new_owner_user_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - event_uuid
      - new_owner_user_id
      description: Transferred ownership of Paper doc.
    PaperDocRequestAccessDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Requested access to Paper doc.
    PaperDocResolveCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Resolved Paper doc comment.
    PaperDocRevertDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Restored Paper doc to previous version.
    PaperDocSlackShareDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Shared Paper doc via Slack.
    PaperDocTeamInviteDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Shared Paper doc with users and/or groups.
    PaperDocTrashedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Deleted Paper doc.
    PaperDocUnresolveCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Unresolved Paper doc comment.
    PaperDocUntrashedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Restored Paper doc.
    PaperDocViewDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Viewed Paper doc.
    PaperExternalViewAllowDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Changed Paper external sharing setting to anyone.
    PaperExternalViewDefaultTeamDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Changed Paper external sharing setting to default team.
    PaperExternalViewForbidDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Changed Paper external sharing setting to team-only.
    PaperFolderChangeSubscriptionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        new_subscription_level:
          type: string
        previous_subscription_level:
          type: string
          nullable: true
      required:
      - event_uuid
      - new_subscription_level
      description: Followed/unfollowed Paper folder.
    PaperFolderDeletedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Archived Paper folder.
    PaperFolderFollowedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Followed Paper folder.
    PaperFolderTeamInviteDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Shared Paper folder with users and/or groups.
    PaperPublishedLinkChangePermissionDetails:
      type: object
      properties:
        event_uuid:
          type: string
        new_permission_level:
          type: string
        previous_permission_level:
          type: string
      required:
      - event_uuid
      - new_permission_level
      - previous_permission_level
      description: Changed permissions for published doc.
    PaperPublishedLinkCreateDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Published doc.
    PaperPublishedLinkDisabledDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Unpublished doc.
    PaperPublishedLinkViewDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Viewed published doc.
    PasswordChangeDetails:
      type: object
      properties: {}
      description: Changed password.
    PasswordResetDetails:
      type: object
      properties: {}
      description: Reset password.
    PasswordResetAllDetails:
      type: object
      properties: {}
      description: Reset all team member passwords.
    ClassificationCreateReportDetails:
      type: object
      properties: {}
      description: Created Classification report.
    ClassificationCreateReportFailDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: Couldn't create Classification report.
    EmmCreateExceptionsReportDetails:
      type: object
      properties: {}
      description: Created EMM-excluded users report.
    EmmCreateUsageReportDetails:
      type: object
      properties: {}
      description: Created EMM mobile app usage report.
    ExportMembersReportDetails:
      type: object
      properties: {}
      description: Created member data report.
    ExportMembersReportFailDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: Failed to create members data report.
    ExternalSharingCreateReportDetails:
      type: object
      properties: {}
      description: Created External sharing report.
    ExternalSharingReportFailedDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: Couldn't create External sharing report.
    NoExpirationLinkGenCreateReportDetails:
      type: object
      properties:
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - start_date
      - end_date
      description: 'Report created: Links created with no expiration.'
    NoExpirationLinkGenReportFailedDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: 'Couldn''t create report: Links created with no expiration.'
    NoPasswordLinkGenCreateReportDetails:
      type: object
      properties:
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - start_date
      - end_date
      description: 'Report created: Links created without passwords.'
    NoPasswordLinkGenReportFailedDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: 'Couldn''t create report: Links created without passwords.'
    NoPasswordLinkViewCreateReportDetails:
      type: object
      properties:
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - start_date
      - end_date
      description: 'Report created: Views of links without passwords.'
    NoPasswordLinkViewReportFailedDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: 'Couldn''t create report: Views of links without passwords.'
    OutdatedLinkViewCreateReportDetails:
      type: object
      properties:
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - start_date
      - end_date
      description: 'Report created: Views of old links.'
    OutdatedLinkViewReportFailedDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: 'Couldn''t create report: Views of old links.'
    PaperAdminExportStartDetails:
      type: object
      properties: {}
      description: Exported all team Paper docs.
    RansomwareAlertCreateReportDetails:
      type: object
      properties: {}
      description: Created ransomware report.
    RansomwareAlertCreateReportFailedDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: Couldn't generate ransomware report.
    SmartSyncCreateAdminPrivilegeReportDetails:
      type: object
      properties: {}
      description: Created Smart Sync non-admin devices report.
    TeamActivityCreateReportDetails:
      type: object
      properties:
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - start_date
      - end_date
      description: Created team activity report.
    TeamActivityCreateReportFailDetails:
      type: object
      properties:
        failure_reason:
          $ref: '#/components/schemas/TeamReportFailureReason'
      required:
      - failure_reason
      description: Couldn't generate team activity report.
    CollectionShareDetails:
      type: object
      properties:
        album_name:
          type: string
      required:
      - album_name
      description: Shared album.
    FileTransfersFileAddDetails:
      type: object
      properties:
        file_transfer_id:
          type: string
      required:
      - file_transfer_id
      description: Transfer files added.
    FileTransfersTransferDeleteDetails:
      type: object
      properties:
        file_transfer_id:
          type: string
      required:
      - file_transfer_id
      description: Deleted transfer.
    FileTransfersTransferDownloadDetails:
      type: object
      properties:
        file_transfer_id:
          type: string
      required:
      - file_transfer_id
      description: Transfer downloaded.
    FileTransfersTransferSendDetails:
      type: object
      properties:
        file_transfer_id:
          type: string
      required:
      - file_transfer_id
      description: Sent transfer.
    FileTransfersTransferViewDetails:
      type: object
      properties:
        file_transfer_id:
          type: string
      required:
      - file_transfer_id
      description: Viewed transfer.
    NoteAclInviteOnlyDetails:
      type: object
      properties: {}
      description: Changed Paper doc to invite-only.
    NoteAclLinkDetails:
      type: object
      properties: {}
      description: Changed Paper doc to link-accessible.
    NoteAclTeamLinkDetails:
      type: object
      properties: {}
      description: Changed Paper doc to link-accessible for team.
    NoteSharedDetails:
      type: object
      properties: {}
      description: Shared Paper doc.
    NoteShareReceiveDetails:
      type: object
      properties: {}
      description: Shared received Paper doc.
    OpenNoteSharedDetails:
      type: object
      properties: {}
      description: Opened shared Paper doc.
    ReplayFileSharedLinkCreatedDetails:
      type: object
      properties: {}
      description: Created shared link in Replay.
    ReplayFileSharedLinkModifiedDetails:
      type: object
      properties: {}
      description: Modified shared link in Replay.
    ReplayProjectTeamAddDetails:
      type: object
      properties: {}
      description: Added member to Replay Project.
    ReplayProjectTeamDeleteDetails:
      type: object
      properties: {}
      description: Removed member from Replay Project.
    SfAddGroupDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        sharing_permission:
          type: string
          nullable: true
        team_name:
          type: string
      required:
      - target_asset_index
      - original_folder_name
      - team_name
      description: Added team to shared folder.
    SfAllowNonMembersToViewSharedLinksDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        shared_folder_type:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Allowed non-collaborators to view links to files in shared folder.
    SfExternalInviteWarnDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        new_sharing_permission:
          type: string
          nullable: true
        previous_sharing_permission:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Set team members to see warning before sharing folders outside team.
    SfFbInviteDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        sharing_permission:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Invited Facebook users to shared folder.
    SfFbInviteChangeRoleDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        previous_sharing_permission:
          type: string
          nullable: true
        new_sharing_permission:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Changed Facebook user's role in shared folder.
    SfFbUninviteDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
      required:
      - target_asset_index
      - original_folder_name
      description: Uninvited Facebook user from shared folder.
    SfInviteGroupDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
      required:
      - target_asset_index
      description: Invited group to shared folder.
    SfTeamGrantAccessDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
      required:
      - target_asset_index
      - original_folder_name
      description: Granted access to shared folder.
    SfTeamInviteDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        sharing_permission:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Invited team members to shared folder.
    SfTeamInviteChangeRoleDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        new_sharing_permission:
          type: string
          nullable: true
        previous_sharing_permission:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Changed team member's role in shared folder.
    SfTeamJoinDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
      required:
      - target_asset_index
      - original_folder_name
      description: Joined team member's shared folder.
    SfTeamJoinFromOobLinkDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
        token_key:
          type: string
          nullable: true
        sharing_permission:
          type: string
          nullable: true
      required:
      - target_asset_index
      - original_folder_name
      description: Joined team member's shared folder from link.
    SfTeamUninviteDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
        original_folder_name:
          type: string
      required:
      - target_asset_index
      - original_folder_name
      description: Unshared folder with team member.
    SharedContentAddInviteesDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
      required:
      - shared_content_access_level
      - invitees
      description: Invited user to Dropbox and added them to shared file/folder.
    SharedContentAddLinkExpiryDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Added expiration date to link for shared file/folder.
    SharedContentAddLinkPasswordDetails:
      type: object
      properties: {}
      description: Added password to link for shared file/folder.
    SharedContentAddMemberDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - shared_content_access_level
      description: Added users and/or groups to shared file/folder.
    SharedContentChangeDownloadsPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DownloadPolicyType'
        previous_value:
          $ref: '#/components/schemas/DownloadPolicyType'
      required:
      - new_value
      description: Changed whether members can download shared file/folder.
    SharedContentChangeInviteeRoleDetails:
      type: object
      properties:
        previous_access_level:
          $ref: '#/components/schemas/AccessLevel'
        new_access_level:
          $ref: '#/components/schemas/AccessLevel'
        invitee:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - new_access_level
      - invitee
      description: Changed access type of invitee to shared file/folder before invite was accepted.
    SharedContentChangeLinkAudienceDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/LinkAudience'
        previous_value:
          $ref: '#/components/schemas/LinkAudience'
      required:
      - new_value
      description: Changed link audience of shared file/folder.
    SharedContentChangeLinkExpiryDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DropboxTimestamp'
        previous_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Changed link expiration of shared file/folder.
    SharedContentChangeLinkPasswordDetails:
      type: object
      properties: {}
      description: Changed link password of shared file/folder.
    SharedContentChangeMemberRoleDetails:
      type: object
      properties:
        previous_access_level:
          $ref: '#/components/schemas/AccessLevel'
        new_access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - new_access_level
      description: Changed access type of shared file/folder member.
    SharedContentChangeViewerInfoPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ViewerInfoPolicy'
        previous_value:
          $ref: '#/components/schemas/ViewerInfoPolicy'
      required:
      - new_value
      description: Changed whether members can see who viewed shared file/folder.
    SharedContentClaimInvitationDetails:
      type: object
      properties:
        shared_content_link:
          type: string
          nullable: true
      description: Acquired membership of shared file/folder by accepting invite.
    SharedContentCopyDetails:
      type: object
      properties:
        shared_content_link:
          type: string
        shared_content_owner:
          $ref: '#/components/schemas/UserLogInfo'
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        destination_path:
          $ref: '#/components/schemas/FilePath'
      required:
      - shared_content_link
      - shared_content_access_level
      - destination_path
      description: Copied shared file/folder to own Dropbox.
    SharedContentDownloadDetails:
      type: object
      properties:
        shared_content_link:
          type: string
        shared_content_owner:
          $ref: '#/components/schemas/UserLogInfo'
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - shared_content_link
      - shared_content_access_level
      description: Downloaded shared file/folder.
    SharedContentRelinquishMembershipDetails:
      type: object
      properties: {}
      description: Left shared file/folder.
    SharedContentRemoveInviteesDetails:
      type: object
      properties:
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
      required:
      - invitees
      description: Removed invitee from shared file/folder before invite was accepted.
    SharedContentRemoveLinkExpiryDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Removed link expiration date of shared file/folder.
    SharedContentRemoveLinkPasswordDetails:
      type: object
      properties: {}
      description: Removed link password of shared file/folder.
    SharedContentRemoveMemberDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
      description: Removed user/group from shared file/folder.
    SharedContentRequestAccessDetails:
      type: object
      properties:
        shared_content_link:
          type: string
          nullable: true
      description: Requested access to shared file/folder.
    SharedContentRestoreInviteesDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
      required:
      - shared_content_access_level
      - invitees
      description: Restored shared file/folder invitees.
    SharedContentRestoreMemberDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - shared_content_access_level
      description: Restored users and/or groups to membership of shared file/folder.
    SharedContentUnshareDetails:
      type: object
      properties: {}
      description: Unshared file/folder by clearing membership.
    SharedContentViewDetails:
      type: object
      properties:
        shared_content_link:
          type: string
        shared_content_owner:
          $ref: '#/components/schemas/UserLogInfo'
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - shared_content_link
      - shared_content_access_level
      description: Previewed shared file/folder.
    SharedFolderChangeLinkPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SharedLinkPolicy'
        previous_value:
          $ref: '#/components/schemas/SharedLinkPolicy'
      required:
      - new_value
      description: Changed who can access shared folder via link.
    SharedFolderChangeMembersInheritancePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SharedFolderMembersInheritancePolicy'
        previous_value:
          $ref: '#/components/schemas/SharedFolderMembersInheritancePolicy'
      required:
      - new_value
      description: Changed whether shared folder inherits members from parent folder.
    SharedFolderChangeMembersManagementPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/AclUpdatePolicy'
        previous_value:
          $ref: '#/components/schemas/AclUpdatePolicy'
      required:
      - new_value
      description: Changed who can add/remove members of shared folder.
    SharedFolderChangeMembersPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MemberPolicy'
        previous_value:
          $ref: '#/components/schemas/MemberPolicy'
      required:
      - new_value
      description: Changed who can become member of shared folder.
    SharedFolderCreateDetails:
      type: object
      properties:
        target_ns_id:
          $ref: '#/components/schemas/NamespaceId'
      description: Created shared folder.
    SharedFolderDeclineInvitationDetails:
      type: object
      properties: {}
      description: Declined team member's invite to shared folder.
    SharedFolderMountDetails:
      type: object
      properties: {}
      description: Added shared folder to own Dropbox.
    SharedFolderNestDetails:
      type: object
      properties:
        previous_parent_ns_id:
          $ref: '#/components/schemas/NamespaceId'
        new_parent_ns_id:
          $ref: '#/components/schemas/NamespaceId'
        previous_ns_path:
          $ref: '#/components/schemas/FilePath'
        new_ns_path:
          $ref: '#/components/schemas/FilePath'
      description: Changed parent of shared folder.
    SharedFolderTransferOwnershipDetails:
      type: object
      properties:
        previous_owner_email:
          $ref: '#/components/schemas/EmailAddress'
        new_owner_email:
          $ref: '#/components/schemas/EmailAddress'
      required:
      - new_owner_email
      description: Transferred ownership of shared folder to another member.
    SharedFolderUnmountDetails:
      type: object
      properties: {}
      description: Deleted shared folder from Dropbox.
    SharedLinkAddExpiryDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - new_value
      description: Added shared link expiration date.
    SharedLinkChangeExpiryDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DropboxTimestamp'
        previous_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Changed shared link expiration date.
    SharedLinkChangeVisibilityDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SharedLinkVisibility'
        previous_value:
          $ref: '#/components/schemas/SharedLinkVisibility'
      required:
      - new_value
      description: Changed visibility of shared link.
    SharedLinkCopyDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
      description: Added file/folder to Dropbox from shared link.
    SharedLinkCreateDetails:
      type: object
      properties:
        shared_link_access_level:
          $ref: '#/components/schemas/SharedLinkAccessLevel'
      description: Created shared link.
    SharedLinkDisableDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
      description: Removed shared link.
    SharedLinkDownloadDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
      description: Downloaded file/folder from shared link.
    SharedLinkRemoveExpiryDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Removed shared link expiration date.
    SharedLinkSettingsAddExpirationDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
        new_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - shared_content_access_level
      description: Added an expiration date to the shared link.
    SharedLinkSettingsAddPasswordDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
      required:
      - shared_content_access_level
      description: Added a password to the shared link.
    SharedLinkSettingsAllowDownloadDisabledDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
      required:
      - shared_content_access_level
      description: Disabled downloads.
    SharedLinkSettingsAllowDownloadEnabledDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
      required:
      - shared_content_access_level
      description: Enabled downloads.
    SharedLinkSettingsChangeAudienceDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
        new_value:
          $ref: '#/components/schemas/LinkAudience'
        previous_value:
          $ref: '#/components/schemas/LinkAudience'
      required:
      - shared_content_access_level
      - new_value
      description: Changed the audience of the shared link.
    SharedLinkSettingsChangeExpirationDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
        new_value:
          $ref: '#/components/schemas/DropboxTimestamp'
        previous_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - shared_content_access_level
      description: Changed the expiration date of the shared link.
    SharedLinkSettingsChangePasswordDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
      required:
      - shared_content_access_level
      description: Changed the password of the shared link.
    SharedLinkSettingsRemoveExpirationDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
        previous_value:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - shared_content_access_level
      description: Removed the expiration date from the shared link.
    SharedLinkSettingsRemovePasswordDetails:
      type: object
      properties:
        shared_content_access_level:
          $ref: '#/components/schemas/AccessLevel'
        shared_content_link:
          type: string
          nullable: true
      required:
      - shared_content_access_level
      description: Removed the password from the shared link.
    SharedLinkShareDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
        external_users:
          type: array
          items:
            $ref: '#/components/schemas/ExternalUserLogInfo'
          nullable: true
      description: Added members as audience of shared link.
    SharedLinkViewDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
      description: Opened shared link.
    SharedNoteOpenedDetails:
      type: object
      properties: {}
      description: Opened shared Paper doc.
    ShmodelDisableDownloadsDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
      description: Disabled downloads for link.
    ShmodelEnableDownloadsDetails:
      type: object
      properties:
        shared_link_owner:
          $ref: '#/components/schemas/UserLogInfo'
      description: Enabled downloads for link.
    ShmodelGroupShareDetails:
      type: object
      properties: {}
      description: Shared link with group.
    ShowcaseAccessGrantedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Granted access to showcase.
    ShowcaseAddMemberDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Added member to showcase.
    ShowcaseArchivedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Archived showcase.
    ShowcaseCreatedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Created showcase.
    ShowcaseDeleteCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Deleted showcase comment.
    ShowcaseEditedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Edited showcase.
    ShowcaseEditCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Edited showcase comment.
    ShowcaseFileAddedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Added file to showcase.
    ShowcaseFileDownloadDetails:
      type: object
      properties:
        event_uuid:
          type: string
        download_type:
          type: string
      required:
      - event_uuid
      - download_type
      description: Downloaded file from showcase.
    ShowcaseFileRemovedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Removed file from showcase.
    ShowcaseFileViewDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Viewed file in showcase.
    ShowcasePermanentlyDeletedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Permanently deleted showcase.
    ShowcasePostCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Added showcase comment.
    ShowcaseRemoveMemberDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Removed member from showcase.
    ShowcaseRenamedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Renamed showcase.
    ShowcaseRequestAccessDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Requested access to showcase.
    ShowcaseResolveCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Resolved showcase comment.
    ShowcaseRestoredDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Unarchived showcase.
    ShowcaseTrashedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Deleted showcase.
    ShowcaseTrashedDeprecatedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Deleted showcase (old version).
    ShowcaseUnresolveCommentDetails:
      type: object
      properties:
        event_uuid:
          type: string
        comment_text:
          type: string
          nullable: true
      required:
      - event_uuid
      description: Unresolved showcase comment.
    ShowcaseUntrashedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Restored showcase.
    ShowcaseUntrashedDeprecatedDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Restored showcase (old version).
    ShowcaseViewDetails:
      type: object
      properties:
        event_uuid:
          type: string
      required:
      - event_uuid
      description: Viewed showcase.
    SsoAddCertDetails:
      type: object
      properties:
        certificate_details:
          $ref: '#/components/schemas/Certificate'
      required:
      - certificate_details
      description: Added X.509 certificate for SSO.
    SsoAddLoginUrlDetails:
      type: object
      properties:
        new_value:
          type: string
      required:
      - new_value
      description: Added sign-in URL for SSO.
    SsoAddLogoutUrlDetails:
      type: object
      properties:
        new_value:
          type: string
          nullable: true
      description: Added sign-out URL for SSO.
    SsoChangeCertDetails:
      type: object
      properties:
        previous_certificate_details:
          $ref: '#/components/schemas/Certificate'
        new_certificate_details:
          $ref: '#/components/schemas/Certificate'
      required:
      - new_certificate_details
      description: Changed X.509 certificate for SSO.
    SsoChangeLoginUrlDetails:
      type: object
      properties:
        previous_value:
          type: string
        new_value:
          type: string
      required:
      - previous_value
      - new_value
      description: Changed sign-in URL for SSO.
    SsoChangeLogoutUrlDetails:
      type: object
      properties:
        previous_value:
          type: string
          nullable: true
        new_value:
          type: string
          nullable: true
      description: Changed sign-out URL for SSO.
    SsoChangeSamlIdentityModeDetails:
      type: object
      properties:
        previous_value:
          type: integer
          format: int64
        new_value:
          type: integer
          format: int64
      required:
      - previous_value
      - new_value
      description: Changed SAML identity mode for SSO.
    SsoRemoveCertDetails:
      type: object
      properties: {}
      description: Removed X.509 certificate for SSO.
    SsoRemoveLoginUrlDetails:
      type: object
      properties:
        previous_value:
          type: string
      required:
      - previous_value
      description: Removed sign-in URL for SSO.
    SsoRemoveLogoutUrlDetails:
      type: object
      properties:
        previous_value:
          type: string
      required:
      - previous_value
      description: Removed sign-out URL for SSO.
    TeamFolderChangeStatusDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TeamFolderStatus'
        previous_value:
          $ref: '#/components/schemas/TeamFolderStatus'
      required:
      - new_value
      description: Changed archival status of team folder.
    TeamFolderCreateDetails:
      type: object
      properties: {}
      description: Created team folder in active status.
    TeamFolderDowngradeDetails:
      type: object
      properties:
        target_asset_index:
          type: integer
          format: int64
      required:
      - target_asset_index
      description: Downgraded team folder to regular shared folder.
    TeamFolderPermanentlyDeleteDetails:
      type: object
      properties: {}
      description: Permanently deleted archived team folder.
    TeamFolderRenameDetails:
      type: object
      properties:
        previous_folder_name:
          type: string
        new_folder_name:
          type: string
      required:
      - previous_folder_name
      - new_folder_name
      description: Renamed active/archived team folder.
    TeamSelectiveSyncSettingsChangedDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SyncSetting'
        new_value:
          $ref: '#/components/schemas/SyncSetting'
      required:
      - previous_value
      - new_value
      description: Changed sync default.
    AccountCaptureChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/AccountCapturePolicy'
        previous_value:
          $ref: '#/components/schemas/AccountCapturePolicy'
      required:
      - new_value
      description: Changed account capture setting on team domain.
    AdminEmailRemindersChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/AdminEmailRemindersPolicy'
        previous_value:
          $ref: '#/components/schemas/AdminEmailRemindersPolicy'
      required:
      - new_value
      - previous_value
      description: Changed admin reminder settings for requests to join the team.
    AllowDownloadDisabledDetails:
      type: object
      properties: {}
      description: Disabled downloads.
    AllowDownloadEnabledDetails:
      type: object
      properties: {}
      description: Enabled downloads.
    AppPermissionsChangedDetails:
      type: object
      properties:
        app_name:
          type: string
          nullable: true
        permission:
          $ref: '#/components/schemas/AdminConsoleAppPermission'
        previous_value:
          $ref: '#/components/schemas/AdminConsoleAppPolicy'
        new_value:
          $ref: '#/components/schemas/AdminConsoleAppPolicy'
      required:
      - previous_value
      - new_value
      description: Changed app permissions.
    CameraUploadsPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/CameraUploadsPolicy'
        previous_value:
          $ref: '#/components/schemas/CameraUploadsPolicy'
      required:
      - new_value
      - previous_value
      description: Changed camera uploads setting for team.
    CaptureTranscriptPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/CaptureTranscriptPolicy'
        previous_value:
          $ref: '#/components/schemas/CaptureTranscriptPolicy'
      required:
      - new_value
      - previous_value
      description: Changed Capture transcription policy for team.
    ClassificationChangePolicyDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/ClassificationPolicyEnumWrapper'
        new_value:
          $ref: '#/components/schemas/ClassificationPolicyEnumWrapper'
        classification_type:
          $ref: '#/components/schemas/ClassificationType'
      required:
      - previous_value
      - new_value
      - classification_type
      description: Changed classification policy for team.
    ComputerBackupPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ComputerBackupPolicy'
        previous_value:
          $ref: '#/components/schemas/ComputerBackupPolicy'
      required:
      - new_value
      - previous_value
      description: Changed computer backup policy for team.
    ContentAdministrationPolicyChangedDetails:
      type: object
      properties:
        new_value:
          type: string
        previous_value:
          type: string
      required:
      - new_value
      - previous_value
      description: Changed content management setting.
    DataPlacementRestrictionChangePolicyDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/PlacementRestriction'
        new_value:
          $ref: '#/components/schemas/PlacementRestriction'
      required:
      - previous_value
      - new_value
      description: Set restrictions on data center locations where team data resides.
    DataPlacementRestrictionSatisfyPolicyDetails:
      type: object
      properties:
        placement_restriction:
          $ref: '#/components/schemas/PlacementRestriction'
      required:
      - placement_restriction
      description: Completed restrictions on data center locations where team data resides.
    DeviceApprovalsAddExceptionDetails:
      type: object
      properties: {}
      description: Added members to device approvals exception list.
    DeviceApprovalsChangeDesktopPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DeviceApprovalsPolicy'
        previous_value:
          $ref: '#/components/schemas/DeviceApprovalsPolicy'
      description: Set/removed limit on number of computers member can link to team Dropbox account.
    DeviceApprovalsChangeMobilePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DeviceApprovalsPolicy'
        previous_value:
          $ref: '#/components/schemas/DeviceApprovalsPolicy'
      description: Set/removed limit on number of mobile devices member can link to team Dropbox account.
    DeviceApprovalsChangeOverageActionDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/RolloutMethod'
        previous_value:
          $ref: '#/components/schemas/RolloutMethod'
      description: Changed device approvals setting when member is over limit.
    DeviceApprovalsChangeUnlinkActionDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DeviceUnlinkPolicy'
        previous_value:
          $ref: '#/components/schemas/DeviceUnlinkPolicy'
      description: Changed device approvals setting when member unlinks approved device.
    DeviceApprovalsRemoveExceptionDetails:
      type: object
      properties: {}
      description: Removed members from device approvals exception list.
    DirectoryRestrictionsAddMembersDetails:
      type: object
      properties: {}
      description: Added members to directory restrictions list.
    DirectoryRestrictionsRemoveMembersDetails:
      type: object
      properties: {}
      description: Removed members from directory restrictions list.
    DropboxPasswordsPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DropboxPasswordsPolicy'
        previous_value:
          $ref: '#/components/schemas/DropboxPasswordsPolicy'
      required:
      - new_value
      - previous_value
      description: Changed Dropbox Passwords policy for team.
    EmailIngestPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/EmailIngestPolicy'
        previous_value:
          $ref: '#/components/schemas/EmailIngestPolicy'
      required:
      - new_value
      - previous_value
      description: Changed email to Dropbox policy for team.
    EmmAddExceptionDetails:
      type: object
      properties: {}
      description: Added members to EMM exception list.
    EmmChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/EmmState'
        previous_value:
          $ref: '#/components/schemas/EmmState'
      required:
      - new_value
      description: Enabled/disabled enterprise mobility management for members.
    EmmRemoveExceptionDetails:
      type: object
      properties: {}
      description: Removed members from EMM exception list.
    ExtendedVersionHistoryChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ExtendedVersionHistoryPolicy'
        previous_value:
          $ref: '#/components/schemas/ExtendedVersionHistoryPolicy'
      required:
      - new_value
      description: Accepted/opted out of extended version history.
    ExternalDriveBackupPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ExternalDriveBackupPolicy'
        previous_value:
          $ref: '#/components/schemas/ExternalDriveBackupPolicy'
      required:
      - new_value
      - previous_value
      description: Changed external drive backup policy for team.
    FileCommentsChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FileCommentsPolicy'
        previous_value:
          $ref: '#/components/schemas/FileCommentsPolicy'
      required:
      - new_value
      description: Enabled/disabled commenting on team files.
    FileLockingPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FileLockingPolicyState'
        previous_value:
          $ref: '#/components/schemas/FileLockingPolicyState'
      required:
      - new_value
      - previous_value
      description: Changed file locking policy for team.
    FileProviderMigrationPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FileProviderMigrationPolicyState'
        previous_value:
          $ref: '#/components/schemas/FileProviderMigrationPolicyState'
      required:
      - new_value
      - previous_value
      description: Changed File Provider Migration policy for team.
    FileRequestsChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FileRequestsPolicy'
        previous_value:
          $ref: '#/components/schemas/FileRequestsPolicy'
      required:
      - new_value
      description: Enabled/disabled file requests.
    FileRequestsEmailsEnabledDetails:
      type: object
      properties: {}
      description: Enabled file request emails for everyone.
    FileRequestsEmailsRestrictedToTeamOnlyDetails:
      type: object
      properties: {}
      description: Enabled file request emails for team.
    FileTransfersPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FileTransfersPolicy'
        previous_value:
          $ref: '#/components/schemas/FileTransfersPolicy'
      required:
      - new_value
      - previous_value
      description: Changed file transfers policy for team.
    FolderLinkRestrictionPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/FolderLinkRestrictionPolicy'
        previous_value:
          $ref: '#/components/schemas/FolderLinkRestrictionPolicy'
      required:
      - new_value
      - previous_value
      description: Changed folder link restrictions policy for team.
    GoogleSsoChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/GoogleSsoPolicy'
        previous_value:
          $ref: '#/components/schemas/GoogleSsoPolicy'
      required:
      - new_value
      description: Enabled/disabled Google single sign-on for team.
    GroupUserManagementChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/GroupCreation'
        previous_value:
          $ref: '#/components/schemas/GroupCreation'
      required:
      - new_value
      description: Changed who can create groups.
    IntegrationPolicyChangedDetails:
      type: object
      properties:
        integration_name:
          type: string
        new_value:
          $ref: '#/components/schemas/IntegrationPolicy'
        previous_value:
          $ref: '#/components/schemas/IntegrationPolicy'
      required:
      - integration_name
      - new_value
      - previous_value
      description: Changed integration policy for team.
    InviteAcceptanceEmailPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/InviteAcceptanceEmailPolicy'
        previous_value:
          $ref: '#/components/schemas/InviteAcceptanceEmailPolicy'
      required:
      - new_value
      - previous_value
      description: Changed invite accept email policy for team.
    MemberRequestsChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MemberRequestsPolicy'
        previous_value:
          $ref: '#/components/schemas/MemberRequestsPolicy'
      required:
      - new_value
      description: Changed whether users can find team when not invited.
    MemberSendInvitePolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MemberSendInvitePolicy'
        previous_value:
          $ref: '#/components/schemas/MemberSendInvitePolicy'
      required:
      - new_value
      - previous_value
      description: Changed member send invite policy for team.
    MemberSpaceLimitsAddExceptionDetails:
      type: object
      properties: {}
      description: Added members to member space limit exception list.
    MemberSpaceLimitsChangeCapsTypePolicyDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SpaceCapsType'
        new_value:
          $ref: '#/components/schemas/SpaceCapsType'
      required:
      - previous_value
      - new_value
      description: Changed member space limit type for team.
    MemberSpaceLimitsChangePolicyDetails:
      type: object
      properties:
        previous_value:
          type: integer
          format: int64
          nullable: true
        new_value:
          type: integer
          format: int64
          nullable: true
      description: Changed team default member space limit.
    MemberSpaceLimitsRemoveExceptionDetails:
      type: object
      properties: {}
      description: Removed members from member space limit exception list.
    MemberSuggestionsChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MemberSuggestionsPolicy'
        previous_value:
          $ref: '#/components/schemas/MemberSuggestionsPolicy'
      required:
      - new_value
      description: Enabled/disabled option for team members to suggest people to add to team.
    MicrosoftOfficeAddinChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/MicrosoftOfficeAddinPolicy'
        previous_value:
          $ref: '#/components/schemas/MicrosoftOfficeAddinPolicy'
      required:
      - new_value
      description: Enabled/disabled Microsoft Office add-in.
    NetworkControlChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/NetworkControlPolicy'
        previous_value:
          $ref: '#/components/schemas/NetworkControlPolicy'
      required:
      - new_value
      description: Enabled/disabled network control.
    PaperChangeDeploymentPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/PaperDeploymentPolicy'
        previous_value:
          $ref: '#/components/schemas/PaperDeploymentPolicy'
      required:
      - new_value
      description: Changed whether Dropbox Paper, when enabled, is deployed to all members or to specific members.
    PaperChangeMemberLinkPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/PaperMemberPolicy'
      required:
      - new_value
      description: Changed whether non-members can view Paper docs with link.
    PaperChangeMemberPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/PaperMemberPolicy'
        previous_value:
          $ref: '#/components/schemas/PaperMemberPolicy'
      required:
      - new_value
      description: Changed whether members can share Paper docs outside team, and if docs are accessible only by team members or anyone by default.
    PaperChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/PaperEnabledPolicy'
        previous_value:
          $ref: '#/components/schemas/PaperEnabledPolicy'
      required:
      - new_value
      description: Enabled/disabled Dropbox Paper for team.
    PaperDefaultFolderPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/PaperDefaultFolderPolicy'
        previous_value:
          $ref: '#/components/schemas/PaperDefaultFolderPolicy'
      required:
      - new_value
      - previous_value
      description: Changed Paper Default Folder Policy setting for team.
    PaperDesktopPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/PaperDesktopPolicy'
        previous_value:
          $ref: '#/components/schemas/PaperDesktopPolicy'
      required:
      - new_value
      - previous_value
      description: Enabled/disabled Paper Desktop for team.
    PaperEnabledUsersGroupAdditionDetails:
      type: object
      properties: {}
      description: Added users to Paper-enabled users list.
    PaperEnabledUsersGroupRemovalDetails:
      type: object
      properties: {}
      description: Removed users from Paper-enabled users list.
    PasswordStrengthRequirementsChangePolicyDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/PasswordStrengthPolicy'
        new_value:
          $ref: '#/components/schemas/PasswordStrengthPolicy'
      required:
      - previous_value
      - new_value
      description: Changed team password strength requirements.
    PermanentDeleteChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ContentPermanentDeletePolicy'
        previous_value:
          $ref: '#/components/schemas/ContentPermanentDeletePolicy'
      required:
      - new_value
      description: Enabled/disabled ability of team members to permanently delete content.
    ResellerSupportChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ResellerSupportPolicy'
        previous_value:
          $ref: '#/components/schemas/ResellerSupportPolicy'
      required:
      - new_value
      - previous_value
      description: Enabled/disabled reseller support.
    RewindPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/RewindPolicy'
        previous_value:
          $ref: '#/components/schemas/RewindPolicy'
      required:
      - new_value
      - previous_value
      description: Changed Rewind policy for team.
    SendForSignaturePolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SendForSignaturePolicy'
        previous_value:
          $ref: '#/components/schemas/SendForSignaturePolicy'
      required:
      - new_value
      - previous_value
      description: Changed send for signature policy for team.
    SharingChangeFolderJoinPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SharingFolderJoinPolicy'
        previous_value:
          $ref: '#/components/schemas/SharingFolderJoinPolicy'
      required:
      - new_value
      description: Changed whether team members can join shared folders owned outside team.
    SharingChangeLinkAllowChangeExpirationPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/EnforceLinkPasswordPolicy'
        previous_value:
          $ref: '#/components/schemas/EnforceLinkPasswordPolicy'
      required:
      - new_value
      description: Changed the allow remove or change expiration policy for the links shared outside of the team.
    SharingChangeLinkDefaultExpirationPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/DefaultLinkExpirationDaysPolicy'
        previous_value:
          $ref: '#/components/schemas/DefaultLinkExpirationDaysPolicy'
      required:
      - new_value
      description: Changed the default expiration for the links shared outside of the team.
    SharingChangeLinkEnforcePasswordPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ChangeLinkExpirationPolicy'
        previous_value:
          $ref: '#/components/schemas/ChangeLinkExpirationPolicy'
      required:
      - new_value
      description: Changed the password requirement for the links shared outside of the team.
    SharingChangeLinkPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SharingLinkPolicy'
        previous_value:
          $ref: '#/components/schemas/SharingLinkPolicy'
      required:
      - new_value
      description: Changed whether members can share links outside team, and if links are accessible only by team members or anyone by default.
    SharingChangeMemberPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SharingMemberPolicy'
        previous_value:
          $ref: '#/components/schemas/SharingMemberPolicy'
      required:
      - new_value
      description: Changed whether members can share files/folders outside team.
    ShowcaseChangeDownloadPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ShowcaseDownloadPolicy'
        previous_value:
          $ref: '#/components/schemas/ShowcaseDownloadPolicy'
      required:
      - new_value
      - previous_value
      description: Enabled/disabled downloading files from Dropbox Showcase for team.
    ShowcaseChangeEnabledPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ShowcaseEnabledPolicy'
        previous_value:
          $ref: '#/components/schemas/ShowcaseEnabledPolicy'
      required:
      - new_value
      - previous_value
      description: Enabled/disabled Dropbox Showcase for team.
    ShowcaseChangeExternalSharingPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/ShowcaseExternalSharingPolicy'
        previous_value:
          $ref: '#/components/schemas/ShowcaseExternalSharingPolicy'
      required:
      - new_value
      - previous_value
      description: Enabled/disabled sharing Dropbox Showcase externally for team.
    SmarterSmartSyncPolicyChangedDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SmarterSmartSyncPolicyState'
        new_value:
          $ref: '#/components/schemas/SmarterSmartSyncPolicyState'
      required:
      - previous_value
      - new_value
      description: Changed automatic Smart Sync setting for team.
    SmartSyncChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SmartSyncPolicy'
        previous_value:
          $ref: '#/components/schemas/SmartSyncPolicy'
      description: Changed default Smart Sync setting for team members.
    SmartSyncNotOptOutDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SmartSyncOptOutPolicy'
        new_value:
          $ref: '#/components/schemas/SmartSyncOptOutPolicy'
      required:
      - previous_value
      - new_value
      description: Opted team into Smart Sync.
    SmartSyncOptOutDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/SmartSyncOptOutPolicy'
        new_value:
          $ref: '#/components/schemas/SmartSyncOptOutPolicy'
      required:
      - previous_value
      - new_value
      description: Opted team out of Smart Sync.
    SsoChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/SsoPolicy'
        previous_value:
          $ref: '#/components/schemas/SsoPolicy'
      required:
      - new_value
      description: Changed single sign-on setting for team.
    TeamBrandingPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TeamBrandingPolicy'
        previous_value:
          $ref: '#/components/schemas/TeamBrandingPolicy'
      required:
      - new_value
      - previous_value
      description: Changed team branding policy for team.
    TeamExtensionsPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TeamExtensionsPolicy'
        previous_value:
          $ref: '#/components/schemas/TeamExtensionsPolicy'
      required:
      - new_value
      - previous_value
      description: Changed App Integrations setting for team.
    TeamSelectiveSyncPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TeamSelectiveSyncPolicy'
        previous_value:
          $ref: '#/components/schemas/TeamSelectiveSyncPolicy'
      required:
      - new_value
      - previous_value
      description: Enabled/disabled Team Selective Sync for team.
    TeamSharingWhitelistSubjectsChangedDetails:
      type: object
      properties:
        added_whitelist_subjects:
          type: array
          items:
            type: string
        removed_whitelist_subjects:
          type: array
          items:
            type: string
      required:
      - added_whitelist_subjects
      - removed_whitelist_subjects
      description: Edited the approved list for sharing externally.
    TfaAddExceptionDetails:
      type: object
      properties: {}
      description: Added members to two factor authentication exception list.
    TfaChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TwoStepVerificationPolicy'
        previous_value:
          $ref: '#/components/schemas/TwoStepVerificationPolicy'
      required:
      - new_value
      description: Changed two-step verification setting for team.
    TfaRemoveExceptionDetails:
      type: object
      properties: {}
      description: Removed members from two factor authentication exception list.
    TwoAccountChangePolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TwoAccountPolicy'
        previous_value:
          $ref: '#/components/schemas/TwoAccountPolicy'
      required:
      - new_value
      description: Enabled/disabled option for members to link personal Dropbox account and team account to same computer.
    ViewerInfoPolicyChangedDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/PassPolicy'
        new_value:
          $ref: '#/components/schemas/PassPolicy'
      required:
      - previous_value
      - new_value
      description: Changed team policy for viewer info.
    WatermarkingPolicyChangedDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/WatermarkingPolicy'
        previous_value:
          $ref: '#/components/schemas/WatermarkingPolicy'
      required:
      - new_value
      - previous_value
      description: Changed watermarking policy for team.
    WebSessionsChangeActiveSessionLimitDetails:
      type: object
      properties:
        previous_value:
          type: string
        new_value:
          type: string
      required:
      - previous_value
      - new_value
      description: Changed limit on active sessions per member.
    WebSessionsChangeFixedLengthPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/WebSessionsFixedLengthPolicy'
        previous_value:
          $ref: '#/components/schemas/WebSessionsFixedLengthPolicy'
      description: Changed how long members can stay signed in to Dropbox.com.
    WebSessionsChangeIdleLengthPolicyDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/WebSessionsIdleLengthPolicy'
        previous_value:
          $ref: '#/components/schemas/WebSessionsIdleLengthPolicy'
      description: Changed how long team members can be idle while signed in to Dropbox.com.
    DataResidencyMigrationRequestSuccessfulDetails:
      type: object
      properties: {}
      description: Requested data residency migration for team data.
    DataResidencyMigrationRequestUnsuccessfulDetails:
      type: object
      properties: {}
      description: Request for data residency migration for team data has failed.
    TeamMergeFromDetails:
      type: object
      properties:
        team_name:
          type: string
      required:
      - team_name
      description: Merged another team into this team.
    TeamMergeToDetails:
      type: object
      properties:
        team_name:
          type: string
      required:
      - team_name
      description: Merged this team into another team.
    TeamProfileAddBackgroundDetails:
      type: object
      properties: {}
      description: Added team background to display on shared link headers.
    TeamProfileAddLogoDetails:
      type: object
      properties: {}
      description: Added team logo to display on shared link headers.
    TeamProfileChangeBackgroundDetails:
      type: object
      properties: {}
      description: Changed team background displayed on shared link headers.
    TeamProfileChangeDefaultLanguageDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/LanguageCode'
        previous_value:
          $ref: '#/components/schemas/LanguageCode'
      required:
      - new_value
      - previous_value
      description: Changed default language for team.
    TeamProfileChangeLogoDetails:
      type: object
      properties: {}
      description: Changed team logo displayed on shared link headers.
    TeamProfileChangeNameDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/TeamName'
        new_value:
          $ref: '#/components/schemas/TeamName'
      required:
      - new_value
      description: Changed team name.
    TeamProfileRemoveBackgroundDetails:
      type: object
      properties: {}
      description: Removed team background displayed on shared link headers.
    TeamProfileRemoveLogoDetails:
      type: object
      properties: {}
      description: Removed team logo displayed on shared link headers.
    TfaAddBackupPhoneDetails:
      type: object
      properties: {}
      description: Added backup phone for two-step verification.
    TfaAddSecurityKeyDetails:
      type: object
      properties: {}
      description: Added security key for two-step verification.
    TfaChangeBackupPhoneDetails:
      type: object
      properties: {}
      description: Changed backup phone for two-step verification.
    TfaChangeStatusDetails:
      type: object
      properties:
        new_value:
          $ref: '#/components/schemas/TfaConfiguration'
        previous_value:
          $ref: '#/components/schemas/TfaConfiguration'
        used_rescue_code:
          type: boolean
          nullable: true
      required:
      - new_value
      description: Enabled/disabled/changed two-step verification setting.
    TfaRemoveBackupPhoneDetails:
      type: object
      properties: {}
      description: Removed backup phone for two-step verification.
    TfaRemoveSecurityKeyDetails:
      type: object
      properties: {}
      description: Removed security key for two-step verification.
    TfaResetDetails:
      type: object
      properties: {}
      description: Reset two-step verification for team member.
    ChangedEnterpriseAdminRoleDetails:
      type: object
      properties:
        previous_value:
          $ref: '#/components/schemas/FedAdminRole'
        new_value:
          $ref: '#/components/schemas/FedAdminRole'
        team_name:
          type: string
      required:
      - previous_value
      - new_value
      - team_name
      description: Changed enterprise admin role.
    ChangedEnterpriseConnectedTeamStatusDetails:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/FedHandshakeAction'
        additional_info:
          $ref: '#/components/schemas/FederationStatusChangeAdditionalInfo'
        previous_value:
          $ref: '#/components/schemas/TrustedTeamsRequestState'
        new_value:
          $ref: '#/components/schemas/TrustedTeamsRequestState'
      required:
      - action
      - additional_info
      - previous_value
      - new_value
      description: Changed enterprise-connected team status.
    EndedEnterpriseAdminSessionDetails:
      type: object
      properties: {}
      description: Ended enterprise admin session.
    EndedEnterpriseAdminSessionDeprecatedDetails:
      type: object
      properties:
        federation_extra_details:
          $ref: '#/components/schemas/FedExtraDetails'
      required:
      - federation_extra_details
      description: Ended enterprise admin session.
    EnterpriseSettingsLockingDetails:
      type: object
      properties:
        team_name:
          type: string
        settings_page_name:
          type: string
        previous_settings_page_locking_state:
          type: string
        new_settings_page_locking_state:
          type: string
      required:
      - team_name
      - settings_page_name
      - previous_settings_page_locking_state
      - new_settings_page_locking_state
      description: Changed who can update a setting.
    GuestAdminChangeStatusDetails:
      type: object
      properties:
        is_guest:
          type: boolean
        guest_team_name:
          type: string
          nullable: true
        host_team_name:
          type: string
          nullable: true
        previous_value:
          $ref: '#/components/schemas/TrustedTeamsRequestState'
        new_value:
          $ref: '#/components/schemas/TrustedTeamsRequestState'
        action_details:
          $ref: '#/components/schemas/TrustedTeamsRequestAction'
      required:
      - is_guest
      - previous_value
      - new_value
      - action_details
      description: Changed guest team admin status.
    StartedEnterpriseAdminSessionDetails:
      type: object
      properties:
        federation_extra_details:
          $ref: '#/components/schemas/FedExtraDetails'
      required:
      - federation_extra_details
      description: Started enterprise admin session.
    TeamMergeRequestAcceptedDetails:
      type: object
      properties:
        request_accepted_details:
          $ref: '#/components/schemas/TeamMergeRequestAcceptedExtraDetails'
      required:
      - request_accepted_details
      description: Accepted a team merge request.
    TeamMergeRequestAcceptedShownToPrimaryTeamDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Accepted a team merge request.
    TeamMergeRequestAcceptedShownToSecondaryTeamDetails:
      type: object
      properties:
        primary_team:
          type: string
        sent_by:
          type: string
      required:
      - primary_team
      - sent_by
      description: Accepted a team merge request.
    TeamMergeRequestAutoCanceledDetails:
      type: object
      properties:
        details:
          type: string
          nullable: true
      description: Automatically canceled team merge request.
    TeamMergeRequestCanceledDetails:
      type: object
      properties:
        request_canceled_details:
          $ref: '#/components/schemas/TeamMergeRequestCanceledExtraDetails'
      required:
      - request_canceled_details
      description: Canceled a team merge request.
    TeamMergeRequestCanceledShownToPrimaryTeamDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Canceled a team merge request.
    TeamMergeRequestCanceledShownToSecondaryTeamDetails:
      type: object
      properties:
        sent_to:
          type: string
        sent_by:
          type: string
      required:
      - sent_to
      - sent_by
      description: Canceled a team merge request.
    TeamMergeRequestExpiredDetails:
      type: object
      properties:
        request_expired_details:
          $ref: '#/components/schemas/TeamMergeRequestExpiredExtraDetails'
      required:
      - request_expired_details
      description: Team merge request expired.
    TeamMergeRequestExpiredShownToPrimaryTeamDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Team merge request expired.
    TeamMergeRequestExpiredShownToSecondaryTeamDetails:
      type: object
      properties:
        sent_to:
          type: string
      required:
      - sent_to
      description: Team merge request expired.
    TeamMergeRequestRejectedShownToPrimaryTeamDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_by:
          type: string
      required:
      - secondary_team
      - sent_by
      description: Rejected a team merge request.
    TeamMergeRequestRejectedShownToSecondaryTeamDetails:
      type: object
      properties:
        sent_by:
          type: string
      required:
      - sent_by
      description: Rejected a team merge request.
    TeamMergeRequestReminderDetails:
      type: object
      properties:
        request_reminder_details:
          $ref: '#/components/schemas/TeamMergeRequestReminderExtraDetails'
      required:
      - request_reminder_details
      description: Sent a team merge request reminder.
    TeamMergeRequestReminderShownToPrimaryTeamDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_to:
          type: string
      required:
      - secondary_team
      - sent_to
      description: Sent a team merge request reminder.
    TeamMergeRequestReminderShownToSecondaryTeamDetails:
      type: object
      properties:
        sent_to:
          type: string
      required:
      - sent_to
      description: Sent a team merge request reminder.
    TeamMergeRequestRevokedDetails:
      type: object
      properties:
        team:
          type: string
      required:
      - team
      description: Canceled the team merge.
    TeamMergeRequestSentShownToPrimaryTeamDetails:
      type: object
      properties:
        secondary_team:
          type: string
        sent_to:
          type: string
      required:
      - secondary_team
      - sent_to
      description: Requested to merge their Dropbox team into yours.
    TeamMergeRequestSentShownToSecondaryTeamDetails:
      type: object
      properties:
        sent_to:
          type: string
      required:
      - sent_to
      description: Requested to merge your team into another Dropbox team.
    AdminAlertingAlertStateChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AdminAlertingChangedAlertConfigType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AdminAlertingTriggeredAlertType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RansomwareRestoreProcessCompletedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RansomwareRestoreProcessStartedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AppBlockedByPermissionsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AppLinkTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AppLinkUserType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AppUnlinkTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AppUnlinkUserType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    IntegrationConnectedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    IntegrationDisconnectedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileAddCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileChangeCommentSubscriptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileDeleteCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileEditCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileLikeCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileResolveCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileUnlikeCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileUnresolveCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyAddFoldersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyAddFolderFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyContentDisposedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyEditDetailsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyEditDurationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyExportCreatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyExportRemovedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyRemoveFoldersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyReportCreatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GovernancePolicyZipPartDownloadedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsActivateAHoldType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsAddMembersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsChangeHoldDetailsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsChangeHoldNameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsExportAHoldType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsExportCancelledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsExportDownloadedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsExportRemovedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsReleaseAHoldType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsRemoveMembersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LegalHoldsReportAHoldType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceChangeIpDesktopType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceChangeIpMobileType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceChangeIpWebType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceDeleteOnUnlinkFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceDeleteOnUnlinkSuccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceLinkFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceLinkSuccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceManagementDisabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceManagementEnabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceSyncBackupStatusChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceUnlinkType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DropboxPasswordsExportedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DropboxPasswordsNewDeviceEnrolledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmRefreshAuthTokenType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExternalDriveBackupEligibilityStatusCheckedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExternalDriveBackupStatusChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AccountCaptureChangeAvailabilityType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AccountCaptureMigrateAccountType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AccountCaptureNotificationEmailsSentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AccountCaptureRelinquishAccountType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DisabledDomainInvitesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainInvitesApproveRequestToJoinTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainInvitesDeclineRequestToJoinTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainInvitesEmailExistingUsersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainInvitesRequestToJoinTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainInvitesSetInviteNewUserPrefToNoType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainInvitesSetInviteNewUserPrefToYesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainVerificationAddDomainFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainVerificationAddDomainSuccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DomainVerificationRemoveDomainType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EnabledDomainInvitesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyCancelKeyDeletionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyCreateKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyDeleteKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyDisableKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyEnableKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyRotateKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEncryptionKeyScheduleKeyDeletionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ApplyNamingConventionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    CreateFolderType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileAddType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileAddFromAutomationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileCopyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileDownloadType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileEditType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileGetCopyReferenceType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileLockingLockStatusChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileMoveType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FilePermanentlyDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FilePreviewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRenameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRestoreType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRevertType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRollbackChangesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileSaveCopyReferenceType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FolderOverviewDescriptionChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FolderOverviewItemPinnedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FolderOverviewItemUnpinnedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ObjectLabelAddedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ObjectLabelRemovedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ObjectLabelUpdatedValueType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    OrganizeFolderWithTidyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ReplayFileDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RewindFolderType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    UndoNamingConventionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    UndoOrganizeFolderWithTidyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    UserTagsAddedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    UserTagsRemovedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmailIngestReceiveFileType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestChangeType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestCloseType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestReceiveFileType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupAddExternalIdType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupAddMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupChangeExternalIdType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupChangeManagementTypeType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupChangeMemberRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupDescriptionUpdatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupJoinPolicyUpdatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupMovedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupRemoveExternalIdType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupRemoveMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupRenameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AccountLockOrUnlockedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmErrorType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GuestAdminSignedInViaTrustedTeamsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GuestAdminSignedOutViaTrustedTeamsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LoginFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LoginSuccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    LogoutType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ResellerSupportSessionEndType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ResellerSupportSessionStartType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SignInAsSessionEndType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SignInAsSessionStartType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoErrorType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BackupAdminInvitationSentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BackupInvitationOpenedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    CreateTeamInviteLinkType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeleteTeamInviteLinkType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberAddExternalIdType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberAddNameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeAdminRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeEmailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeExternalIdType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeMembershipTypeType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeNameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeResellerRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberChangeStatusType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberDeleteManualContactsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberDeleteProfilePhotoType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberPermanentlyDeleteAccountContentsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberRemoveExternalIdType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSetProfilePhotoType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsAddCustomQuotaType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsChangeCustomQuotaType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsChangeStatusType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsRemoveCustomQuotaType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSuggestType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberTransferAccountContentsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PendingSecondaryEmailAddedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SecondaryEmailDeletedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SecondaryEmailVerifiedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SecondaryMailsPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderAddPageType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderAddSectionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderRemovePageType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderRemoveSectionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderRenamePageType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderRenameSectionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderReorderPageType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    BinderReorderSectionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentAddMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentAddToFolderType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentArchiveType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentPermanentlyDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentRemoveFromFolderType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentRemoveMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentRenameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperContentRestoreType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocAddCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocChangeMemberRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocChangeSharingPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocChangeSubscriptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocDeletedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocDeleteCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocDownloadType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocEditType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocEditCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocFollowedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocMentionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocOwnershipChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocRequestAccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocResolveCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocRevertType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocSlackShareType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocTeamInviteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocTrashedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocUnresolveCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocUntrashedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDocViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperExternalViewAllowType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperExternalViewDefaultTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperExternalViewForbidType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperFolderChangeSubscriptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperFolderDeletedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperFolderFollowedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperFolderTeamInviteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperPublishedLinkChangePermissionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperPublishedLinkCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperPublishedLinkDisabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperPublishedLinkViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PasswordChangeType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PasswordResetType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PasswordResetAllType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ClassificationCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ClassificationCreateReportFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmCreateExceptionsReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmCreateUsageReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExportMembersReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExportMembersReportFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExternalSharingCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExternalSharingReportFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoExpirationLinkGenCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoExpirationLinkGenReportFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoPasswordLinkGenCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoPasswordLinkGenReportFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoPasswordLinkViewCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoPasswordLinkViewReportFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    OutdatedLinkViewCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    OutdatedLinkViewReportFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperAdminExportStartType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RansomwareAlertCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RansomwareAlertCreateReportFailedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SmartSyncCreateAdminPrivilegeReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamActivityCreateReportType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamActivityCreateReportFailType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    CollectionShareType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileTransfersFileAddType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileTransfersTransferDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileTransfersTransferDownloadType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileTransfersTransferSendType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileTransfersTransferViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoteAclInviteOnlyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoteAclLinkType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoteAclTeamLinkType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoteSharedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NoteShareReceiveType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    OpenNoteSharedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ReplayFileSharedLinkCreatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ReplayFileSharedLinkModifiedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ReplayProjectTeamAddType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ReplayProjectTeamDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfAddGroupType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfAllowNonMembersToViewSharedLinksType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfExternalInviteWarnType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfFbInviteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfFbInviteChangeRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfFbUninviteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfInviteGroupType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfTeamGrantAccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfTeamInviteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfTeamInviteChangeRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfTeamJoinType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfTeamJoinFromOobLinkType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SfTeamUninviteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentAddInviteesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentAddLinkExpiryType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentAddLinkPasswordType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentAddMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeDownloadsPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeInviteeRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeLinkAudienceType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeLinkExpiryType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeLinkPasswordType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeMemberRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentChangeViewerInfoPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentClaimInvitationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentCopyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentDownloadType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRelinquishMembershipType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRemoveInviteesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRemoveLinkExpiryType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRemoveLinkPasswordType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRemoveMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRequestAccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRestoreInviteesType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentRestoreMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentUnshareType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedContentViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderChangeLinkPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderChangeMembersInheritancePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderChangeMembersManagementPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderChangeMembersPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderDeclineInvitationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderMountType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderNestType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderTransferOwnershipType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedFolderUnmountType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkAddExpiryType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkChangeExpiryType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkChangeVisibilityType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkCopyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkDisableType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkDownloadType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkRemoveExpiryType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsAddExpirationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsAddPasswordType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsAllowDownloadDisabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsAllowDownloadEnabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsChangeAudienceType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsChangeExpirationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsChangePasswordType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsRemoveExpirationType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkSettingsRemovePasswordType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkShareType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedLinkViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharedNoteOpenedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShmodelDisableDownloadsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShmodelEnableDownloadsType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShmodelGroupShareType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseAccessGrantedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseAddMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseArchivedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseCreatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseDeleteCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseEditedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseEditCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseFileAddedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseFileDownloadType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseFileRemovedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseFileViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcasePermanentlyDeletedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcasePostCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseRemoveMemberType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseRenamedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseRequestAccessType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseResolveCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseRestoredType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseTrashedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseTrashedDeprecatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseUnresolveCommentType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseUntrashedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseUntrashedDeprecatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseViewType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoAddCertType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoAddLoginUrlType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoAddLogoutUrlType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoChangeCertType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoChangeLoginUrlType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoChangeLogoutUrlType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoChangeSamlIdentityModeType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoRemoveCertType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoRemoveLoginUrlType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoRemoveLogoutUrlType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamFolderChangeStatusType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamFolderCreateType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamFolderDowngradeType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamFolderPermanentlyDeleteType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamFolderRenameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamSelectiveSyncSettingsChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AccountCaptureChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AdminEmailRemindersChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AllowDownloadDisabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AllowDownloadEnabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    AppPermissionsChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    CameraUploadsPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    CaptureTranscriptPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ClassificationChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ComputerBackupPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ContentAdministrationPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DataPlacementRestrictionChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DataPlacementRestrictionSatisfyPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceApprovalsAddExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceApprovalsChangeDesktopPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceApprovalsChangeMobilePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceApprovalsChangeOverageActionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceApprovalsChangeUnlinkActionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DeviceApprovalsRemoveExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DirectoryRestrictionsAddMembersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DirectoryRestrictionsRemoveMembersType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DropboxPasswordsPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmailIngestPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmAddExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EmmRemoveExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExtendedVersionHistoryChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ExternalDriveBackupPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileCommentsChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileLockingPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileProviderMigrationPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestsChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestsEmailsEnabledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileRequestsEmailsRestrictedToTeamOnlyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FileTransfersPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    FolderLinkRestrictionPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GoogleSsoChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GroupUserManagementChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    IntegrationPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    InviteAcceptanceEmailPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberRequestsChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSendInvitePolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsAddExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsChangeCapsTypePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSpaceLimitsRemoveExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MemberSuggestionsChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    MicrosoftOfficeAddinChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    NetworkControlChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperChangeDeploymentPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperChangeMemberLinkPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperChangeMemberPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDefaultFolderPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperDesktopPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperEnabledUsersGroupAdditionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PaperEnabledUsersGroupRemovalType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PasswordStrengthRequirementsChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    PermanentDeleteChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ResellerSupportChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    RewindPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SendForSignaturePolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharingChangeFolderJoinPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharingChangeLinkAllowChangeExpirationPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharingChangeLinkDefaultExpirationPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharingChangeLinkEnforcePasswordPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharingChangeLinkPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SharingChangeMemberPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseChangeDownloadPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseChangeEnabledPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ShowcaseChangeExternalSharingPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SmarterSmartSyncPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SmartSyncChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SmartSyncNotOptOutType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SmartSyncOptOutType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    SsoChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamBrandingPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamExtensionsPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamSelectiveSyncPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamSharingWhitelistSubjectsChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaAddExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaRemoveExceptionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TwoAccountChangePolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ViewerInfoPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    WatermarkingPolicyChangedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    WebSessionsChangeActiveSessionLimitType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    WebSessionsChangeFixedLengthPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    WebSessionsChangeIdleLengthPolicyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DataResidencyMigrationRequestSuccessfulType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    DataResidencyMigrationRequestUnsuccessfulType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeFromType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeToType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileAddBackgroundType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileAddLogoType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileChangeBackgroundType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileChangeDefaultLanguageType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileChangeLogoType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileChangeNameType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileRemoveBackgroundType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamProfileRemoveLogoType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaAddBackupPhoneType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaAddSecurityKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaChangeBackupPhoneType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaChangeStatusType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaRemoveBackupPhoneType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaRemoveSecurityKeyType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TfaResetType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ChangedEnterpriseAdminRoleType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    ChangedEnterpriseConnectedTeamStatusType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EndedEnterpriseAdminSessionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EndedEnterpriseAdminSessionDeprecatedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    EnterpriseSettingsLockingType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    GuestAdminChangeStatusType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    StartedEnterpriseAdminSessionType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestAcceptedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestAcceptedShownToPrimaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestAcceptedShownToSecondaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestAutoCanceledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestCanceledType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestCanceledShownToPrimaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestCanceledShownToSecondaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestExpiredType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestExpiredShownToPrimaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestExpiredShownToSecondaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestRejectedShownToPrimaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestRejectedShownToSecondaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestReminderType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestReminderShownToPrimaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestReminderShownToSecondaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestRevokedType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestSentShownToPrimaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamMergeRequestSentShownToSecondaryTeamType:
      type: object
      properties:
        description:
          type: string
      required:
      - description
    TeamEvent:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/DropboxTimestamp'
        event_category:
          $ref: '#/components/schemas/EventCategory'
        actor:
          $ref: '#/components/schemas/ActorLogInfo'
        origin:
          $ref: '#/components/schemas/OriginLogInfo'
        involve_non_team_member:
          type: boolean
          nullable: true
        context:
          $ref: '#/components/schemas/ContextLogInfo'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ParticipantLogInfo'
          nullable: true
        assets:
          type: array
          items:
            $ref: '#/components/schemas/AssetLogInfo'
          nullable: true
        event_type:
          $ref: '#/components/schemas/EventType'
        details:
          $ref: '#/components/schemas/EventDetails'
      required:
      - timestamp
      - event_category
      - event_type
      - details
      description: An audit log event.
    QuickActionType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - delete_shared_link
          - reset_password
          - restore_file_or_folder
          - unlink_app
          - unlink_device
          - unlink_session
      required:
      - .tag
      description: Quick action type.
    AccessMethodLogInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admin_console
          - api
          - content_manager
          - end_user
          - enterprise_console
          - sign_in_as
      required:
      - .tag
      description: Indicates the method in which the action was performed.
      discriminator:
        propertyName: .tag
        mapping:
          admin_console: '#/components/schemas/WebSessionLogInfo'
          api: '#/components/schemas/ApiSessionLogInfo'
          content_manager: '#/components/schemas/WebSessionLogInfo'
          end_user: '#/components/schemas/SessionLogInfo'
          enterprise_console: '#/components/schemas/WebSessionLogInfo'
          sign_in_as: '#/components/schemas/WebSessionLogInfo'
    AccountCaptureAvailability:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - available
          - unavailable
      required:
      - .tag
    AccountCaptureNotificationType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - actionable_notification
          - proactive_warning_notification
      required:
      - .tag
    AccountCapturePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - all_users
          - disabled
          - invited_users
          - prevent_personal_creation
      required:
      - .tag
    AccountState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - locked
          - unlocked
      required:
      - .tag
    ActionDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - remove_action
          - team_invite_details
          - team_join_details
      required:
      - .tag
      description: Additional information indicating the action taken that caused status change.
      discriminator:
        propertyName: .tag
        mapping:
          remove_action: '#/components/schemas/MemberRemoveActionType'
          team_invite_details: '#/components/schemas/TeamInviteDetails'
          team_join_details: '#/components/schemas/JoinTeamDetails'
    LinkedDeviceLogInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - desktop_device_session
          - legacy_device_session
          - mobile_device_session
          - web_device_session
      required:
      - .tag
      description: The device sessions that user is linked to.
      discriminator:
        propertyName: .tag
        mapping:
          desktop_device_session: '#/components/schemas/DesktopDeviceSessionLogInfo'
          legacy_device_session: '#/components/schemas/LegacyDeviceSessionLogInfo'
          mobile_device_session: '#/components/schemas/MobileDeviceSessionLogInfo'
          web_device_session: '#/components/schemas/WebDeviceSessionLogInfo'
    InviteMethod:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - auto_approve
          - invite_link
          - member_invite
          - moved_from_another_team
      required:
      - .tag
    MemberRemoveActionType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - delete
          - leave
          - offboard
          - offboard_and_retain_team_folders
      required:
      - .tag
    AdminAlertCategoryEnum:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - account_takeover
          - data_loss_protection
          - information_governance
          - malware_sharing
          - massive_file_operation
          - na
          - threat_management
      required:
      - .tag
      description: Alert category
    AdminAlertGeneralStateEnum:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - dismissed
          - in_progress
          - na
          - resolved
      required:
      - .tag
      description: Alert state
    AdminAlertSeverityEnum:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - high
          - info
          - low
          - medium
          - na
      required:
      - .tag
      description: Alert severity
    AlertRecipientsSettingType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - custom_list
          - invalid
          - none
          - team_admins
      required:
      - .tag
      description: Alert recipients setting type
    AdminAlertingAlertSensitivity:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - high
          - highest
          - invalid
          - low
          - lowest
          - medium
      required:
      - .tag
      description: Alert sensitivity
    AdminAlertingAlertStatePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - off
          - on
      required:
      - .tag
      description: Policy for controlling whether an alert can be triggered or not
    AdminConsoleAppPermission:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default_for_listed_apps
          - default_for_unlisted_apps
      required:
      - .tag
    AdminConsoleAppPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - allow
          - block
          - default
      required:
      - .tag
    AdminEmailRemindersPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for deciding whether team admins receive reminder emails for requests to join the team
    AdminRole:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - billing_admin
          - compliance_admin
          - content_admin
          - limited_admin
          - member_only
          - reporting_admin
          - security_admin
          - support_admin
          - team_admin
          - user_management_admin
      required:
      - .tag
    BackupStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Backup status
    CameraUploadsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling if team members can activate camera uploads
    CaptureTranscriptPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for deciding whether team users can transcription in Capture
    ChangeLinkExpirationPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - allowed
          - not_allowed
      required:
      - .tag
      description: Policy for deciding whether the team's default expiration days policy must be enforced when an externally shared link is updated
    ClassificationPolicyEnumWrapper:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
          - member_and_team_folders
          - team_folders
      required:
      - .tag
      description: Policy for controlling team access to the classification feature
    ClassificationType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - personal_information
          - pii
      required:
      - .tag
      description: The type of classification (currently only personal information)
    ComputerBackupPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling team access to computer backup feature
    ContentPermanentDeletePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for pemanent content deletion
    DefaultLinkExpirationDaysPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - day_1
          - day_180
          - day_3
          - day_30
          - day_7
          - day_90
          - none
          - year_1
      required:
      - .tag
      description: Policy for the default number of days until an externally shared link expires
    DeviceApprovalsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - limited
          - unlimited
      required:
      - .tag
    DeviceType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - desktop
          - mobile
      required:
      - .tag
    DeviceUnlinkPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - keep
          - remove
      required:
      - .tag
    DispositionActionType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - automatic_delete
          - automatic_permanently_delete
      required:
      - .tag
    DownloadPolicyType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - allow
          - disallow
      required:
      - .tag
      description: Shared content downloads policy
    DropboxPasswordsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for deciding whether team users can use Dropbox Passwords
    EmailIngestPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for deciding whether a team can use Email to Dropbox feature
    EnforceLinkPasswordPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - optional
          - required
      required:
      - .tag
      description: Policy for deciding whether password must be enforced when an externally shared link is updated
    ExtendedVersionHistoryPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - explicitly_limited
          - explicitly_unlimited
          - implicitly_limited
          - implicitly_unlimited
      required:
      - .tag
    ExternalDriveBackupEligibilityStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - exceed_license_cap
          - success
      required:
      - .tag
      description: External Drive Backup eligibility status
    ExternalDriveBackupPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling team access to external drive backup feature
    ExternalDriveBackupStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - broken
          - created
          - created_or_broken
          - deleted
          - empty
          - unknown
      required:
      - .tag
      description: External Drive Backup status
    FedAdminRole:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - enterprise_admin
          - not_enterprise_admin
      required:
      - .tag
    FedExtraDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - organization
          - team
      required:
      - .tag
      description: More details about the organization or team.
      discriminator:
        propertyName: .tag
        mapping:
          organization: '#/components/schemas/OrganizationDetails'
          team: '#/components/schemas/TeamDetails'
    FedHandshakeAction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - accepted_invite
          - canceled_invite
          - invite_expired
          - invited
          - rejected_invite
          - removed_team
      required:
      - .tag
    FederationStatusChangeAdditionalInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - connected_team_name
          - non_trusted_team_details
          - organization_name
      required:
      - .tag
      description: Additional information about the organization or connected team
      discriminator:
        propertyName: .tag
        mapping:
          connected_team_name: '#/components/schemas/ConnectedTeamName'
          non_trusted_team_details: '#/components/schemas/NonTrustedTeamDetails'
          organization_name: '#/components/schemas/OrganizationName'
    FileCommentNotificationPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Enable or disable file comments notifications
    FileCommentsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: File comments policy
    FileRequestsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: File requests policy
    FileTransfersPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: File transfers policy
    FolderLinkRestrictionPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for deciding whether applying link restrictions on all team owned folders
    GoogleSsoPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Google SSO policy
    GroupJoinPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - open
          - request_to_join
      required:
      - .tag
    IdentifierType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - email
          - facebook_profile_name
      required:
      - .tag
    IntegrationPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling whether a service integration is enabled for the team.
    InviteAcceptanceEmailPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for deciding whether team admins receive email when an invitation to join the team is accepted
    LabelType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - personal_information
          - test_only
          - user_defined_tag
      required:
      - .tag
      description: Label type
    LockStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - locked
          - unlocked
      required:
      - .tag
      description: File lock status
    LoginMethod:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - apple_oauth
          - first_party_token_exchange
          - google_oauth
          - lenovo_oauth
          - password
          - qr_code
          - saml
          - two_factor_authentication
          - web_session
      required:
      - .tag
    MemberRequestsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - auto_accept
          - disabled
          - require_approval
      required:
      - .tag
    MemberSendInvitePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - everyone
          - specific_members
      required:
      - .tag
      description: Policy for controlling whether team members can send team invites
    MemberStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - invited
          - moved_to_another_team
          - not_joined
          - removed
          - suspended
      required:
      - .tag
    MemberSuggestionsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Member suggestions policy
    MicrosoftOfficeAddinPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Microsoft Office addin policy
    NetworkControlPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Network control policy
    PaperAccessType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - commenter
          - editor
          - viewer
      required:
      - .tag
    PaperDownloadFormat:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - docx
          - html
          - markdown
          - pdf
      required:
      - .tag
    PaperMemberPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - anyone_with_link
          - only_team
          - team_and_explicitly_shared
      required:
      - .tag
      description: Policy for controlling if team members can share Paper documents externally.
    PassPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - allow
          - disabled
          - enabled
      required:
      - .tag
    PlacementRestriction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - australia_only
          - europe_only
          - japan_only
          - none
          - uk_only
          - us_s3_only
      required:
      - .tag
    PolicyType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disposition
          - retention
      required:
      - .tag
    ResellerRole:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - not_reseller
          - reseller_admin
      required:
      - .tag
    ResellerSupportPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling if reseller can access the admin console as administrator
    RewindPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admins_only
          - everyone
      required:
      - .tag
      description: Policy for controlling whether team members can rewind
    SecondaryMailsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
    SendForSignaturePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling team access to send for signature feature
    SharedFolderMembersInheritancePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - dont_inherit_members
          - inherit_members
      required:
      - .tag
      description: Specifies if a shared folder inherits its members from the parent folder.
    SharedLinkAccessLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - none
          - reader
          - writer
      required:
      - .tag
      description: Shared link access level.
    SharedLinkVisibility:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - no_one
          - password
          - public
          - team_only
      required:
      - .tag
      description: Defines who has access to a shared link.
    SharingFolderJoinPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - from_anyone
          - from_team_only
      required:
      - .tag
      description: Policy for controlling if team members can join shared folders owned by non team members.
    SharingLinkPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default_no_one
          - default_private
          - default_public
          - only_private
      required:
      - .tag
      description: Policy for controlling if team members can share links externally
    SharingMemberPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - allow
          - forbid
          - forbid_with_exclusions
      required:
      - .tag
      description: External sharing policy
    SmartSyncOptOutPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - default
          - opted_out
      required:
      - .tag
    SpaceCapsType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - hard
          - off
          - soft
      required:
      - .tag
      description: Space limit alert policy
    SpaceLimitsStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - near_quota
          - over_quota
          - within_quota
      required:
      - .tag
    TeamBrandingPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling team access to setting up branding feature
    TeamExtensionsPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling whether App Integrations are enabled for the team.
    TeamMergeRequestAcceptedExtraDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - primary_team
          - secondary_team
      required:
      - .tag
      description: Team merge request acceptance details
      discriminator:
        propertyName: .tag
        mapping:
          primary_team: '#/components/schemas/PrimaryTeamRequestAcceptedDetails'
          secondary_team: '#/components/schemas/SecondaryTeamRequestAcceptedDetails'
    TeamMergeRequestCanceledExtraDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - primary_team
          - secondary_team
      required:
      - .tag
      description: Team merge request cancellation details
      discriminator:
        propertyName: .tag
        mapping:
          primary_team: '#/components/schemas/PrimaryTeamRequestCanceledDetails'
          secondary_team: '#/components/schemas/SecondaryTeamRequestCanceledDetails'
    TeamMergeRequestExpiredExtraDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - primary_team
          - secondary_team
      required:
      - .tag
      description: Team merge request expiration details
      discriminator:
        propertyName: .tag
        mapping:
          primary_team: '#/components/schemas/PrimaryTeamRequestExpiredDetails'
          secondary_team: '#/components/schemas/SecondaryTeamRequestExpiredDetails'
    TeamMergeRequestReminderExtraDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - primary_team
          - secondary_team
      required:
      - .tag
      description: Team merge request reminder details
      discriminator:
        propertyName: .tag
        mapping:
          primary_team: '#/components/schemas/PrimaryTeamRequestReminderDetails'
          secondary_team: '#/components/schemas/SecondaryTeamRequestReminderDetails'
    TeamSelectiveSyncPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling whether team selective sync is enabled for team.
    TfaConfiguration:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - authenticator
          - disabled
          - enabled
          - sms
      required:
      - .tag
      description: 'Two factor authentication configuration. Note: the enabled option is deprecated.'
    TimeUnit:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - days
          - hours
          - milliseconds
          - minutes
          - months
          - seconds
          - weeks
          - years
      required:
      - .tag
    TrustedNonTeamMemberType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - enterprise_admin
          - multi_instance_admin
      required:
      - .tag
    TrustedTeamsRequestAction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - accepted
          - declined
          - expired
          - invited
          - revoked
      required:
      - .tag
    TrustedTeamsRequestState:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invited
          - linked
          - unlinked
      required:
      - .tag
    TwoAccountPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for pairing personal account to work account
    WatermarkingPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - disabled
          - enabled
      required:
      - .tag
      description: Policy for controlling team access to watermarking feature
    WebSessionsFixedLengthPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - defined
          - undefined
      required:
      - .tag
      description: Web sessions fixed length policy.
      discriminator:
        propertyName: .tag
        mapping:
          defined: '#/components/schemas/DurationLogInfo'
    WebSessionsIdleLengthPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - defined
          - undefined
      required:
      - .tag
      description: Web sessions idle length policy.
      discriminator:
        propertyName: .tag
        mapping:
          defined: '#/components/schemas/DurationLogInfo'
    ActorLogInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admin
          - anonymous
          - app
          - dropbox
          - reseller
          - user
      required:
      - .tag
      description: The entity who performed the action.
      discriminator:
        propertyName: .tag
        mapping:
          admin: '#/components/schemas/UserLogInfo'
          app: '#/components/schemas/AppLogInfo'
          reseller: '#/components/schemas/ResellerLogInfo'
          user: '#/components/schemas/UserLogInfo'
    AssetLogInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - file
          - folder
          - paper_document
          - paper_folder
          - showcase_document
      required:
      - .tag
      description: Asset details.
      discriminator:
        propertyName: .tag
        mapping:
          file: '#/components/schemas/FileLogInfo'
          folder: '#/components/schemas/FolderLogInfo'
          paper_document: '#/components/schemas/PaperDocumentLogInfo'
          paper_folder: '#/components/schemas/PaperFolderLogInfo'
          showcase_document: '#/components/schemas/ShowcaseDocumentLogInfo'
    ContextLogInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - anonymous
          - non_team_member
          - organization_team
          - team
          - team_member
          - trusted_non_team_member
      required:
      - .tag
      description: The primary entity on which the action was done.
      discriminator:
        propertyName: .tag
        mapping:
          non_team_member: '#/components/schemas/NonTeamMemberLogInfo'
          organization_team: '#/components/schemas/TeamLogInfo'
          team_member: '#/components/schemas/TeamMemberLogInfo'
          trusted_non_team_member: '#/components/schemas/TrustedNonTeamMemberLogInfo'
    ParticipantLogInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - group
          - user
      required:
      - .tag
      description: A user or group
      discriminator:
        propertyName: .tag
        mapping:
          group: '#/components/schemas/GroupLogInfo'
          user: '#/components/schemas/UserLogInfo'
    EventCategory:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admin_alerting
          - apps
          - comments
          - data_governance
          - devices
          - domains
          - encryption
          - file_operations
          - file_requests
          - groups
          - logins
          - members
          - paper
          - passwords
          - reports
          - sharing
          - showcase
          - sso
          - team_folders
          - team_policies
          - team_profile
          - tfa
          - trusted_teams
      required:
      - .tag
      description: Category of events in event audit log.
    EventDetails:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admin_alerting_alert_state_changed_details
          - admin_alerting_changed_alert_config_details
          - admin_alerting_triggered_alert_details
          - ransomware_restore_process_completed_details
          - ransomware_restore_process_started_details
          - app_blocked_by_permissions_details
          - app_link_team_details
          - app_link_user_details
          - app_unlink_team_details
          - app_unlink_user_details
          - integration_connected_details
          - integration_disconnected_details
          - file_add_comment_details
          - file_change_comment_subscription_details
          - file_delete_comment_details
          - file_edit_comment_details
          - file_like_comment_details
          - file_resolve_comment_details
          - file_unlike_comment_details
          - file_unresolve_comment_details
          - governance_policy_add_folders_details
          - governance_policy_add_folder_failed_details
          - governance_policy_content_disposed_details
          - governance_policy_create_details
          - governance_policy_delete_details
          - governance_policy_edit_details_details
          - governance_policy_edit_duration_details
          - governance_policy_export_created_details
          - governance_policy_export_removed_details
          - governance_policy_remove_folders_details
          - governance_policy_report_created_details
          - governance_policy_zip_part_downloaded_details
          - legal_holds_activate_a_hold_details
          - legal_holds_add_members_details
          - legal_holds_change_hold_details_details
          - legal_holds_change_hold_name_details
          - legal_holds_export_a_hold_details
          - legal_holds_export_cancelled_details
          - legal_holds_export_downloaded_details
          - legal_holds_export_removed_details
          - legal_holds_release_a_hold_details
          - legal_holds_remove_members_details
          - legal_holds_report_a_hold_details
          - device_change_ip_desktop_details
          - device_change_ip_mobile_details
          - device_change_ip_web_details
          - device_delete_on_unlink_fail_details
          - device_delete_on_unlink_success_details
          - device_link_fail_details
          - device_link_success_details
          - device_management_disabled_details
          - device_management_enabled_details
          - device_sync_backup_status_changed_details
          - device_unlink_details
          - dropbox_passwords_exported_details
          - dropbox_passwords_new_device_enrolled_details
          - emm_refresh_auth_token_details
          - external_drive_backup_eligibility_status_checked_details
          - external_drive_backup_status_changed_details
          - account_capture_change_availability_details
          - account_capture_migrate_account_details
          - account_capture_notification_emails_sent_details
          - account_capture_relinquish_account_details
          - disabled_domain_invites_details
          - domain_invites_approve_request_to_join_team_details
          - domain_invites_decline_request_to_join_team_details
          - domain_invites_email_existing_users_details
          - domain_invites_request_to_join_team_details
          - domain_invites_set_invite_new_user_pref_to_no_details
          - domain_invites_set_invite_new_user_pref_to_yes_details
          - domain_verification_add_domain_fail_details
          - domain_verification_add_domain_success_details
          - domain_verification_remove_domain_details
          - enabled_domain_invites_details
          - team_encryption_key_cancel_key_deletion_details
          - team_encryption_key_create_key_details
          - team_encryption_key_delete_key_details
          - team_encryption_key_disable_key_details
          - team_encryption_key_enable_key_details
          - team_encryption_key_rotate_key_details
          - team_encryption_key_schedule_key_deletion_details
          - apply_naming_convention_details
          - create_folder_details
          - file_add_details
          - file_add_from_automation_details
          - file_copy_details
          - file_delete_details
          - file_download_details
          - file_edit_details
          - file_get_copy_reference_details
          - file_locking_lock_status_changed_details
          - file_move_details
          - file_permanently_delete_details
          - file_preview_details
          - file_rename_details
          - file_restore_details
          - file_revert_details
          - file_rollback_changes_details
          - file_save_copy_reference_details
          - folder_overview_description_changed_details
          - folder_overview_item_pinned_details
          - folder_overview_item_unpinned_details
          - object_label_added_details
          - object_label_removed_details
          - object_label_updated_value_details
          - organize_folder_with_tidy_details
          - replay_file_delete_details
          - rewind_folder_details
          - undo_naming_convention_details
          - undo_organize_folder_with_tidy_details
          - user_tags_added_details
          - user_tags_removed_details
          - email_ingest_receive_file_details
          - file_request_change_details
          - file_request_close_details
          - file_request_create_details
          - file_request_delete_details
          - file_request_receive_file_details
          - group_add_external_id_details
          - group_add_member_details
          - group_change_external_id_details
          - group_change_management_type_details
          - group_change_member_role_details
          - group_create_details
          - group_delete_details
          - group_description_updated_details
          - group_join_policy_updated_details
          - group_moved_details
          - group_remove_external_id_details
          - group_remove_member_details
          - group_rename_details
          - account_lock_or_unlocked_details
          - emm_error_details
          - guest_admin_signed_in_via_trusted_teams_details
          - guest_admin_signed_out_via_trusted_teams_details
          - login_fail_details
          - login_success_details
          - logout_details
          - reseller_support_session_end_details
          - reseller_support_session_start_details
          - sign_in_as_session_end_details
          - sign_in_as_session_start_details
          - sso_error_details
          - backup_admin_invitation_sent_details
          - backup_invitation_opened_details
          - create_team_invite_link_details
          - delete_team_invite_link_details
          - member_add_external_id_details
          - member_add_name_details
          - member_change_admin_role_details
          - member_change_email_details
          - member_change_external_id_details
          - member_change_membership_type_details
          - member_change_name_details
          - member_change_reseller_role_details
          - member_change_status_details
          - member_delete_manual_contacts_details
          - member_delete_profile_photo_details
          - member_permanently_delete_account_contents_details
          - member_remove_external_id_details
          - member_set_profile_photo_details
          - member_space_limits_add_custom_quota_details
          - member_space_limits_change_custom_quota_details
          - member_space_limits_change_status_details
          - member_space_limits_remove_custom_quota_details
          - member_suggest_details
          - member_transfer_account_contents_details
          - pending_secondary_email_added_details
          - secondary_email_deleted_details
          - secondary_email_verified_details
          - secondary_mails_policy_changed_details
          - binder_add_page_details
          - binder_add_section_details
          - binder_remove_page_details
          - binder_remove_section_details
          - binder_rename_page_details
          - binder_rename_section_details
          - binder_reorder_page_details
          - binder_reorder_section_details
          - paper_content_add_member_details
          - paper_content_add_to_folder_details
          - paper_content_archive_details
          - paper_content_create_details
          - paper_content_permanently_delete_details
          - paper_content_remove_from_folder_details
          - paper_content_remove_member_details
          - paper_content_rename_details
          - paper_content_restore_details
          - paper_doc_add_comment_details
          - paper_doc_change_member_role_details
          - paper_doc_change_sharing_policy_details
          - paper_doc_change_subscription_details
          - paper_doc_deleted_details
          - paper_doc_delete_comment_details
          - paper_doc_download_details
          - paper_doc_edit_details
          - paper_doc_edit_comment_details
          - paper_doc_followed_details
          - paper_doc_mention_details
          - paper_doc_ownership_changed_details
          - paper_doc_request_access_details
          - paper_doc_resolve_comment_details
          - paper_doc_revert_details
          - paper_doc_slack_share_details
          - paper_doc_team_invite_details
          - paper_doc_trashed_details
          - paper_doc_unresolve_comment_details
          - paper_doc_untrashed_details
          - paper_doc_view_details
          - paper_external_view_allow_details
          - paper_external_view_default_team_details
          - paper_external_view_forbid_details
          - paper_folder_change_subscription_details
          - paper_folder_deleted_details
          - paper_folder_followed_details
          - paper_folder_team_invite_details
          - paper_published_link_change_permission_details
          - paper_published_link_create_details
          - paper_published_link_disabled_details
          - paper_published_link_view_details
          - password_change_details
          - password_reset_details
          - password_reset_all_details
          - classification_create_report_details
          - classification_create_report_fail_details
          - emm_create_exceptions_report_details
          - emm_create_usage_report_details
          - export_members_report_details
          - export_members_report_fail_details
          - external_sharing_create_report_details
          - external_sharing_report_failed_details
          - no_expiration_link_gen_create_report_details
          - no_expiration_link_gen_report_failed_details
          - no_password_link_gen_create_report_details
          - no_password_link_gen_report_failed_details
          - no_password_link_view_create_report_details
          - no_password_link_view_report_failed_details
          - outdated_link_view_create_report_details
          - outdated_link_view_report_failed_details
          - paper_admin_export_start_details
          - ransomware_alert_create_report_details
          - ransomware_alert_create_report_failed_details
          - smart_sync_create_admin_privilege_report_details
          - team_activity_create_report_details
          - team_activity_create_report_fail_details
          - collection_share_details
          - file_transfers_file_add_details
          - file_transfers_transfer_delete_details
          - file_transfers_transfer_download_details
          - file_transfers_transfer_send_details
          - file_transfers_transfer_view_details
          - note_acl_invite_only_details
          - note_acl_link_details
          - note_acl_team_link_details
          - note_shared_details
          - note_share_receive_details
          - open_note_shared_details
          - replay_file_shared_link_created_details
          - replay_file_shared_link_modified_details
          - replay_project_team_add_details
          - replay_project_team_delete_details
          - sf_add_group_details
          - sf_allow_non_members_to_view_shared_links_details
          - sf_external_invite_warn_details
          - sf_fb_invite_details
          - sf_fb_invite_change_role_details
          - sf_fb_uninvite_details
          - sf_invite_group_details
          - sf_team_grant_access_details
          - sf_team_invite_details
          - sf_team_invite_change_role_details
          - sf_team_join_details
          - sf_team_join_from_oob_link_details
          - sf_team_uninvite_details
          - shared_content_add_invitees_details
          - shared_content_add_link_expiry_details
          - shared_content_add_link_password_details
          - shared_content_add_member_details
          - shared_content_change_downloads_policy_details
          - shared_content_change_invitee_role_details
          - shared_content_change_link_audience_details
          - shared_content_change_link_expiry_details
          - shared_content_change_link_password_details
          - shared_content_change_member_role_details
          - shared_content_change_viewer_info_policy_details
          - shared_content_claim_invitation_details
          - shared_content_copy_details
          - shared_content_download_details
          - shared_content_relinquish_membership_details
          - shared_content_remove_invitees_details
          - shared_content_remove_link_expiry_details
          - shared_content_remove_link_password_details
          - shared_content_remove_member_details
          - shared_content_request_access_details
          - shared_content_restore_invitees_details
          - shared_content_restore_member_details
          - shared_content_unshare_details
          - shared_content_view_details
          - shared_folder_change_link_policy_details
          - shared_folder_change_members_inheritance_policy_details
          - shared_folder_change_members_management_policy_details
          - shared_folder_change_members_policy_details
          - shared_folder_create_details
          - shared_folder_decline_invitation_details
          - shared_folder_mount_details
          - shared_folder_nest_details
          - shared_folder_transfer_ownership_details
          - shared_folder_unmount_details
          - shared_link_add_expiry_details
          - shared_link_change_expiry_details
          - shared_link_change_visibility_details
          - shared_link_copy_details
          - shared_link_create_details
          - shared_link_disable_details
          - shared_link_download_details
          - shared_link_remove_expiry_details
          - shared_link_settings_add_expiration_details
          - shared_link_settings_add_password_details
          - shared_link_settings_allow_download_disabled_details
          - shared_link_settings_allow_download_enabled_details
          - shared_link_settings_change_audience_details
          - shared_link_settings_change_expiration_details
          - shared_link_settings_change_password_details
          - shared_link_settings_remove_expiration_details
          - shared_link_settings_remove_password_details
          - shared_link_share_details
          - shared_link_view_details
          - shared_note_opened_details
          - shmodel_disable_downloads_details
          - shmodel_enable_downloads_details
          - shmodel_group_share_details
          - showcase_access_granted_details
          - showcase_add_member_details
          - showcase_archived_details
          - showcase_created_details
          - showcase_delete_comment_details
          - showcase_edited_details
          - showcase_edit_comment_details
          - showcase_file_added_details
          - showcase_file_download_details
          - showcase_file_removed_details
          - showcase_file_view_details
          - showcase_permanently_deleted_details
          - showcase_post_comment_details
          - showcase_remove_member_details
          - showcase_renamed_details
          - showcase_request_access_details
          - showcase_resolve_comment_details
          - showcase_restored_details
          - showcase_trashed_details
          - showcase_trashed_deprecated_details
          - showcase_unresolve_comment_details
          - showcase_untrashed_details
          - showcase_untrashed_deprecated_details
          - showcase_view_details
          - sso_add_cert_details
          - sso_add_login_url_details
          - sso_add_logout_url_details
          - sso_change_cert_details
          - sso_change_login_url_details
          - sso_change_logout_url_details
          - sso_change_saml_identity_mode_details
          - sso_remove_cert_details
          - sso_remove_login_url_details
          - sso_remove_logout_url_details
          - team_folder_change_status_details
          - team_folder_create_details
          - team_folder_downgrade_details
          - team_folder_permanently_delete_details
          - team_folder_rename_details
          - team_selective_sync_settings_changed_details
          - account_capture_change_policy_details
          - admin_email_reminders_changed_details
          - allow_download_disabled_details
          - allow_download_enabled_details
          - app_permissions_changed_details
          - camera_uploads_policy_changed_details
          - capture_transcript_policy_changed_details
          - classification_change_policy_details
          - computer_backup_policy_changed_details
          - content_administration_policy_changed_details
          - data_placement_restriction_change_policy_details
          - data_placement_restriction_satisfy_policy_details
          - device_approvals_add_exception_details
          - device_approvals_change_desktop_policy_details
          - device_approvals_change_mobile_policy_details
          - device_approvals_change_overage_action_details
          - device_approvals_change_unlink_action_details
          - device_approvals_remove_exception_details
          - directory_restrictions_add_members_details
          - directory_restrictions_remove_members_details
          - dropbox_passwords_policy_changed_details
          - email_ingest_policy_changed_details
          - emm_add_exception_details
          - emm_change_policy_details
          - emm_remove_exception_details
          - extended_version_history_change_policy_details
          - external_drive_backup_policy_changed_details
          - file_comments_change_policy_details
          - file_locking_policy_changed_details
          - file_provider_migration_policy_changed_details
          - file_requests_change_policy_details
          - file_requests_emails_enabled_details
          - file_requests_emails_restricted_to_team_only_details
          - file_transfers_policy_changed_details
          - folder_link_restriction_policy_changed_details
          - google_sso_change_policy_details
          - group_user_management_change_policy_details
          - integration_policy_changed_details
          - invite_acceptance_email_policy_changed_details
          - member_requests_change_policy_details
          - member_send_invite_policy_changed_details
          - member_space_limits_add_exception_details
          - member_space_limits_change_caps_type_policy_details
          - member_space_limits_change_policy_details
          - member_space_limits_remove_exception_details
          - member_suggestions_change_policy_details
          - microsoft_office_addin_change_policy_details
          - network_control_change_policy_details
          - paper_change_deployment_policy_details
          - paper_change_member_link_policy_details
          - paper_change_member_policy_details
          - paper_change_policy_details
          - paper_default_folder_policy_changed_details
          - paper_desktop_policy_changed_details
          - paper_enabled_users_group_addition_details
          - paper_enabled_users_group_removal_details
          - password_strength_requirements_change_policy_details
          - permanent_delete_change_policy_details
          - reseller_support_change_policy_details
          - rewind_policy_changed_details
          - send_for_signature_policy_changed_details
          - sharing_change_folder_join_policy_details
          - sharing_change_link_allow_change_expiration_policy_details
          - sharing_change_link_default_expiration_policy_details
          - sharing_change_link_enforce_password_policy_details
          - sharing_change_link_policy_details
          - sharing_change_member_policy_details
          - showcase_change_download_policy_details
          - showcase_change_enabled_policy_details
          - showcase_change_external_sharing_policy_details
          - smarter_smart_sync_policy_changed_details
          - smart_sync_change_policy_details
          - smart_sync_not_opt_out_details
          - smart_sync_opt_out_details
          - sso_change_policy_details
          - team_branding_policy_changed_details
          - team_extensions_policy_changed_details
          - team_selective_sync_policy_changed_details
          - team_sharing_whitelist_subjects_changed_details
          - tfa_add_exception_details
          - tfa_change_policy_details
          - tfa_remove_exception_details
          - two_account_change_policy_details
          - viewer_info_policy_changed_details
          - watermarking_policy_changed_details
          - web_sessions_change_active_session_limit_details
          - web_sessions_change_fixed_length_policy_details
          - web_sessions_change_idle_length_policy_details
          - data_residency_migration_request_successful_details
          - data_residency_migration_request_unsuccessful_details
          - team_merge_from_details
          - team_merge_to_details
          - team_profile_add_background_details
          - team_profile_add_logo_details
          - team_profile_change_background_details
          - team_profile_change_default_language_details
          - team_profile_change_logo_details
          - team_profile_change_name_details
          - team_profile_remove_background_details
          - team_profile_remove_logo_details
          - tfa_add_backup_phone_details
          - tfa_add_security_key_details
          - tfa_change_backup_phone_details
          - tfa_change_status_details
          - tfa_remove_backup_phone_details
          - tfa_remove_security_key_details
          - tfa_reset_details
          - changed_enterprise_admin_role_details
          - changed_enterprise_connected_team_status_details
          - ended_enterprise_admin_session_details
          - ended_enterprise_admin_session_deprecated_details
          - enterprise_settings_locking_details
          - guest_admin_change_status_details
          - started_enterprise_admin_session_details
          - team_merge_request_accepted_details
          - team_merge_request_accepted_shown_to_primary_team_details
          - team_merge_request_accepted_shown_to_secondary_team_details
          - team_merge_request_auto_canceled_details
          - team_merge_request_canceled_details
          - team_merge_request_canceled_shown_to_primary_team_details
          - team_merge_request_canceled_shown_to_secondary_team_details
          - team_merge_request_expired_details
          - team_merge_request_expired_shown_to_primary_team_details
          - team_merge_request_expired_shown_to_secondary_team_details
          - team_merge_request_rejected_shown_to_primary_team_details
          - team_merge_request_rejected_shown_to_secondary_team_details
          - team_merge_request_reminder_details
          - team_merge_request_reminder_shown_to_primary_team_details
          - team_merge_request_reminder_shown_to_secondary_team_details
          - team_merge_request_revoked_details
          - team_merge_request_sent_shown_to_primary_team_details
          - team_merge_request_sent_shown_to_secondary_team_details
          - missing_details
      required:
      - .tag
      description: Additional fields depending on the event type.
      discriminator:
        propertyName: .tag
        mapping:
          admin_alerting_alert_state_changed_details: '#/components/schemas/AdminAlertingAlertStateChangedDetails'
          admin_alerting_changed_alert_config_details: '#/components/schemas/AdminAlertingChangedAlertConfigDetails'
          admin_alerting_triggered_alert_details: '#/components/schemas/AdminAlertingTriggeredAlertDetails'
          ransomware_restore_process_completed_details: '#/components/schemas/RansomwareRestoreProcessCompletedDetails'
          ransomware_restore_process_started_details: '#/components/schemas/RansomwareRestoreProcessStartedDetails'
          app_blocked_by_permissions_details: '#/components/schemas/AppBlockedByPermissionsDetails'
          app_link_team_details: '#/components/schemas/AppLinkTeamDetails'
          app_link_user_details: '#/components/schemas/AppLinkUserDetails'
          app_unlink_team_details: '#/components/schemas/AppUnlinkTeamDetails'
          app_unlink_user_details: '#/components/schemas/AppUnlinkUserDetails'
          integration_connected_details: '#/components/schemas/IntegrationConnectedDetails'
          integration_disconnected_details: '#/components/schemas/IntegrationDisconnectedDetails'
          file_add_comment_details: '#/components/schemas/FileAddCommentDetails'
          file_change_comment_subscription_details: '#/components/schemas/FileChangeCommentSubscriptionDetails'
          file_delete_comment_details: '#/components/schemas/FileDeleteCommentDetails'
          file_edit_comment_details: '#/components/schemas/FileEditCommentDetails'
          file_like_comment_details: '#/components/schemas/FileLikeCommentDetails'
          file_resolve_comment_details: '#/components/schemas/FileResolveCommentDetails'
          file_unlike_comment_details: '#/components/schemas/FileUnlikeCommentDetails'
          file_unresolve_comment_details: '#/components/schemas/FileUnresolveCommentDetails'
          governance_policy_add_folders_details: '#/components/schemas/GovernancePolicyAddFoldersDetails'
          governance_policy_add_folder_failed_details: '#/components/schemas/GovernancePolicyAddFolderFailedDetails'
          governance_policy_content_disposed_details: '#/components/schemas/GovernancePolicyContentDisposedDetails'
          governance_policy_create_details: '#/components/schemas/GovernancePolicyCreateDetails'
          governance_policy_delete_details: '#/components/schemas/GovernancePolicyDeleteDetails'
          governance_policy_edit_details_details: '#/components/schemas/GovernancePolicyEditDetailsDetails'
          governance_policy_edit_duration_details: '#/components/schemas/GovernancePolicyEditDurationDetails'
          governance_policy_export_created_details: '#/components/schemas/GovernancePolicyExportCreatedDetails'
          governance_policy_export_removed_details: '#/components/schemas/GovernancePolicyExportRemovedDetails'
          governance_policy_remove_folders_details: '#/components/schemas/GovernancePolicyRemoveFoldersDetails'
          governance_policy_report_created_details: '#/components/schemas/GovernancePolicyReportCreatedDetails'
          governance_policy_zip_part_downloaded_details: '#/components/schemas/GovernancePolicyZipPartDownloadedDetails'
          legal_holds_activate_a_hold_details: '#/components/schemas/LegalHoldsActivateAHoldDetails'
          legal_holds_add_members_details: '#/components/schemas/LegalHoldsAddMembersDetails'
          legal_holds_change_hold_details_details: '#/components/schemas/LegalHoldsChangeHoldDetailsDetails'
          legal_holds_change_hold_name_details: '#/components/schemas/LegalHoldsChangeHoldNameDetails'
          legal_holds_export_a_hold_details: '#/components/schemas/LegalHoldsExportAHoldDetails'
          legal_holds_export_cancelled_details: '#/components/schemas/LegalHoldsExportCancelledDetails'
          legal_holds_export_downloaded_details: '#/components/schemas/LegalHoldsExportDownloadedDetails'
          legal_holds_export_removed_details: '#/components/schemas/LegalHoldsExportRemovedDetails'
          legal_holds_release_a_hold_details: '#/components/schemas/LegalHoldsReleaseAHoldDetails'
          legal_holds_remove_members_details: '#/components/schemas/LegalHoldsRemoveMembersDetails'
          legal_holds_report_a_hold_details: '#/components/schemas/LegalHoldsReportAHoldDetails'
          device_change_ip_desktop_details: '#/components/schemas/DeviceChangeIpDesktopDetails'
          device_change_ip_mobile_details: '#/components/schemas/DeviceChangeIpMobileDetails'
          device_change_ip_web_details: '#/components/schemas/DeviceChangeIpWebDetails'
          device_delete_on_unlink_fail_details: '#/components/schemas/DeviceDeleteOnUnlinkFailDetails'
          device_delete_on_unlink_success_details: '#/components/schemas/DeviceDeleteOnUnlinkSuccessDetails'
          device_link_fail_details: '#/components/schemas/DeviceLinkFailDetails'
          device_link_success_details: '#/components/schemas/DeviceLinkSuccessDetails'
          device_management_disabled_details: '#/components/schemas/DeviceManagementDisabledDetails'
          device_management_enabled_details: '#/components/schemas/DeviceManagementEnabledDetails'
          device_sync_backup_status_changed_details: '#/components/schemas/DeviceSyncBackupStatusChangedDetails'
          device_unlink_details: '#/components/schemas/DeviceUnlinkDetails'
          dropbox_passwords_exported_details: '#/components/schemas/DropboxPasswordsExportedDetails'
          dropbox_passwords_new_device_enrolled_details: '#/components/schemas/DropboxPasswordsNewDeviceEnrolledDetails'
          emm_refresh_auth_token_details: '#/components/schemas/EmmRefreshAuthTokenDetails'
          external_drive_backup_eligibility_status_checked_details: '#/components/schemas/ExternalDriveBackupEligibilityStatusCheckedDetails'
          external_drive_backup_status_changed_details: '#/components/schemas/ExternalDriveBackupStatusChangedDetails'
          account_capture_change_availability_details: '#/components/schemas/AccountCaptureChangeAvailabilityDetails'
          account_capture_migrate_account_details: '#/components/schemas/AccountCaptureMigrateAccountDetails'
          account_capture_notification_emails_sent_details: '#/components/schemas/AccountCaptureNotificationEmailsSentDetails'
          account_capture_relinquish_account_details: '#/components/schemas/AccountCaptureRelinquishAccountDetails'
          disabled_domain_invites_details: '#/components/schemas/DisabledDomainInvitesDetails'
          domain_invites_approve_request_to_join_team_details: '#/components/schemas/DomainInvitesApproveRequestToJoinTeamDetails'
          domain_invites_decline_request_to_join_team_details: '#/components/schemas/DomainInvitesDeclineRequestToJoinTeamDetails'
          domain_invites_email_existing_users_details: '#/components/schemas/DomainInvitesEmailExistingUsersDetails'
          domain_invites_request_to_join_team_details: '#/components/schemas/DomainInvitesRequestToJoinTeamDetails'
          domain_invites_set_invite_new_user_pref_to_no_details: '#/components/schemas/DomainInvitesSetInviteNewUserPrefToNoDetails'
          domain_invites_set_invite_new_user_pref_to_yes_details: '#/components/schemas/DomainInvitesSetInviteNewUserPrefToYesDetails'
          domain_verification_add_domain_fail_details: '#/components/schemas/DomainVerificationAddDomainFailDetails'
          domain_verification_add_domain_success_details: '#/components/schemas/DomainVerificationAddDomainSuccessDetails'
          domain_verification_remove_domain_details: '#/components/schemas/DomainVerificationRemoveDomainDetails'
          enabled_domain_invites_details: '#/components/schemas/EnabledDomainInvitesDetails'
          team_encryption_key_cancel_key_deletion_details: '#/components/schemas/TeamEncryptionKeyCancelKeyDeletionDetails'
          team_encryption_key_create_key_details: '#/components/schemas/TeamEncryptionKeyCreateKeyDetails'
          team_encryption_key_delete_key_details: '#/components/schemas/TeamEncryptionKeyDeleteKeyDetails'
          team_encryption_key_disable_key_details: '#/components/schemas/TeamEncryptionKeyDisableKeyDetails'
          team_encryption_key_enable_key_details: '#/components/schemas/TeamEncryptionKeyEnableKeyDetails'
          team_encryption_key_rotate_key_details: '#/components/schemas/TeamEncryptionKeyRotateKeyDetails'
          team_encryption_key_schedule_key_deletion_details: '#/components/schemas/TeamEncryptionKeyScheduleKeyDeletionDetails'
          apply_naming_convention_details: '#/components/schemas/ApplyNamingConventionDetails'
          create_folder_details: '#/components/schemas/CreateFolderDetails'
          file_add_details: '#/components/schemas/FileAddDetails'
          file_add_from_automation_details: '#/components/schemas/FileAddFromAutomationDetails'
          file_copy_details: '#/components/schemas/FileCopyDetails'
          file_delete_details: '#/components/schemas/FileDeleteDetails'
          file_download_details: '#/components/schemas/FileDownloadDetails'
          file_edit_details: '#/components/schemas/FileEditDetails'
          file_get_copy_reference_details: '#/components/schemas/FileGetCopyReferenceDetails'
          file_locking_lock_status_changed_details: '#/components/schemas/FileLockingLockStatusChangedDetails'
          file_move_details: '#/components/schemas/FileMoveDetails'
          file_permanently_delete_details: '#/components/schemas/FilePermanentlyDeleteDetails'
          file_preview_details: '#/components/schemas/FilePreviewDetails'
          file_rename_details: '#/components/schemas/FileRenameDetails'
          file_restore_details: '#/components/schemas/FileRestoreDetails'
          file_revert_details: '#/components/schemas/FileRevertDetails'
          file_rollback_changes_details: '#/components/schemas/FileRollbackChangesDetails'
          file_save_copy_reference_details: '#/components/schemas/FileSaveCopyReferenceDetails'
          folder_overview_description_changed_details: '#/components/schemas/FolderOverviewDescriptionChangedDetails'
          folder_overview_item_pinned_details: '#/components/schemas/FolderOverviewItemPinnedDetails'
          folder_overview_item_unpinned_details: '#/components/schemas/FolderOverviewItemUnpinnedDetails'
          object_label_added_details: '#/components/schemas/ObjectLabelAddedDetails'
          object_label_removed_details: '#/components/schemas/ObjectLabelRemovedDetails'
          object_label_updated_value_details: '#/components/schemas/ObjectLabelUpdatedValueDetails'
          organize_folder_with_tidy_details: '#/components/schemas/OrganizeFolderWithTidyDetails'
          replay_file_delete_details: '#/components/schemas/ReplayFileDeleteDetails'
          rewind_folder_details: '#/components/schemas/RewindFolderDetails'
          undo_naming_convention_details: '#/components/schemas/UndoNamingConventionDetails'
          undo_organize_folder_with_tidy_details: '#/components/schemas/UndoOrganizeFolderWithTidyDetails'
          user_tags_added_details: '#/components/schemas/UserTagsAddedDetails'
          user_tags_removed_details: '#/components/schemas/UserTagsRemovedDetails'
          email_ingest_receive_file_details: '#/components/schemas/EmailIngestReceiveFileDetails'
          file_request_change_details: '#/components/schemas/FileRequestChangeDetails'
          file_request_close_details: '#/components/schemas/FileRequestCloseDetails'
          file_request_create_details: '#/components/schemas/FileRequestCreateDetails'
          file_request_delete_details: '#/components/schemas/FileRequestDeleteDetails'
          file_request_receive_file_details: '#/components/schemas/FileRequestReceiveFileDetails'
          group_add_external_id_details: '#/components/schemas/GroupAddExternalIdDetails'
          group_add_member_details: '#/components/schemas/GroupAddMemberDetails'
          group_change_external_id_details: '#/components/schemas/GroupChangeExternalIdDetails'
          group_change_management_type_details: '#/components/schemas/GroupChangeManagementTypeDetails'
          group_change_member_role_details: '#/components/schemas/GroupChangeMemberRoleDetails'
          group_create_details: '#/components/schemas/GroupCreateDetails'
          group_delete_details: '#/components/schemas/GroupDeleteDetails'
          group_description_updated_details: '#/components/schemas/GroupDescriptionUpdatedDetails'
          group_join_policy_updated_details: '#/components/schemas/GroupJoinPolicyUpdatedDetails'
          group_moved_details: '#/components/schemas/GroupMovedDetails'
          group_remove_external_id_details: '#/components/schemas/GroupRemoveExternalIdDetails'
          group_remove_member_details: '#/components/schemas/GroupRemoveMemberDetails'
          group_rename_details: '#/components/schemas/GroupRenameDetails'
          account_lock_or_unlocked_details: '#/components/schemas/AccountLockOrUnlockedDetails'
          emm_error_details: '#/components/schemas/EmmErrorDetails'
          guest_admin_signed_in_via_trusted_teams_details: '#/components/schemas/GuestAdminSignedInViaTrustedTeamsDetails'
          guest_admin_signed_out_via_trusted_teams_details: '#/components/schemas/GuestAdminSignedOutViaTrustedTeamsDetails'
          login_fail_details: '#/components/schemas/LoginFailDetails'
          login_success_details: '#/components/schemas/LoginSuccessDetails'
          logout_details: '#/components/schemas/LogoutDetails'
          reseller_support_session_end_details: '#/components/schemas/ResellerSupportSessionEndDetails'
          reseller_support_session_start_details: '#/components/schemas/ResellerSupportSessionStartDetails'
          sign_in_as_session_end_details: '#/components/schemas/SignInAsSessionEndDetails'
          sign_in_as_session_start_details: '#/components/schemas/SignInAsSessionStartDetails'
          sso_error_details: '#/components/schemas/SsoErrorDetails'
          backup_admin_invitation_sent_details: '#/components/schemas/BackupAdminInvitationSentDetails'
          backup_invitation_opened_details: '#/components/schemas/BackupInvitationOpenedDetails'
          create_team_invite_link_details: '#/components/schemas/CreateTeamInviteLinkDetails'
          delete_team_invite_link_details: '#/components/schemas/DeleteTeamInviteLinkDetails'
          member_add_external_id_details: '#/components/schemas/MemberAddExternalIdDetails'
          member_add_name_details: '#/components/schemas/MemberAddNameDetails'
          member_change_admin_role_details: '#/components/schemas/MemberChangeAdminRoleDetails'
          member_change_email_details: '#/components/schemas/MemberChangeEmailDetails'
          member_change_external_id_details: '#/components/schemas/MemberChangeExternalIdDetails'
          member_change_membership_type_details: '#/components/schemas/MemberChangeMembershipTypeDetails'
          member_change_name_details: '#/components/schemas/MemberChangeNameDetails'
          member_change_reseller_role_details: '#/components/schemas/MemberChangeResellerRoleDetails'
          member_change_status_details: '#/components/schemas/MemberChangeStatusDetails'
          member_delete_manual_contacts_details: '#/components/schemas/MemberDeleteManualContactsDetails'
          member_delete_profile_photo_details: '#/components/schemas/MemberDeleteProfilePhotoDetails'
          member_permanently_delete_account_contents_details: '#/components/schemas/MemberPermanentlyDeleteAccountContentsDetails'
          member_remove_external_id_details: '#/components/schemas/MemberRemoveExternalIdDetails'
          member_set_profile_photo_details: '#/components/schemas/MemberSetProfilePhotoDetails'
          member_space_limits_add_custom_quota_details: '#/components/schemas/MemberSpaceLimitsAddCustomQuotaDetails'
          member_space_limits_change_custom_quota_details: '#/components/schemas/MemberSpaceLimitsChangeCustomQuotaDetails'
          member_space_limits_change_status_details: '#/components/schemas/MemberSpaceLimitsChangeStatusDetails'
          member_space_limits_remove_custom_quota_details: '#/components/schemas/MemberSpaceLimitsRemoveCustomQuotaDetails'
          member_suggest_details: '#/components/schemas/MemberSuggestDetails'
          member_transfer_account_contents_details: '#/components/schemas/MemberTransferAccountContentsDetails'
          pending_secondary_email_added_details: '#/components/schemas/PendingSecondaryEmailAddedDetails'
          secondary_email_deleted_details: '#/components/schemas/SecondaryEmailDeletedDetails'
          secondary_email_verified_details: '#/components/schemas/SecondaryEmailVerifiedDetails'
          secondary_mails_policy_changed_details: '#/components/schemas/SecondaryMailsPolicyChangedDetails'
          binder_add_page_details: '#/components/schemas/BinderAddPageDetails'
          binder_add_section_details: '#/components/schemas/BinderAddSectionDetails'
          binder_remove_page_details: '#/components/schemas/BinderRemovePageDetails'
          binder_remove_section_details: '#/components/schemas/BinderRemoveSectionDetails'
          binder_rename_page_details: '#/components/schemas/BinderRenamePageDetails'
          binder_rename_section_details: '#/components/schemas/BinderRenameSectionDetails'
          binder_reorder_page_details: '#/components/schemas/BinderReorderPageDetails'
          binder_reorder_section_details: '#/components/schemas/BinderReorderSectionDetails'
          paper_content_add_member_details: '#/components/schemas/PaperContentAddMemberDetails'
          paper_content_add_to_folder_details: '#/components/schemas/PaperContentAddToFolderDetails'
          paper_content_archive_details: '#/components/schemas/PaperContentArchiveDetails'
          paper_content_create_details: '#/components/schemas/PaperContentCreateDetails'
          paper_content_permanently_delete_details: '#/components/schemas/PaperContentPermanentlyDeleteDetails'
          paper_content_remove_from_folder_details: '#/components/schemas/PaperContentRemoveFromFolderDetails'
          paper_content_remove_member_details: '#/components/schemas/PaperContentRemoveMemberDetails'
          paper_content_rename_details: '#/components/schemas/PaperContentRenameDetails'
          paper_content_restore_details: '#/components/schemas/PaperContentRestoreDetails'
          paper_doc_add_comment_details: '#/components/schemas/PaperDocAddCommentDetails'
          paper_doc_change_member_role_details: '#/components/schemas/PaperDocChangeMemberRoleDetails'
          paper_doc_change_sharing_policy_details: '#/components/schemas/PaperDocChangeSharingPolicyDetails'
          paper_doc_change_subscription_details: '#/components/schemas/PaperDocChangeSubscriptionDetails'
          paper_doc_deleted_details: '#/components/schemas/PaperDocDeletedDetails'
          paper_doc_delete_comment_details: '#/components/schemas/PaperDocDeleteCommentDetails'
          paper_doc_download_details: '#/components/schemas/PaperDocDownloadDetails'
          paper_doc_edit_details: '#/components/schemas/PaperDocEditDetails'
          paper_doc_edit_comment_details: '#/components/schemas/PaperDocEditCommentDetails'
          paper_doc_followed_details: '#/components/schemas/PaperDocFollowedDetails'
          paper_doc_mention_details: '#/components/schemas/PaperDocMentionDetails'
          paper_doc_ownership_changed_details: '#/components/schemas/PaperDocOwnershipChangedDetails'
          paper_doc_request_access_details: '#/components/schemas/PaperDocRequestAccessDetails'
          paper_doc_resolve_comment_details: '#/components/schemas/PaperDocResolveCommentDetails'
          paper_doc_revert_details: '#/components/schemas/PaperDocRevertDetails'
          paper_doc_slack_share_details: '#/components/schemas/PaperDocSlackShareDetails'
          paper_doc_team_invite_details: '#/components/schemas/PaperDocTeamInviteDetails'
          paper_doc_trashed_details: '#/components/schemas/PaperDocTrashedDetails'
          paper_doc_unresolve_comment_details: '#/components/schemas/PaperDocUnresolveCommentDetails'
          paper_doc_untrashed_details: '#/components/schemas/PaperDocUntrashedDetails'
          paper_doc_view_details: '#/components/schemas/PaperDocViewDetails'
          paper_external_view_allow_details: '#/components/schemas/PaperExternalViewAllowDetails'
          paper_external_view_default_team_details: '#/components/schemas/PaperExternalViewDefaultTeamDetails'
          paper_external_view_forbid_details: '#/components/schemas/PaperExternalViewForbidDetails'
          paper_folder_change_subscription_details: '#/components/schemas/PaperFolderChangeSubscriptionDetails'
          paper_folder_deleted_details: '#/components/schemas/PaperFolderDeletedDetails'
          paper_folder_followed_details: '#/components/schemas/PaperFolderFollowedDetails'
          paper_folder_team_invite_details: '#/components/schemas/PaperFolderTeamInviteDetails'
          paper_published_link_change_permission_details: '#/components/schemas/PaperPublishedLinkChangePermissionDetails'
          paper_published_link_create_details: '#/components/schemas/PaperPublishedLinkCreateDetails'
          paper_published_link_disabled_details: '#/components/schemas/PaperPublishedLinkDisabledDetails'
          paper_published_link_view_details: '#/components/schemas/PaperPublishedLinkViewDetails'
          password_change_details: '#/components/schemas/PasswordChangeDetails'
          password_reset_details: '#/components/schemas/PasswordResetDetails'
          password_reset_all_details: '#/components/schemas/PasswordResetAllDetails'
          classification_create_report_details: '#/components/schemas/ClassificationCreateReportDetails'
          classification_create_report_fail_details: '#/components/schemas/ClassificationCreateReportFailDetails'
          emm_create_exceptions_report_details: '#/components/schemas/EmmCreateExceptionsReportDetails'
          emm_create_usage_report_details: '#/components/schemas/EmmCreateUsageReportDetails'
          export_members_report_details: '#/components/schemas/ExportMembersReportDetails'
          export_members_report_fail_details: '#/components/schemas/ExportMembersReportFailDetails'
          external_sharing_create_report_details: '#/components/schemas/ExternalSharingCreateReportDetails'
          external_sharing_report_failed_details: '#/components/schemas/ExternalSharingReportFailedDetails'
          no_expiration_link_gen_create_report_details: '#/components/schemas/NoExpirationLinkGenCreateReportDetails'
          no_expiration_link_gen_report_failed_details: '#/components/schemas/NoExpirationLinkGenReportFailedDetails'
          no_password_link_gen_create_report_details: '#/components/schemas/NoPasswordLinkGenCreateReportDetails'
          no_password_link_gen_report_failed_details: '#/components/schemas/NoPasswordLinkGenReportFailedDetails'
          no_password_link_view_create_report_details: '#/components/schemas/NoPasswordLinkViewCreateReportDetails'
          no_password_link_view_report_failed_details: '#/components/schemas/NoPasswordLinkViewReportFailedDetails'
          outdated_link_view_create_report_details: '#/components/schemas/OutdatedLinkViewCreateReportDetails'
          outdated_link_view_report_failed_details: '#/components/schemas/OutdatedLinkViewReportFailedDetails'
          paper_admin_export_start_details: '#/components/schemas/PaperAdminExportStartDetails'
          ransomware_alert_create_report_details: '#/components/schemas/RansomwareAlertCreateReportDetails'
          ransomware_alert_create_report_failed_details: '#/components/schemas/RansomwareAlertCreateReportFailedDetails'
          smart_sync_create_admin_privilege_report_details: '#/components/schemas/SmartSyncCreateAdminPrivilegeReportDetails'
          team_activity_create_report_details: '#/components/schemas/TeamActivityCreateReportDetails'
          team_activity_create_report_fail_details: '#/components/schemas/TeamActivityCreateReportFailDetails'
          collection_share_details: '#/components/schemas/CollectionShareDetails'
          file_transfers_file_add_details: '#/components/schemas/FileTransfersFileAddDetails'
          file_transfers_transfer_delete_details: '#/components/schemas/FileTransfersTransferDeleteDetails'
          file_transfers_transfer_download_details: '#/components/schemas/FileTransfersTransferDownloadDetails'
          file_transfers_transfer_send_details: '#/components/schemas/FileTransfersTransferSendDetails'
          file_transfers_transfer_view_details: '#/components/schemas/FileTransfersTransferViewDetails'
          note_acl_invite_only_details: '#/components/schemas/NoteAclInviteOnlyDetails'
          note_acl_link_details: '#/components/schemas/NoteAclLinkDetails'
          note_acl_team_link_details: '#/components/schemas/NoteAclTeamLinkDetails'
          note_shared_details: '#/components/schemas/NoteSharedDetails'
          note_share_receive_details: '#/components/schemas/NoteShareReceiveDetails'
          open_note_shared_details: '#/components/schemas/OpenNoteSharedDetails'
          replay_file_shared_link_created_details: '#/components/schemas/ReplayFileSharedLinkCreatedDetails'
          replay_file_shared_link_modified_details: '#/components/schemas/ReplayFileSharedLinkModifiedDetails'
          replay_project_team_add_details: '#/components/schemas/ReplayProjectTeamAddDetails'
          replay_project_team_delete_details: '#/components/schemas/ReplayProjectTeamDeleteDetails'
          sf_add_group_details: '#/components/schemas/SfAddGroupDetails'
          sf_allow_non_members_to_view_shared_links_details: '#/components/schemas/SfAllowNonMembersToViewSharedLinksDetails'
          sf_external_invite_warn_details: '#/components/schemas/SfExternalInviteWarnDetails'
          sf_fb_invite_details: '#/components/schemas/SfFbInviteDetails'
          sf_fb_invite_change_role_details: '#/components/schemas/SfFbInviteChangeRoleDetails'
          sf_fb_uninvite_details: '#/components/schemas/SfFbUninviteDetails'
          sf_invite_group_details: '#/components/schemas/SfInviteGroupDetails'
          sf_team_grant_access_details: '#/components/schemas/SfTeamGrantAccessDetails'
          sf_team_invite_details: '#/components/schemas/SfTeamInviteDetails'
          sf_team_invite_change_role_details: '#/components/schemas/SfTeamInviteChangeRoleDetails'
          sf_team_join_details: '#/components/schemas/SfTeamJoinDetails'
          sf_team_join_from_oob_link_details: '#/components/schemas/SfTeamJoinFromOobLinkDetails'
          sf_team_uninvite_details: '#/components/schemas/SfTeamUninviteDetails'
          shared_content_add_invitees_details: '#/components/schemas/SharedContentAddInviteesDetails'
          shared_content_add_link_expiry_details: '#/components/schemas/SharedContentAddLinkExpiryDetails'
          shared_content_add_link_password_details: '#/components/schemas/SharedContentAddLinkPasswordDetails'
          shared_content_add_member_details: '#/components/schemas/SharedContentAddMemberDetails'
          shared_content_change_downloads_policy_details: '#/components/schemas/SharedContentChangeDownloadsPolicyDetails'
          shared_content_change_invitee_role_details: '#/components/schemas/SharedContentChangeInviteeRoleDetails'
          shared_content_change_link_audience_details: '#/components/schemas/SharedContentChangeLinkAudienceDetails'
          shared_content_change_link_expiry_details: '#/components/schemas/SharedContentChangeLinkExpiryDetails'
          shared_content_change_link_password_details: '#/components/schemas/SharedContentChangeLinkPasswordDetails'
          shared_content_change_member_role_details: '#/components/schemas/SharedContentChangeMemberRoleDetails'
          shared_content_change_viewer_info_policy_details: '#/components/schemas/SharedContentChangeViewerInfoPolicyDetails'
          shared_content_claim_invitation_details: '#/components/schemas/SharedContentClaimInvitationDetails'
          shared_content_copy_details: '#/components/schemas/SharedContentCopyDetails'
          shared_content_download_details: '#/components/schemas/SharedContentDownloadDetails'
          shared_content_relinquish_membership_details: '#/components/schemas/SharedContentRelinquishMembershipDetails'
          shared_content_remove_invitees_details: '#/components/schemas/SharedContentRemoveInviteesDetails'
          shared_content_remove_link_expiry_details: '#/components/schemas/SharedContentRemoveLinkExpiryDetails'
          shared_content_remove_link_password_details: '#/components/schemas/SharedContentRemoveLinkPasswordDetails'
          shared_content_remove_member_details: '#/components/schemas/SharedContentRemoveMemberDetails'
          shared_content_request_access_details: '#/components/schemas/SharedContentRequestAccessDetails'
          shared_content_restore_invitees_details: '#/components/schemas/SharedContentRestoreInviteesDetails'
          shared_content_restore_member_details: '#/components/schemas/SharedContentRestoreMemberDetails'
          shared_content_unshare_details: '#/components/schemas/SharedContentUnshareDetails'
          shared_content_view_details: '#/components/schemas/SharedContentViewDetails'
          shared_folder_change_link_policy_details: '#/components/schemas/SharedFolderChangeLinkPolicyDetails'
          shared_folder_change_members_inheritance_policy_details: '#/components/schemas/SharedFolderChangeMembersInheritancePolicyDetails'
          shared_folder_change_members_management_policy_details: '#/components/schemas/SharedFolderChangeMembersManagementPolicyDetails'
          shared_folder_change_members_policy_details: '#/components/schemas/SharedFolderChangeMembersPolicyDetails'
          shared_folder_create_details: '#/components/schemas/SharedFolderCreateDetails'
          shared_folder_decline_invitation_details: '#/components/schemas/SharedFolderDeclineInvitationDetails'
          shared_folder_mount_details: '#/components/schemas/SharedFolderMountDetails'
          shared_folder_nest_details: '#/components/schemas/SharedFolderNestDetails'
          shared_folder_transfer_ownership_details: '#/components/schemas/SharedFolderTransferOwnershipDetails'
          shared_folder_unmount_details: '#/components/schemas/SharedFolderUnmountDetails'
          shared_link_add_expiry_details: '#/components/schemas/SharedLinkAddExpiryDetails'
          shared_link_change_expiry_details: '#/components/schemas/SharedLinkChangeExpiryDetails'
          shared_link_change_visibility_details: '#/components/schemas/SharedLinkChangeVisibilityDetails'
          shared_link_copy_details: '#/components/schemas/SharedLinkCopyDetails'
          shared_link_create_details: '#/components/schemas/SharedLinkCreateDetails'
          shared_link_disable_details: '#/components/schemas/SharedLinkDisableDetails'
          shared_link_download_details: '#/components/schemas/SharedLinkDownloadDetails'
          shared_link_remove_expiry_details: '#/components/schemas/SharedLinkRemoveExpiryDetails'
          shared_link_settings_add_expiration_details: '#/components/schemas/SharedLinkSettingsAddExpirationDetails'
          shared_link_settings_add_password_details: '#/components/schemas/SharedLinkSettingsAddPasswordDetails'
          shared_link_settings_allow_download_disabled_details: '#/components/schemas/SharedLinkSettingsAllowDownloadDisabledDetails'
          shared_link_settings_allow_download_enabled_details: '#/components/schemas/SharedLinkSettingsAllowDownloadEnabledDetails'
          shared_link_settings_change_audience_details: '#/components/schemas/SharedLinkSettingsChangeAudienceDetails'
          shared_link_settings_change_expiration_details: '#/components/schemas/SharedLinkSettingsChangeExpirationDetails'
          shared_link_settings_change_password_details: '#/components/schemas/SharedLinkSettingsChangePasswordDetails'
          shared_link_settings_remove_expiration_details: '#/components/schemas/SharedLinkSettingsRemoveExpirationDetails'
          shared_link_settings_remove_password_details: '#/components/schemas/SharedLinkSettingsRemovePasswordDetails'
          shared_link_share_details: '#/components/schemas/SharedLinkShareDetails'
          shared_link_view_details: '#/components/schemas/SharedLinkViewDetails'
          shared_note_opened_details: '#/components/schemas/SharedNoteOpenedDetails'
          shmodel_disable_downloads_details: '#/components/schemas/ShmodelDisableDownloadsDetails'
          shmodel_enable_downloads_details: '#/components/schemas/ShmodelEnableDownloadsDetails'
          shmodel_group_share_details: '#/components/schemas/ShmodelGroupShareDetails'
          showcase_access_granted_details: '#/components/schemas/ShowcaseAccessGrantedDetails'
          showcase_add_member_details: '#/components/schemas/ShowcaseAddMemberDetails'
          showcase_archived_details: '#/components/schemas/ShowcaseArchivedDetails'
          showcase_created_details: '#/components/schemas/ShowcaseCreatedDetails'
          showcase_delete_comment_details: '#/components/schemas/ShowcaseDeleteCommentDetails'
          showcase_edited_details: '#/components/schemas/ShowcaseEditedDetails'
          showcase_edit_comment_details: '#/components/schemas/ShowcaseEditCommentDetails'
          showcase_file_added_details: '#/components/schemas/ShowcaseFileAddedDetails'
          showcase_file_download_details: '#/components/schemas/ShowcaseFileDownloadDetails'
          showcase_file_removed_details: '#/components/schemas/ShowcaseFileRemovedDetails'
          showcase_file_view_details: '#/components/schemas/ShowcaseFileViewDetails'
          showcase_permanently_deleted_details: '#/components/schemas/ShowcasePermanentlyDeletedDetails'
          showcase_post_comment_details: '#/components/schemas/ShowcasePostCommentDetails'
          showcase_remove_member_details: '#/components/schemas/ShowcaseRemoveMemberDetails'
          showcase_renamed_details: '#/components/schemas/ShowcaseRenamedDetails'
          showcase_request_access_details: '#/components/schemas/ShowcaseRequestAccessDetails'
          showcase_resolve_comment_details: '#/components/schemas/ShowcaseResolveCommentDetails'
          showcase_restored_details: '#/components/schemas/ShowcaseRestoredDetails'
          showcase_trashed_details: '#/components/schemas/ShowcaseTrashedDetails'
          showcase_trashed_deprecated_details: '#/components/schemas/ShowcaseTrashedDeprecatedDetails'
          showcase_unresolve_comment_details: '#/components/schemas/ShowcaseUnresolveCommentDetails'
          showcase_untrashed_details: '#/components/schemas/ShowcaseUntrashedDetails'
          showcase_untrashed_deprecated_details: '#/components/schemas/ShowcaseUntrashedDeprecatedDetails'
          showcase_view_details: '#/components/schemas/ShowcaseViewDetails'
          sso_add_cert_details: '#/components/schemas/SsoAddCertDetails'
          sso_add_login_url_details: '#/components/schemas/SsoAddLoginUrlDetails'
          sso_add_logout_url_details: '#/components/schemas/SsoAddLogoutUrlDetails'
          sso_change_cert_details: '#/components/schemas/SsoChangeCertDetails'
          sso_change_login_url_details: '#/components/schemas/SsoChangeLoginUrlDetails'
          sso_change_logout_url_details: '#/components/schemas/SsoChangeLogoutUrlDetails'
          sso_change_saml_identity_mode_details: '#/components/schemas/SsoChangeSamlIdentityModeDetails'
          sso_remove_cert_details: '#/components/schemas/SsoRemoveCertDetails'
          sso_remove_login_url_details: '#/components/schemas/SsoRemoveLoginUrlDetails'
          sso_remove_logout_url_details: '#/components/schemas/SsoRemoveLogoutUrlDetails'
          team_folder_change_status_details: '#/components/schemas/TeamFolderChangeStatusDetails'
          team_folder_create_details: '#/components/schemas/TeamFolderCreateDetails'
          team_folder_downgrade_details: '#/components/schemas/TeamFolderDowngradeDetails'
          team_folder_permanently_delete_details: '#/components/schemas/TeamFolderPermanentlyDeleteDetails'
          team_folder_rename_details: '#/components/schemas/TeamFolderRenameDetails'
          team_selective_sync_settings_changed_details: '#/components/schemas/TeamSelectiveSyncSettingsChangedDetails'
          account_capture_change_policy_details: '#/components/schemas/AccountCaptureChangePolicyDetails'
          admin_email_reminders_changed_details: '#/components/schemas/AdminEmailRemindersChangedDetails'
          allow_download_disabled_details: '#/components/schemas/AllowDownloadDisabledDetails'
          allow_download_enabled_details: '#/components/schemas/AllowDownloadEnabledDetails'
          app_permissions_changed_details: '#/components/schemas/AppPermissionsChangedDetails'
          camera_uploads_policy_changed_details: '#/components/schemas/CameraUploadsPolicyChangedDetails'
          capture_transcript_policy_changed_details: '#/components/schemas/CaptureTranscriptPolicyChangedDetails'
          classification_change_policy_details: '#/components/schemas/ClassificationChangePolicyDetails'
          computer_backup_policy_changed_details: '#/components/schemas/ComputerBackupPolicyChangedDetails'
          content_administration_policy_changed_details: '#/components/schemas/ContentAdministrationPolicyChangedDetails'
          data_placement_restriction_change_policy_details: '#/components/schemas/DataPlacementRestrictionChangePolicyDetails'
          data_placement_restriction_satisfy_policy_details: '#/components/schemas/DataPlacementRestrictionSatisfyPolicyDetails'
          device_approvals_add_exception_details: '#/components/schemas/DeviceApprovalsAddExceptionDetails'
          device_approvals_change_desktop_policy_details: '#/components/schemas/DeviceApprovalsChangeDesktopPolicyDetails'
          device_approvals_change_mobile_policy_details: '#/components/schemas/DeviceApprovalsChangeMobilePolicyDetails'
          device_approvals_change_overage_action_details: '#/components/schemas/DeviceApprovalsChangeOverageActionDetails'
          device_approvals_change_unlink_action_details: '#/components/schemas/DeviceApprovalsChangeUnlinkActionDetails'
          device_approvals_remove_exception_details: '#/components/schemas/DeviceApprovalsRemoveExceptionDetails'
          directory_restrictions_add_members_details: '#/components/schemas/DirectoryRestrictionsAddMembersDetails'
          directory_restrictions_remove_members_details: '#/components/schemas/DirectoryRestrictionsRemoveMembersDetails'
          dropbox_passwords_policy_changed_details: '#/components/schemas/DropboxPasswordsPolicyChangedDetails'
          email_ingest_policy_changed_details: '#/components/schemas/EmailIngestPolicyChangedDetails'
          emm_add_exception_details: '#/components/schemas/EmmAddExceptionDetails'
          emm_change_policy_details: '#/components/schemas/EmmChangePolicyDetails'
          emm_remove_exception_details: '#/components/schemas/EmmRemoveExceptionDetails'
          extended_version_history_change_policy_details: '#/components/schemas/ExtendedVersionHistoryChangePolicyDetails'
          external_drive_backup_policy_changed_details: '#/components/schemas/ExternalDriveBackupPolicyChangedDetails'
          file_comments_change_policy_details: '#/components/schemas/FileCommentsChangePolicyDetails'
          file_locking_policy_changed_details: '#/components/schemas/FileLockingPolicyChangedDetails'
          file_provider_migration_policy_changed_details: '#/components/schemas/FileProviderMigrationPolicyChangedDetails'
          file_requests_change_policy_details: '#/components/schemas/FileRequestsChangePolicyDetails'
          file_requests_emails_enabled_details: '#/components/schemas/FileRequestsEmailsEnabledDetails'
          file_requests_emails_restricted_to_team_only_details: '#/components/schemas/FileRequestsEmailsRestrictedToTeamOnlyDetails'
          file_transfers_policy_changed_details: '#/components/schemas/FileTransfersPolicyChangedDetails'
          folder_link_restriction_policy_changed_details: '#/components/schemas/FolderLinkRestrictionPolicyChangedDetails'
          google_sso_change_policy_details: '#/components/schemas/GoogleSsoChangePolicyDetails'
          group_user_management_change_policy_details: '#/components/schemas/GroupUserManagementChangePolicyDetails'
          integration_policy_changed_details: '#/components/schemas/IntegrationPolicyChangedDetails'
          invite_acceptance_email_policy_changed_details: '#/components/schemas/InviteAcceptanceEmailPolicyChangedDetails'
          member_requests_change_policy_details: '#/components/schemas/MemberRequestsChangePolicyDetails'
          member_send_invite_policy_changed_details: '#/components/schemas/MemberSendInvitePolicyChangedDetails'
          member_space_limits_add_exception_details: '#/components/schemas/MemberSpaceLimitsAddExceptionDetails'
          member_space_limits_change_caps_type_policy_details: '#/components/schemas/MemberSpaceLimitsChangeCapsTypePolicyDetails'
          member_space_limits_change_policy_details: '#/components/schemas/MemberSpaceLimitsChangePolicyDetails'
          member_space_limits_remove_exception_details: '#/components/schemas/MemberSpaceLimitsRemoveExceptionDetails'
          member_suggestions_change_policy_details: '#/components/schemas/MemberSuggestionsChangePolicyDetails'
          microsoft_office_addin_change_policy_details: '#/components/schemas/MicrosoftOfficeAddinChangePolicyDetails'
          network_control_change_policy_details: '#/components/schemas/NetworkControlChangePolicyDetails'
          paper_change_deployment_policy_details: '#/components/schemas/PaperChangeDeploymentPolicyDetails'
          paper_change_member_link_policy_details: '#/components/schemas/PaperChangeMemberLinkPolicyDetails'
          paper_change_member_policy_details: '#/components/schemas/PaperChangeMemberPolicyDetails'
          paper_change_policy_details: '#/components/schemas/PaperChangePolicyDetails'
          paper_default_folder_policy_changed_details: '#/components/schemas/PaperDefaultFolderPolicyChangedDetails'
          paper_desktop_policy_changed_details: '#/components/schemas/PaperDesktopPolicyChangedDetails'
          paper_enabled_users_group_addition_details: '#/components/schemas/PaperEnabledUsersGroupAdditionDetails'
          paper_enabled_users_group_removal_details: '#/components/schemas/PaperEnabledUsersGroupRemovalDetails'
          password_strength_requirements_change_policy_details: '#/components/schemas/PasswordStrengthRequirementsChangePolicyDetails'
          permanent_delete_change_policy_details: '#/components/schemas/PermanentDeleteChangePolicyDetails'
          reseller_support_change_policy_details: '#/components/schemas/ResellerSupportChangePolicyDetails'
          rewind_policy_changed_details: '#/components/schemas/RewindPolicyChangedDetails'
          send_for_signature_policy_changed_details: '#/components/schemas/SendForSignaturePolicyChangedDetails'
          sharing_change_folder_join_policy_details: '#/components/schemas/SharingChangeFolderJoinPolicyDetails'
          sharing_change_link_allow_change_expiration_policy_details: '#/components/schemas/SharingChangeLinkAllowChangeExpirationPolicyDetails'
          sharing_change_link_default_expiration_policy_details: '#/components/schemas/SharingChangeLinkDefaultExpirationPolicyDetails'
          sharing_change_link_enforce_password_policy_details: '#/components/schemas/SharingChangeLinkEnforcePasswordPolicyDetails'
          sharing_change_link_policy_details: '#/components/schemas/SharingChangeLinkPolicyDetails'
          sharing_change_member_policy_details: '#/components/schemas/SharingChangeMemberPolicyDetails'
          showcase_change_download_policy_details: '#/components/schemas/ShowcaseChangeDownloadPolicyDetails'
          showcase_change_enabled_policy_details: '#/components/schemas/ShowcaseChangeEnabledPolicyDetails'
          showcase_change_external_sharing_policy_details: '#/components/schemas/ShowcaseChangeExternalSharingPolicyDetails'
          smarter_smart_sync_policy_changed_details: '#/components/schemas/SmarterSmartSyncPolicyChangedDetails'
          smart_sync_change_policy_details: '#/components/schemas/SmartSyncChangePolicyDetails'
          smart_sync_not_opt_out_details: '#/components/schemas/SmartSyncNotOptOutDetails'
          smart_sync_opt_out_details: '#/components/schemas/SmartSyncOptOutDetails'
          sso_change_policy_details: '#/components/schemas/SsoChangePolicyDetails'
          team_branding_policy_changed_details: '#/components/schemas/TeamBrandingPolicyChangedDetails'
          team_extensions_policy_changed_details: '#/components/schemas/TeamExtensionsPolicyChangedDetails'
          team_selective_sync_policy_changed_details: '#/components/schemas/TeamSelectiveSyncPolicyChangedDetails'
          team_sharing_whitelist_subjects_changed_details: '#/components/schemas/TeamSharingWhitelistSubjectsChangedDetails'
          tfa_add_exception_details: '#/components/schemas/TfaAddExceptionDetails'
          tfa_change_policy_details: '#/components/schemas/TfaChangePolicyDetails'
          tfa_remove_exception_details: '#/components/schemas/TfaRemoveExceptionDetails'
          two_account_change_policy_details: '#/components/schemas/TwoAccountChangePolicyDetails'
          viewer_info_policy_changed_details: '#/components/schemas/ViewerInfoPolicyChangedDetails'
          watermarking_policy_changed_details: '#/components/schemas/WatermarkingPolicyChangedDetails'
          web_sessions_change_active_session_limit_details: '#/components/schemas/WebSessionsChangeActiveSessionLimitDetails'
          web_sessions_change_fixed_length_policy_details: '#/components/schemas/WebSessionsChangeFixedLengthPolicyDetails'
          web_sessions_change_idle_length_policy_details: '#/components/schemas/WebSessionsChangeIdleLengthPolicyDetails'
          data_residency_migration_request_successful_details: '#/components/schemas/DataResidencyMigrationRequestSuccessfulDetails'
          data_residency_migration_request_unsuccessful_details: '#/components/schemas/DataResidencyMigrationRequestUnsuccessfulDetails'
          team_merge_from_details: '#/components/schemas/TeamMergeFromDetails'
          team_merge_to_details: '#/components/schemas/TeamMergeToDetails'
          team_profile_add_background_details: '#/components/schemas/TeamProfileAddBackgroundDetails'
          team_profile_add_logo_details: '#/components/schemas/TeamProfileAddLogoDetails'
          team_profile_change_background_details: '#/components/schemas/TeamProfileChangeBackgroundDetails'
          team_profile_change_default_language_details: '#/components/schemas/TeamProfileChangeDefaultLanguageDetails'
          team_profile_change_logo_details: '#/components/schemas/TeamProfileChangeLogoDetails'
          team_profile_change_name_details: '#/components/schemas/TeamProfileChangeNameDetails'
          team_profile_remove_background_details: '#/components/schemas/TeamProfileRemoveBackgroundDetails'
          team_profile_remove_logo_details: '#/components/schemas/TeamProfileRemoveLogoDetails'
          tfa_add_backup_phone_details: '#/components/schemas/TfaAddBackupPhoneDetails'
          tfa_add_security_key_details: '#/components/schemas/TfaAddSecurityKeyDetails'
          tfa_change_backup_phone_details: '#/components/schemas/TfaChangeBackupPhoneDetails'
          tfa_change_status_details: '#/components/schemas/TfaChangeStatusDetails'
          tfa_remove_backup_phone_details: '#/components/schemas/TfaRemoveBackupPhoneDetails'
          tfa_remove_security_key_details: '#/components/schemas/TfaRemoveSecurityKeyDetails'
          tfa_reset_details: '#/components/schemas/TfaResetDetails'
          changed_enterprise_admin_role_details: '#/components/schemas/ChangedEnterpriseAdminRoleDetails'
          changed_enterprise_connected_team_status_details: '#/components/schemas/ChangedEnterpriseConnectedTeamStatusDetails'
          ended_enterprise_admin_session_details: '#/components/schemas/EndedEnterpriseAdminSessionDetails'
          ended_enterprise_admin_session_deprecated_details: '#/components/schemas/EndedEnterpriseAdminSessionDeprecatedDetails'
          enterprise_settings_locking_details: '#/components/schemas/EnterpriseSettingsLockingDetails'
          guest_admin_change_status_details: '#/components/schemas/GuestAdminChangeStatusDetails'
          started_enterprise_admin_session_details: '#/components/schemas/StartedEnterpriseAdminSessionDetails'
          team_merge_request_accepted_details: '#/components/schemas/TeamMergeRequestAcceptedDetails'
          team_merge_request_accepted_shown_to_primary_team_details: '#/components/schemas/TeamMergeRequestAcceptedShownToPrimaryTeamDetails'
          team_merge_request_accepted_shown_to_secondary_team_details: '#/components/schemas/TeamMergeRequestAcceptedShownToSecondaryTeamDetails'
          team_merge_request_auto_canceled_details: '#/components/schemas/TeamMergeRequestAutoCanceledDetails'
          team_merge_request_canceled_details: '#/components/schemas/TeamMergeRequestCanceledDetails'
          team_merge_request_canceled_shown_to_primary_team_details: '#/components/schemas/TeamMergeRequestCanceledShownToPrimaryTeamDetails'
          team_merge_request_canceled_shown_to_secondary_team_details: '#/components/schemas/TeamMergeRequestCanceledShownToSecondaryTeamDetails'
          team_merge_request_expired_details: '#/components/schemas/TeamMergeRequestExpiredDetails'
          team_merge_request_expired_shown_to_primary_team_details: '#/components/schemas/TeamMergeRequestExpiredShownToPrimaryTeamDetails'
          team_merge_request_expired_shown_to_secondary_team_details: '#/components/schemas/TeamMergeRequestExpiredShownToSecondaryTeamDetails'
          team_merge_request_rejected_shown_to_primary_team_details: '#/components/schemas/TeamMergeRequestRejectedShownToPrimaryTeamDetails'
          team_merge_request_rejected_shown_to_secondary_team_details: '#/components/schemas/TeamMergeRequestRejectedShownToSecondaryTeamDetails'
          team_merge_request_reminder_details: '#/components/schemas/TeamMergeRequestReminderDetails'
          team_merge_request_reminder_shown_to_primary_team_details: '#/components/schemas/TeamMergeRequestReminderShownToPrimaryTeamDetails'
          team_merge_request_reminder_shown_to_secondary_team_details: '#/components/schemas/TeamMergeRequestReminderShownToSecondaryTeamDetails'
          team_merge_request_revoked_details: '#/components/schemas/TeamMergeRequestRevokedDetails'
          team_merge_request_sent_shown_to_primary_team_details: '#/components/schemas/TeamMergeRequestSentShownToPrimaryTeamDetails'
          team_merge_request_sent_shown_to_secondary_team_details: '#/components/schemas/TeamMergeRequestSentShownToSecondaryTeamDetails'
          missing_details: '#/components/schemas/MissingDetails'
    EventType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admin_alerting_alert_state_changed
          - admin_alerting_changed_alert_config
          - admin_alerting_triggered_alert
          - ransomware_restore_process_completed
          - ransomware_restore_process_started
          - app_blocked_by_permissions
          - app_link_team
          - app_link_user
          - app_unlink_team
          - app_unlink_user
          - integration_connected
          - integration_disconnected
          - file_add_comment
          - file_change_comment_subscription
          - file_delete_comment
          - file_edit_comment
          - file_like_comment
          - file_resolve_comment
          - file_unlike_comment
          - file_unresolve_comment
          - governance_policy_add_folders
          - governance_policy_add_folder_failed
          - governance_policy_content_disposed
          - governance_policy_create
          - governance_policy_delete
          - governance_policy_edit_details
          - governance_policy_edit_duration
          - governance_policy_export_created
          - governance_policy_export_removed
          - governance_policy_remove_folders
          - governance_policy_report_created
          - governance_policy_zip_part_downloaded
          - legal_holds_activate_a_hold
          - legal_holds_add_members
          - legal_holds_change_hold_details
          - legal_holds_change_hold_name
          - legal_holds_export_a_hold
          - legal_holds_export_cancelled
          - legal_holds_export_downloaded
          - legal_holds_export_removed
          - legal_holds_release_a_hold
          - legal_holds_remove_members
          - legal_holds_report_a_hold
          - device_change_ip_desktop
          - device_change_ip_mobile
          - device_change_ip_web
          - device_delete_on_unlink_fail
          - device_delete_on_unlink_success
          - device_link_fail
          - device_link_success
          - device_management_disabled
          - device_management_enabled
          - device_sync_backup_status_changed
          - device_unlink
          - dropbox_passwords_exported
          - dropbox_passwords_new_device_enrolled
          - emm_refresh_auth_token
          - external_drive_backup_eligibility_status_checked
          - external_drive_backup_status_changed
          - account_capture_change_availability
          - account_capture_migrate_account
          - account_capture_notification_emails_sent
          - account_capture_relinquish_account
          - disabled_domain_invites
          - domain_invites_approve_request_to_join_team
          - domain_invites_decline_request_to_join_team
          - domain_invites_email_existing_users
          - domain_invites_request_to_join_team
          - domain_invites_set_invite_new_user_pref_to_no
          - domain_invites_set_invite_new_user_pref_to_yes
          - domain_verification_add_domain_fail
          - domain_verification_add_domain_success
          - domain_verification_remove_domain
          - enabled_domain_invites
          - team_encryption_key_cancel_key_deletion
          - team_encryption_key_create_key
          - team_encryption_key_delete_key
          - team_encryption_key_disable_key
          - team_encryption_key_enable_key
          - team_encryption_key_rotate_key
          - team_encryption_key_schedule_key_deletion
          - apply_naming_convention
          - create_folder
          - file_add
          - file_add_from_automation
          - file_copy
          - file_delete
          - file_download
          - file_edit
          - file_get_copy_reference
          - file_locking_lock_status_changed
          - file_move
          - file_permanently_delete
          - file_preview
          - file_rename
          - file_restore
          - file_revert
          - file_rollback_changes
          - file_save_copy_reference
          - folder_overview_description_changed
          - folder_overview_item_pinned
          - folder_overview_item_unpinned
          - object_label_added
          - object_label_removed
          - object_label_updated_value
          - organize_folder_with_tidy
          - replay_file_delete
          - rewind_folder
          - undo_naming_convention
          - undo_organize_folder_with_tidy
          - user_tags_added
          - user_tags_removed
          - email_ingest_receive_file
          - file_request_change
          - file_request_close
          - file_request_create
          - file_request_delete
          - file_request_receive_file
          - group_add_external_id
          - group_add_member
          - group_change_external_id
          - group_change_management_type
          - group_change_member_role
          - group_create
          - group_delete
          - group_description_updated
          - group_join_policy_updated
          - group_moved
          - group_remove_external_id
          - group_remove_member
          - group_rename
          - account_lock_or_unlocked
          - emm_error
          - guest_admin_signed_in_via_trusted_teams
          - guest_admin_signed_out_via_trusted_teams
          - login_fail
          - login_success
          - logout
          - reseller_support_session_end
          - reseller_support_session_start
          - sign_in_as_session_end
          - sign_in_as_session_start
          - sso_error
          - backup_admin_invitation_sent
          - backup_invitation_opened
          - create_team_invite_link
          - delete_team_invite_link
          - member_add_external_id
          - member_add_name
          - member_change_admin_role
          - member_change_email
          - member_change_external_id
          - member_change_membership_type
          - member_change_name
          - member_change_reseller_role
          - member_change_status
          - member_delete_manual_contacts
          - member_delete_profile_photo
          - member_permanently_delete_account_contents
          - member_remove_external_id
          - member_set_profile_photo
          - member_space_limits_add_custom_quota
          - member_space_limits_change_custom_quota
          - member_space_limits_change_status
          - member_space_limits_remove_custom_quota
          - member_suggest
          - member_transfer_account_contents
          - pending_secondary_email_added
          - secondary_email_deleted
          - secondary_email_verified
          - secondary_mails_policy_changed
          - binder_add_page
          - binder_add_section
          - binder_remove_page
          - binder_remove_section
          - binder_rename_page
          - binder_rename_section
          - binder_reorder_page
          - binder_reorder_section
          - paper_content_add_member
          - paper_content_add_to_folder
          - paper_content_archive
          - paper_content_create
          - paper_content_permanently_delete
          - paper_content_remove_from_folder
          - paper_content_remove_member
          - paper_content_rename
          - paper_content_restore
          - paper_doc_add_comment
          - paper_doc_change_member_role
          - paper_doc_change_sharing_policy
          - paper_doc_change_subscription
          - paper_doc_deleted
          - paper_doc_delete_comment
          - paper_doc_download
          - paper_doc_edit
          - paper_doc_edit_comment
          - paper_doc_followed
          - paper_doc_mention
          - paper_doc_ownership_changed
          - paper_doc_request_access
          - paper_doc_resolve_comment
          - paper_doc_revert
          - paper_doc_slack_share
          - paper_doc_team_invite
          - paper_doc_trashed
          - paper_doc_unresolve_comment
          - paper_doc_untrashed
          - paper_doc_view
          - paper_external_view_allow
          - paper_external_view_default_team
          - paper_external_view_forbid
          - paper_folder_change_subscription
          - paper_folder_deleted
          - paper_folder_followed
          - paper_folder_team_invite
          - paper_published_link_change_permission
          - paper_published_link_create
          - paper_published_link_disabled
          - paper_published_link_view
          - password_change
          - password_reset
          - password_reset_all
          - classification_create_report
          - classification_create_report_fail
          - emm_create_exceptions_report
          - emm_create_usage_report
          - export_members_report
          - export_members_report_fail
          - external_sharing_create_report
          - external_sharing_report_failed
          - no_expiration_link_gen_create_report
          - no_expiration_link_gen_report_failed
          - no_password_link_gen_create_report
          - no_password_link_gen_report_failed
          - no_password_link_view_create_report
          - no_password_link_view_report_failed
          - outdated_link_view_create_report
          - outdated_link_view_report_failed
          - paper_admin_export_start
          - ransomware_alert_create_report
          - ransomware_alert_create_report_failed
          - smart_sync_create_admin_privilege_report
          - team_activity_create_report
          - team_activity_create_report_fail
          - collection_share
          - file_transfers_file_add
          - file_transfers_transfer_delete
          - file_transfers_transfer_download
          - file_transfers_transfer_send
          - file_transfers_transfer_view
          - note_acl_invite_only
          - note_acl_link
          - note_acl_team_link
          - note_shared
          - note_share_receive
          - open_note_shared
          - replay_file_shared_link_created
          - replay_file_shared_link_modified
          - replay_project_team_add
          - replay_project_team_delete
          - sf_add_group
          - sf_allow_non_members_to_view_shared_links
          - sf_external_invite_warn
          - sf_fb_invite
          - sf_fb_invite_change_role
          - sf_fb_uninvite
          - sf_invite_group
          - sf_team_grant_access
          - sf_team_invite
          - sf_team_invite_change_role
          - sf_team_join
          - sf_team_join_from_oob_link
          - sf_team_uninvite
          - shared_content_add_invitees
          - shared_content_add_link_expiry
          - shared_content_add_link_password
          - shared_content_add_member
          - shared_content_change_downloads_policy
          - shared_content_change_invitee_role
          - shared_content_change_link_audience
          - shared_content_change_link_expiry
          - shared_content_change_link_password
          - shared_content_change_member_role
          - shared_content_change_viewer_info_policy
          - shared_content_claim_invitation
          - shared_content_copy
          - shared_content_download
          - shared_content_relinquish_membership
          - shared_content_remove_invitees
          - shared_content_remove_link_expiry
          - shared_content_remove_link_password
          - shared_content_remove_member
          - shared_content_request_access
          - shared_content_restore_invitees
          - shared_content_restore_member
          - shared_content_unshare
          - shared_content_view
          - shared_folder_change_link_policy
          - shared_folder_change_members_inheritance_policy
          - shared_folder_change_members_management_policy
          - shared_folder_change_members_policy
          - shared_folder_create
          - shared_folder_decline_invitation
          - shared_folder_mount
          - shared_folder_nest
          - shared_folder_transfer_ownership
          - shared_folder_unmount
          - shared_link_add_expiry
          - shared_link_change_expiry
          - shared_link_change_visibility
          - shared_link_copy
          - shared_link_create
          - shared_link_disable
          - shared_link_download
          - shared_link_remove_expiry
          - shared_link_settings_add_expiration
          - shared_link_settings_add_password
          - shared_link_settings_allow_download_disabled
          - shared_link_settings_allow_download_enabled
          - shared_link_settings_change_audience
          - shared_link_settings_change_expiration
          - shared_link_settings_change_password
          - shared_link_settings_remove_expiration
          - shared_link_settings_remove_password
          - shared_link_share
          - shared_link_view
          - shared_note_opened
          - shmodel_disable_downloads
          - shmodel_enable_downloads
          - shmodel_group_share
          - showcase_access_granted
          - showcase_add_member
          - showcase_archived
          - showcase_created
          - showcase_delete_comment
          - showcase_edited
          - showcase_edit_comment
          - showcase_file_added
          - showcase_file_download
          - showcase_file_removed
          - showcase_file_view
          - showcase_permanently_deleted
          - showcase_post_comment
          - showcase_remove_member
          - showcase_renamed
          - showcase_request_access
          - showcase_resolve_comment
          - showcase_restored
          - showcase_trashed
          - showcase_trashed_deprecated
          - showcase_unresolve_comment
          - showcase_untrashed
          - showcase_untrashed_deprecated
          - showcase_view
          - sso_add_cert
          - sso_add_login_url
          - sso_add_logout_url
          - sso_change_cert
          - sso_change_login_url
          - sso_change_logout_url
          - sso_change_saml_identity_mode
          - sso_remove_cert
          - sso_remove_login_url
          - sso_remove_logout_url
          - team_folder_change_status
          - team_folder_create
          - team_folder_downgrade
          - team_folder_permanently_delete
          - team_folder_rename
          - team_selective_sync_settings_changed
          - account_capture_change_policy
          - admin_email_reminders_changed
          - allow_download_disabled
          - allow_download_enabled
          - app_permissions_changed
          - camera_uploads_policy_changed
          - capture_transcript_policy_changed
          - classification_change_policy
          - computer_backup_policy_changed
          - content_administration_policy_changed
          - data_placement_restriction_change_policy
          - data_placement_restriction_satisfy_policy
          - device_approvals_add_exception
          - device_approvals_change_desktop_policy
          - device_approvals_change_mobile_policy
          - device_approvals_change_overage_action
          - device_approvals_change_unlink_action
          - device_approvals_remove_exception
          - directory_restrictions_add_members
          - directory_restrictions_remove_members
          - dropbox_passwords_policy_changed
          - email_ingest_policy_changed
          - emm_add_exception
          - emm_change_policy
          - emm_remove_exception
          - extended_version_history_change_policy
          - external_drive_backup_policy_changed
          - file_comments_change_policy
          - file_locking_policy_changed
          - file_provider_migration_policy_changed
          - file_requests_change_policy
          - file_requests_emails_enabled
          - file_requests_emails_restricted_to_team_only
          - file_transfers_policy_changed
          - folder_link_restriction_policy_changed
          - google_sso_change_policy
          - group_user_management_change_policy
          - integration_policy_changed
          - invite_acceptance_email_policy_changed
          - member_requests_change_policy
          - member_send_invite_policy_changed
          - member_space_limits_add_exception
          - member_space_limits_change_caps_type_policy
          - member_space_limits_change_policy
          - member_space_limits_remove_exception
          - member_suggestions_change_policy
          - microsoft_office_addin_change_policy
          - network_control_change_policy
          - paper_change_deployment_policy
          - paper_change_member_link_policy
          - paper_change_member_policy
          - paper_change_policy
          - paper_default_folder_policy_changed
          - paper_desktop_policy_changed
          - paper_enabled_users_group_addition
          - paper_enabled_users_group_removal
          - password_strength_requirements_change_policy
          - permanent_delete_change_policy
          - reseller_support_change_policy
          - rewind_policy_changed
          - send_for_signature_policy_changed
          - sharing_change_folder_join_policy
          - sharing_change_link_allow_change_expiration_policy
          - sharing_change_link_default_expiration_policy
          - sharing_change_link_enforce_password_policy
          - sharing_change_link_policy
          - sharing_change_member_policy
          - showcase_change_download_policy
          - showcase_change_enabled_policy
          - showcase_change_external_sharing_policy
          - smarter_smart_sync_policy_changed
          - smart_sync_change_policy
          - smart_sync_not_opt_out
          - smart_sync_opt_out
          - sso_change_policy
          - team_branding_policy_changed
          - team_extensions_policy_changed
          - team_selective_sync_policy_changed
          - team_sharing_whitelist_subjects_changed
          - tfa_add_exception
          - tfa_change_policy
          - tfa_remove_exception
          - two_account_change_policy
          - viewer_info_policy_changed
          - watermarking_policy_changed
          - web_sessions_change_active_session_limit
          - web_sessions_change_fixed_length_policy
          - web_sessions_change_idle_length_policy
          - data_residency_migration_request_successful
          - data_residency_migration_request_unsuccessful
          - team_merge_from
          - team_merge_to
          - team_profile_add_background
          - team_profile_add_logo
          - team_profile_change_background
          - team_profile_change_default_language
          - team_profile_change_logo
          - team_profile_change_name
          - team_profile_remove_background
          - team_profile_remove_logo
          - tfa_add_backup_phone
          - tfa_add_security_key
          - tfa_change_backup_phone
          - tfa_change_status
          - tfa_remove_backup_phone
          - tfa_remove_security_key
          - tfa_reset
          - changed_enterprise_admin_role
          - changed_enterprise_connected_team_status
          - ended_enterprise_admin_session
          - ended_enterprise_admin_session_deprecated
          - enterprise_settings_locking
          - guest_admin_change_status
          - started_enterprise_admin_session
          - team_merge_request_accepted
          - team_merge_request_accepted_shown_to_primary_team
          - team_merge_request_accepted_shown_to_secondary_team
          - team_merge_request_auto_canceled
          - team_merge_request_canceled
          - team_merge_request_canceled_shown_to_primary_team
          - team_merge_request_canceled_shown_to_secondary_team
          - team_merge_request_expired
          - team_merge_request_expired_shown_to_primary_team
          - team_merge_request_expired_shown_to_secondary_team
          - team_merge_request_rejected_shown_to_primary_team
          - team_merge_request_rejected_shown_to_secondary_team
          - team_merge_request_reminder
          - team_merge_request_reminder_shown_to_primary_team
          - team_merge_request_reminder_shown_to_secondary_team
          - team_merge_request_revoked
          - team_merge_request_sent_shown_to_primary_team
          - team_merge_request_sent_shown_to_secondary_team
      required:
      - .tag
      description: The type of the event with description.
      discriminator:
        propertyName: .tag
        mapping:
          admin_alerting_alert_state_changed: '#/components/schemas/AdminAlertingAlertStateChangedType'
          admin_alerting_changed_alert_config: '#/components/schemas/AdminAlertingChangedAlertConfigType'
          admin_alerting_triggered_alert: '#/components/schemas/AdminAlertingTriggeredAlertType'
          ransomware_restore_process_completed: '#/components/schemas/RansomwareRestoreProcessCompletedType'
          ransomware_restore_process_started: '#/components/schemas/RansomwareRestoreProcessStartedType'
          app_blocked_by_permissions: '#/components/schemas/AppBlockedByPermissionsType'
          app_link_team: '#/components/schemas/AppLinkTeamType'
          app_link_user: '#/components/schemas/AppLinkUserType'
          app_unlink_team: '#/components/schemas/AppUnlinkTeamType'
          app_unlink_user: '#/components/schemas/AppUnlinkUserType'
          integration_connected: '#/components/schemas/IntegrationConnectedType'
          integration_disconnected: '#/components/schemas/IntegrationDisconnectedType'
          file_add_comment: '#/components/schemas/FileAddCommentType'
          file_change_comment_subscription: '#/components/schemas/FileChangeCommentSubscriptionType'
          file_delete_comment: '#/components/schemas/FileDeleteCommentType'
          file_edit_comment: '#/components/schemas/FileEditCommentType'
          file_like_comment: '#/components/schemas/FileLikeCommentType'
          file_resolve_comment: '#/components/schemas/FileResolveCommentType'
          file_unlike_comment: '#/components/schemas/FileUnlikeCommentType'
          file_unresolve_comment: '#/components/schemas/FileUnresolveCommentType'
          governance_policy_add_folders: '#/components/schemas/GovernancePolicyAddFoldersType'
          governance_policy_add_folder_failed: '#/components/schemas/GovernancePolicyAddFolderFailedType'
          governance_policy_content_disposed: '#/components/schemas/GovernancePolicyContentDisposedType'
          governance_policy_create: '#/components/schemas/GovernancePolicyCreateType'
          governance_policy_delete: '#/components/schemas/GovernancePolicyDeleteType'
          governance_policy_edit_details: '#/components/schemas/GovernancePolicyEditDetailsType'
          governance_policy_edit_duration: '#/components/schemas/GovernancePolicyEditDurationType'
          governance_policy_export_created: '#/components/schemas/GovernancePolicyExportCreatedType'
          governance_policy_export_removed: '#/components/schemas/GovernancePolicyExportRemovedType'
          governance_policy_remove_folders: '#/components/schemas/GovernancePolicyRemoveFoldersType'
          governance_policy_report_created: '#/components/schemas/GovernancePolicyReportCreatedType'
          governance_policy_zip_part_downloaded: '#/components/schemas/GovernancePolicyZipPartDownloadedType'
          legal_holds_activate_a_hold: '#/components/schemas/LegalHoldsActivateAHoldType'
          legal_holds_add_members: '#/components/schemas/LegalHoldsAddMembersType'
          legal_holds_change_hold_details: '#/components/schemas/LegalHoldsChangeHoldDetailsType'
          legal_holds_change_hold_name: '#/components/schemas/LegalHoldsChangeHoldNameType'
          legal_holds_export_a_hold: '#/components/schemas/LegalHoldsExportAHoldType'
          legal_holds_export_cancelled: '#/components/schemas/LegalHoldsExportCancelledType'
          legal_holds_export_downloaded: '#/components/schemas/LegalHoldsExportDownloadedType'
          legal_holds_export_removed: '#/components/schemas/LegalHoldsExportRemovedType'
          legal_holds_release_a_hold: '#/components/schemas/LegalHoldsReleaseAHoldType'
          legal_holds_remove_members: '#/components/schemas/LegalHoldsRemoveMembersType'
          legal_holds_report_a_hold: '#/components/schemas/LegalHoldsReportAHoldType'
          device_change_ip_desktop: '#/components/schemas/DeviceChangeIpDesktopType'
          device_change_ip_mobile: '#/components/schemas/DeviceChangeIpMobileType'
          device_change_ip_web: '#/components/schemas/DeviceChangeIpWebType'
          device_delete_on_unlink_fail: '#/components/schemas/DeviceDeleteOnUnlinkFailType'
          device_delete_on_unlink_success: '#/components/schemas/DeviceDeleteOnUnlinkSuccessType'
          device_link_fail: '#/components/schemas/DeviceLinkFailType'
          device_link_success: '#/components/schemas/DeviceLinkSuccessType'
          device_management_disabled: '#/components/schemas/DeviceManagementDisabledType'
          device_management_enabled: '#/components/schemas/DeviceManagementEnabledType'
          device_sync_backup_status_changed: '#/components/schemas/DeviceSyncBackupStatusChangedType'
          device_unlink: '#/components/schemas/DeviceUnlinkType'
          dropbox_passwords_exported: '#/components/schemas/DropboxPasswordsExportedType'
          dropbox_passwords_new_device_enrolled: '#/components/schemas/DropboxPasswordsNewDeviceEnrolledType'
          emm_refresh_auth_token: '#/components/schemas/EmmRefreshAuthTokenType'
          external_drive_backup_eligibility_status_checked: '#/components/schemas/ExternalDriveBackupEligibilityStatusCheckedType'
          external_drive_backup_status_changed: '#/components/schemas/ExternalDriveBackupStatusChangedType'
          account_capture_change_availability: '#/components/schemas/AccountCaptureChangeAvailabilityType'
          account_capture_migrate_account: '#/components/schemas/AccountCaptureMigrateAccountType'
          account_capture_notification_emails_sent: '#/components/schemas/AccountCaptureNotificationEmailsSentType'
          account_capture_relinquish_account: '#/components/schemas/AccountCaptureRelinquishAccountType'
          disabled_domain_invites: '#/components/schemas/DisabledDomainInvitesType'
          domain_invites_approve_request_to_join_team: '#/components/schemas/DomainInvitesApproveRequestToJoinTeamType'
          domain_invites_decline_request_to_join_team: '#/components/schemas/DomainInvitesDeclineRequestToJoinTeamType'
          domain_invites_email_existing_users: '#/components/schemas/DomainInvitesEmailExistingUsersType'
          domain_invites_request_to_join_team: '#/components/schemas/DomainInvitesRequestToJoinTeamType'
          domain_invites_set_invite_new_user_pref_to_no: '#/components/schemas/DomainInvitesSetInviteNewUserPrefToNoType'
          domain_invites_set_invite_new_user_pref_to_yes: '#/components/schemas/DomainInvitesSetInviteNewUserPrefToYesType'
          domain_verification_add_domain_fail: '#/components/schemas/DomainVerificationAddDomainFailType'
          domain_verification_add_domain_success: '#/components/schemas/DomainVerificationAddDomainSuccessType'
          domain_verification_remove_domain: '#/components/schemas/DomainVerificationRemoveDomainType'
          enabled_domain_invites: '#/components/schemas/EnabledDomainInvitesType'
          team_encryption_key_cancel_key_deletion: '#/components/schemas/TeamEncryptionKeyCancelKeyDeletionType'
          team_encryption_key_create_key: '#/components/schemas/TeamEncryptionKeyCreateKeyType'
          team_encryption_key_delete_key: '#/components/schemas/TeamEncryptionKeyDeleteKeyType'
          team_encryption_key_disable_key: '#/components/schemas/TeamEncryptionKeyDisableKeyType'
          team_encryption_key_enable_key: '#/components/schemas/TeamEncryptionKeyEnableKeyType'
          team_encryption_key_rotate_key: '#/components/schemas/TeamEncryptionKeyRotateKeyType'
          team_encryption_key_schedule_key_deletion: '#/components/schemas/TeamEncryptionKeyScheduleKeyDeletionType'
          apply_naming_convention: '#/components/schemas/ApplyNamingConventionType'
          create_folder: '#/components/schemas/CreateFolderType'
          file_add: '#/components/schemas/FileAddType'
          file_add_from_automation: '#/components/schemas/FileAddFromAutomationType'
          file_copy: '#/components/schemas/FileCopyType'
          file_delete: '#/components/schemas/FileDeleteType'
          file_download: '#/components/schemas/FileDownloadType'
          file_edit: '#/components/schemas/FileEditType'
          file_get_copy_reference: '#/components/schemas/FileGetCopyReferenceType'
          file_locking_lock_status_changed: '#/components/schemas/FileLockingLockStatusChangedType'
          file_move: '#/components/schemas/FileMoveType'
          file_permanently_delete: '#/components/schemas/FilePermanentlyDeleteType'
          file_preview: '#/components/schemas/FilePreviewType'
          file_rename: '#/components/schemas/FileRenameType'
          file_restore: '#/components/schemas/FileRestoreType'
          file_revert: '#/components/schemas/FileRevertType'
          file_rollback_changes: '#/components/schemas/FileRollbackChangesType'
          file_save_copy_reference: '#/components/schemas/FileSaveCopyReferenceType'
          folder_overview_description_changed: '#/components/schemas/FolderOverviewDescriptionChangedType'
          folder_overview_item_pinned: '#/components/schemas/FolderOverviewItemPinnedType'
          folder_overview_item_unpinned: '#/components/schemas/FolderOverviewItemUnpinnedType'
          object_label_added: '#/components/schemas/ObjectLabelAddedType'
          object_label_removed: '#/components/schemas/ObjectLabelRemovedType'
          object_label_updated_value: '#/components/schemas/ObjectLabelUpdatedValueType'
          organize_folder_with_tidy: '#/components/schemas/OrganizeFolderWithTidyType'
          replay_file_delete: '#/components/schemas/ReplayFileDeleteType'
          rewind_folder: '#/components/schemas/RewindFolderType'
          undo_naming_convention: '#/components/schemas/UndoNamingConventionType'
          undo_organize_folder_with_tidy: '#/components/schemas/UndoOrganizeFolderWithTidyType'
          user_tags_added: '#/components/schemas/UserTagsAddedType'
          user_tags_removed: '#/components/schemas/UserTagsRemovedType'
          email_ingest_receive_file: '#/components/schemas/EmailIngestReceiveFileType'
          file_request_change: '#/components/schemas/FileRequestChangeType'
          file_request_close: '#/components/schemas/FileRequestCloseType'
          file_request_create: '#/components/schemas/FileRequestCreateType'
          file_request_delete: '#/components/schemas/FileRequestDeleteType'
          file_request_receive_file: '#/components/schemas/FileRequestReceiveFileType'
          group_add_external_id: '#/components/schemas/GroupAddExternalIdType'
          group_add_member: '#/components/schemas/GroupAddMemberType'
          group_change_external_id: '#/components/schemas/GroupChangeExternalIdType'
          group_change_management_type: '#/components/schemas/GroupChangeManagementTypeType'
          group_change_member_role: '#/components/schemas/GroupChangeMemberRoleType'
          group_create: '#/components/schemas/GroupCreateType'
          group_delete: '#/components/schemas/GroupDeleteType'
          group_description_updated: '#/components/schemas/GroupDescriptionUpdatedType'
          group_join_policy_updated: '#/components/schemas/GroupJoinPolicyUpdatedType'
          group_moved: '#/components/schemas/GroupMovedType'
          group_remove_external_id: '#/components/schemas/GroupRemoveExternalIdType'
          group_remove_member: '#/components/schemas/GroupRemoveMemberType'
          group_rename: '#/components/schemas/GroupRenameType'
          account_lock_or_unlocked: '#/components/schemas/AccountLockOrUnlockedType'
          emm_error: '#/components/schemas/EmmErrorType'
          guest_admin_signed_in_via_trusted_teams: '#/components/schemas/GuestAdminSignedInViaTrustedTeamsType'
          guest_admin_signed_out_via_trusted_teams: '#/components/schemas/GuestAdminSignedOutViaTrustedTeamsType'
          login_fail: '#/components/schemas/LoginFailType'
          login_success: '#/components/schemas/LoginSuccessType'
          logout: '#/components/schemas/LogoutType'
          reseller_support_session_end: '#/components/schemas/ResellerSupportSessionEndType'
          reseller_support_session_start: '#/components/schemas/ResellerSupportSessionStartType'
          sign_in_as_session_end: '#/components/schemas/SignInAsSessionEndType'
          sign_in_as_session_start: '#/components/schemas/SignInAsSessionStartType'
          sso_error: '#/components/schemas/SsoErrorType'
          backup_admin_invitation_sent: '#/components/schemas/BackupAdminInvitationSentType'
          backup_invitation_opened: '#/components/schemas/BackupInvitationOpenedType'
          create_team_invite_link: '#/components/schemas/CreateTeamInviteLinkType'
          delete_team_invite_link: '#/components/schemas/DeleteTeamInviteLinkType'
          member_add_external_id: '#/components/schemas/MemberAddExternalIdType'
          member_add_name: '#/components/schemas/MemberAddNameType'
          member_change_admin_role: '#/components/schemas/MemberChangeAdminRoleType'
          member_change_email: '#/components/schemas/MemberChangeEmailType'
          member_change_external_id: '#/components/schemas/MemberChangeExternalIdType'
          member_change_membership_type: '#/components/schemas/MemberChangeMembershipTypeType'
          member_change_name: '#/components/schemas/MemberChangeNameType'
          member_change_reseller_role: '#/components/schemas/MemberChangeResellerRoleType'
          member_change_status: '#/components/schemas/MemberChangeStatusType'
          member_delete_manual_contacts: '#/components/schemas/MemberDeleteManualContactsType'
          member_delete_profile_photo: '#/components/schemas/MemberDeleteProfilePhotoType'
          member_permanently_delete_account_contents: '#/components/schemas/MemberPermanentlyDeleteAccountContentsType'
          member_remove_external_id: '#/components/schemas/MemberRemoveExternalIdType'
          member_set_profile_photo: '#/components/schemas/MemberSetProfilePhotoType'
          member_space_limits_add_custom_quota: '#/components/schemas/MemberSpaceLimitsAddCustomQuotaType'
          member_space_limits_change_custom_quota: '#/components/schemas/MemberSpaceLimitsChangeCustomQuotaType'
          member_space_limits_change_status: '#/components/schemas/MemberSpaceLimitsChangeStatusType'
          member_space_limits_remove_custom_quota: '#/components/schemas/MemberSpaceLimitsRemoveCustomQuotaType'
          member_suggest: '#/components/schemas/MemberSuggestType'
          member_transfer_account_contents: '#/components/schemas/MemberTransferAccountContentsType'
          pending_secondary_email_added: '#/components/schemas/PendingSecondaryEmailAddedType'
          secondary_email_deleted: '#/components/schemas/SecondaryEmailDeletedType'
          secondary_email_verified: '#/components/schemas/SecondaryEmailVerifiedType'
          secondary_mails_policy_changed: '#/components/schemas/SecondaryMailsPolicyChangedType'
          binder_add_page: '#/components/schemas/BinderAddPageType'
          binder_add_section: '#/components/schemas/BinderAddSectionType'
          binder_remove_page: '#/components/schemas/BinderRemovePageType'
          binder_remove_section: '#/components/schemas/BinderRemoveSectionType'
          binder_rename_page: '#/components/schemas/BinderRenamePageType'
          binder_rename_section: '#/components/schemas/BinderRenameSectionType'
          binder_reorder_page: '#/components/schemas/BinderReorderPageType'
          binder_reorder_section: '#/components/schemas/BinderReorderSectionType'
          paper_content_add_member: '#/components/schemas/PaperContentAddMemberType'
          paper_content_add_to_folder: '#/components/schemas/PaperContentAddToFolderType'
          paper_content_archive: '#/components/schemas/PaperContentArchiveType'
          paper_content_create: '#/components/schemas/PaperContentCreateType'
          paper_content_permanently_delete: '#/components/schemas/PaperContentPermanentlyDeleteType'
          paper_content_remove_from_folder: '#/components/schemas/PaperContentRemoveFromFolderType'
          paper_content_remove_member: '#/components/schemas/PaperContentRemoveMemberType'
          paper_content_rename: '#/components/schemas/PaperContentRenameType'
          paper_content_restore: '#/components/schemas/PaperContentRestoreType'
          paper_doc_add_comment: '#/components/schemas/PaperDocAddCommentType'
          paper_doc_change_member_role: '#/components/schemas/PaperDocChangeMemberRoleType'
          paper_doc_change_sharing_policy: '#/components/schemas/PaperDocChangeSharingPolicyType'
          paper_doc_change_subscription: '#/components/schemas/PaperDocChangeSubscriptionType'
          paper_doc_deleted: '#/components/schemas/PaperDocDeletedType'
          paper_doc_delete_comment: '#/components/schemas/PaperDocDeleteCommentType'
          paper_doc_download: '#/components/schemas/PaperDocDownloadType'
          paper_doc_edit: '#/components/schemas/PaperDocEditType'
          paper_doc_edit_comment: '#/components/schemas/PaperDocEditCommentType'
          paper_doc_followed: '#/components/schemas/PaperDocFollowedType'
          paper_doc_mention: '#/components/schemas/PaperDocMentionType'
          paper_doc_ownership_changed: '#/components/schemas/PaperDocOwnershipChangedType'
          paper_doc_request_access: '#/components/schemas/PaperDocRequestAccessType'
          paper_doc_resolve_comment: '#/components/schemas/PaperDocResolveCommentType'
          paper_doc_revert: '#/components/schemas/PaperDocRevertType'
          paper_doc_slack_share: '#/components/schemas/PaperDocSlackShareType'
          paper_doc_team_invite: '#/components/schemas/PaperDocTeamInviteType'
          paper_doc_trashed: '#/components/schemas/PaperDocTrashedType'
          paper_doc_unresolve_comment: '#/components/schemas/PaperDocUnresolveCommentType'
          paper_doc_untrashed: '#/components/schemas/PaperDocUntrashedType'
          paper_doc_view: '#/components/schemas/PaperDocViewType'
          paper_external_view_allow: '#/components/schemas/PaperExternalViewAllowType'
          paper_external_view_default_team: '#/components/schemas/PaperExternalViewDefaultTeamType'
          paper_external_view_forbid: '#/components/schemas/PaperExternalViewForbidType'
          paper_folder_change_subscription: '#/components/schemas/PaperFolderChangeSubscriptionType'
          paper_folder_deleted: '#/components/schemas/PaperFolderDeletedType'
          paper_folder_followed: '#/components/schemas/PaperFolderFollowedType'
          paper_folder_team_invite: '#/components/schemas/PaperFolderTeamInviteType'
          paper_published_link_change_permission: '#/components/schemas/PaperPublishedLinkChangePermissionType'
          paper_published_link_create: '#/components/schemas/PaperPublishedLinkCreateType'
          paper_published_link_disabled: '#/components/schemas/PaperPublishedLinkDisabledType'
          paper_published_link_view: '#/components/schemas/PaperPublishedLinkViewType'
          password_change: '#/components/schemas/PasswordChangeType'
          password_reset: '#/components/schemas/PasswordResetType'
          password_reset_all: '#/components/schemas/PasswordResetAllType'
          classification_create_report: '#/components/schemas/ClassificationCreateReportType'
          classification_create_report_fail: '#/components/schemas/ClassificationCreateReportFailType'
          emm_create_exceptions_report: '#/components/schemas/EmmCreateExceptionsReportType'
          emm_create_usage_report: '#/components/schemas/EmmCreateUsageReportType'
          export_members_report: '#/components/schemas/ExportMembersReportType'
          export_members_report_fail: '#/components/schemas/ExportMembersReportFailType'
          external_sharing_create_report: '#/components/schemas/ExternalSharingCreateReportType'
          external_sharing_report_failed: '#/components/schemas/ExternalSharingReportFailedType'
          no_expiration_link_gen_create_report: '#/components/schemas/NoExpirationLinkGenCreateReportType'
          no_expiration_link_gen_report_failed: '#/components/schemas/NoExpirationLinkGenReportFailedType'
          no_password_link_gen_create_report: '#/components/schemas/NoPasswordLinkGenCreateReportType'
          no_password_link_gen_report_failed: '#/components/schemas/NoPasswordLinkGenReportFailedType'
          no_password_link_view_create_report: '#/components/schemas/NoPasswordLinkViewCreateReportType'
          no_password_link_view_report_failed: '#/components/schemas/NoPasswordLinkViewReportFailedType'
          outdated_link_view_create_report: '#/components/schemas/OutdatedLinkViewCreateReportType'
          outdated_link_view_report_failed: '#/components/schemas/OutdatedLinkViewReportFailedType'
          paper_admin_export_start: '#/components/schemas/PaperAdminExportStartType'
          ransomware_alert_create_report: '#/components/schemas/RansomwareAlertCreateReportType'
          ransomware_alert_create_report_failed: '#/components/schemas/RansomwareAlertCreateReportFailedType'
          smart_sync_create_admin_privilege_report: '#/components/schemas/SmartSyncCreateAdminPrivilegeReportType'
          team_activity_create_report: '#/components/schemas/TeamActivityCreateReportType'
          team_activity_create_report_fail: '#/components/schemas/TeamActivityCreateReportFailType'
          collection_share: '#/components/schemas/CollectionShareType'
          file_transfers_file_add: '#/components/schemas/FileTransfersFileAddType'
          file_transfers_transfer_delete: '#/components/schemas/FileTransfersTransferDeleteType'
          file_transfers_transfer_download: '#/components/schemas/FileTransfersTransferDownloadType'
          file_transfers_transfer_send: '#/components/schemas/FileTransfersTransferSendType'
          file_transfers_transfer_view: '#/components/schemas/FileTransfersTransferViewType'
          note_acl_invite_only: '#/components/schemas/NoteAclInviteOnlyType'
          note_acl_link: '#/components/schemas/NoteAclLinkType'
          note_acl_team_link: '#/components/schemas/NoteAclTeamLinkType'
          note_shared: '#/components/schemas/NoteSharedType'
          note_share_receive: '#/components/schemas/NoteShareReceiveType'
          open_note_shared: '#/components/schemas/OpenNoteSharedType'
          replay_file_shared_link_created: '#/components/schemas/ReplayFileSharedLinkCreatedType'
          replay_file_shared_link_modified: '#/components/schemas/ReplayFileSharedLinkModifiedType'
          replay_project_team_add: '#/components/schemas/ReplayProjectTeamAddType'
          replay_project_team_delete: '#/components/schemas/ReplayProjectTeamDeleteType'
          sf_add_group: '#/components/schemas/SfAddGroupType'
          sf_allow_non_members_to_view_shared_links: '#/components/schemas/SfAllowNonMembersToViewSharedLinksType'
          sf_external_invite_warn: '#/components/schemas/SfExternalInviteWarnType'
          sf_fb_invite: '#/components/schemas/SfFbInviteType'
          sf_fb_invite_change_role: '#/components/schemas/SfFbInviteChangeRoleType'
          sf_fb_uninvite: '#/components/schemas/SfFbUninviteType'
          sf_invite_group: '#/components/schemas/SfInviteGroupType'
          sf_team_grant_access: '#/components/schemas/SfTeamGrantAccessType'
          sf_team_invite: '#/components/schemas/SfTeamInviteType'
          sf_team_invite_change_role: '#/components/schemas/SfTeamInviteChangeRoleType'
          sf_team_join: '#/components/schemas/SfTeamJoinType'
          sf_team_join_from_oob_link: '#/components/schemas/SfTeamJoinFromOobLinkType'
          sf_team_uninvite: '#/components/schemas/SfTeamUninviteType'
          shared_content_add_invitees: '#/components/schemas/SharedContentAddInviteesType'
          shared_content_add_link_expiry: '#/components/schemas/SharedContentAddLinkExpiryType'
          shared_content_add_link_password: '#/components/schemas/SharedContentAddLinkPasswordType'
          shared_content_add_member: '#/components/schemas/SharedContentAddMemberType'
          shared_content_change_downloads_policy: '#/components/schemas/SharedContentChangeDownloadsPolicyType'
          shared_content_change_invitee_role: '#/components/schemas/SharedContentChangeInviteeRoleType'
          shared_content_change_link_audience: '#/components/schemas/SharedContentChangeLinkAudienceType'
          shared_content_change_link_expiry: '#/components/schemas/SharedContentChangeLinkExpiryType'
          shared_content_change_link_password: '#/components/schemas/SharedContentChangeLinkPasswordType'
          shared_content_change_member_role: '#/components/schemas/SharedContentChangeMemberRoleType'
          shared_content_change_viewer_info_policy: '#/components/schemas/SharedContentChangeViewerInfoPolicyType'
          shared_content_claim_invitation: '#/components/schemas/SharedContentClaimInvitationType'
          shared_content_copy: '#/components/schemas/SharedContentCopyType'
          shared_content_download: '#/components/schemas/SharedContentDownloadType'
          shared_content_relinquish_membership: '#/components/schemas/SharedContentRelinquishMembershipType'
          shared_content_remove_invitees: '#/components/schemas/SharedContentRemoveInviteesType'
          shared_content_remove_link_expiry: '#/components/schemas/SharedContentRemoveLinkExpiryType'
          shared_content_remove_link_password: '#/components/schemas/SharedContentRemoveLinkPasswordType'
          shared_content_remove_member: '#/components/schemas/SharedContentRemoveMemberType'
          shared_content_request_access: '#/components/schemas/SharedContentRequestAccessType'
          shared_content_restore_invitees: '#/components/schemas/SharedContentRestoreInviteesType'
          shared_content_restore_member: '#/components/schemas/SharedContentRestoreMemberType'
          shared_content_unshare: '#/components/schemas/SharedContentUnshareType'
          shared_content_view: '#/components/schemas/SharedContentViewType'
          shared_folder_change_link_policy: '#/components/schemas/SharedFolderChangeLinkPolicyType'
          shared_folder_change_members_inheritance_policy: '#/components/schemas/SharedFolderChangeMembersInheritancePolicyType'
          shared_folder_change_members_management_policy: '#/components/schemas/SharedFolderChangeMembersManagementPolicyType'
          shared_folder_change_members_policy: '#/components/schemas/SharedFolderChangeMembersPolicyType'
          shared_folder_create: '#/components/schemas/SharedFolderCreateType'
          shared_folder_decline_invitation: '#/components/schemas/SharedFolderDeclineInvitationType'
          shared_folder_mount: '#/components/schemas/SharedFolderMountType'
          shared_folder_nest: '#/components/schemas/SharedFolderNestType'
          shared_folder_transfer_ownership: '#/components/schemas/SharedFolderTransferOwnershipType'
          shared_folder_unmount: '#/components/schemas/SharedFolderUnmountType'
          shared_link_add_expiry: '#/components/schemas/SharedLinkAddExpiryType'
          shared_link_change_expiry: '#/components/schemas/SharedLinkChangeExpiryType'
          shared_link_change_visibility: '#/components/schemas/SharedLinkChangeVisibilityType'
          shared_link_copy: '#/components/schemas/SharedLinkCopyType'
          shared_link_create: '#/components/schemas/SharedLinkCreateType'
          shared_link_disable: '#/components/schemas/SharedLinkDisableType'
          shared_link_download: '#/components/schemas/SharedLinkDownloadType'
          shared_link_remove_expiry: '#/components/schemas/SharedLinkRemoveExpiryType'
          shared_link_settings_add_expiration: '#/components/schemas/SharedLinkSettingsAddExpirationType'
          shared_link_settings_add_password: '#/components/schemas/SharedLinkSettingsAddPasswordType'
          shared_link_settings_allow_download_disabled: '#/components/schemas/SharedLinkSettingsAllowDownloadDisabledType'
          shared_link_settings_allow_download_enabled: '#/components/schemas/SharedLinkSettingsAllowDownloadEnabledType'
          shared_link_settings_change_audience: '#/components/schemas/SharedLinkSettingsChangeAudienceType'
          shared_link_settings_change_expiration: '#/components/schemas/SharedLinkSettingsChangeExpirationType'
          shared_link_settings_change_password: '#/components/schemas/SharedLinkSettingsChangePasswordType'
          shared_link_settings_remove_expiration: '#/components/schemas/SharedLinkSettingsRemoveExpirationType'
          shared_link_settings_remove_password: '#/components/schemas/SharedLinkSettingsRemovePasswordType'
          shared_link_share: '#/components/schemas/SharedLinkShareType'
          shared_link_view: '#/components/schemas/SharedLinkViewType'
          shared_note_opened: '#/components/schemas/SharedNoteOpenedType'
          shmodel_disable_downloads: '#/components/schemas/ShmodelDisableDownloadsType'
          shmodel_enable_downloads: '#/components/schemas/ShmodelEnableDownloadsType'
          shmodel_group_share: '#/components/schemas/ShmodelGroupShareType'
          showcase_access_granted: '#/components/schemas/ShowcaseAccessGrantedType'
          showcase_add_member: '#/components/schemas/ShowcaseAddMemberType'
          showcase_archived: '#/components/schemas/ShowcaseArchivedType'
          showcase_created: '#/components/schemas/ShowcaseCreatedType'
          showcase_delete_comment: '#/components/schemas/ShowcaseDeleteCommentType'
          showcase_edited: '#/components/schemas/ShowcaseEditedType'
          showcase_edit_comment: '#/components/schemas/ShowcaseEditCommentType'
          showcase_file_added: '#/components/schemas/ShowcaseFileAddedType'
          showcase_file_download: '#/components/schemas/ShowcaseFileDownloadType'
          showcase_file_removed: '#/components/schemas/ShowcaseFileRemovedType'
          showcase_file_view: '#/components/schemas/ShowcaseFileViewType'
          showcase_permanently_deleted: '#/components/schemas/ShowcasePermanentlyDeletedType'
          showcase_post_comment: '#/components/schemas/ShowcasePostCommentType'
          showcase_remove_member: '#/components/schemas/ShowcaseRemoveMemberType'
          showcase_renamed: '#/components/schemas/ShowcaseRenamedType'
          showcase_request_access: '#/components/schemas/ShowcaseRequestAccessType'
          showcase_resolve_comment: '#/components/schemas/ShowcaseResolveCommentType'
          showcase_restored: '#/components/schemas/ShowcaseRestoredType'
          showcase_trashed: '#/components/schemas/ShowcaseTrashedType'
          showcase_trashed_deprecated: '#/components/schemas/ShowcaseTrashedDeprecatedType'
          showcase_unresolve_comment: '#/components/schemas/ShowcaseUnresolveCommentType'
          showcase_untrashed: '#/components/schemas/ShowcaseUntrashedType'
          showcase_untrashed_deprecated: '#/components/schemas/ShowcaseUntrashedDeprecatedType'
          showcase_view: '#/components/schemas/ShowcaseViewType'
          sso_add_cert: '#/components/schemas/SsoAddCertType'
          sso_add_login_url: '#/components/schemas/SsoAddLoginUrlType'
          sso_add_logout_url: '#/components/schemas/SsoAddLogoutUrlType'
          sso_change_cert: '#/components/schemas/SsoChangeCertType'
          sso_change_login_url: '#/components/schemas/SsoChangeLoginUrlType'
          sso_change_logout_url: '#/components/schemas/SsoChangeLogoutUrlType'
          sso_change_saml_identity_mode: '#/components/schemas/SsoChangeSamlIdentityModeType'
          sso_remove_cert: '#/components/schemas/SsoRemoveCertType'
          sso_remove_login_url: '#/components/schemas/SsoRemoveLoginUrlType'
          sso_remove_logout_url: '#/components/schemas/SsoRemoveLogoutUrlType'
          team_folder_change_status: '#/components/schemas/TeamFolderChangeStatusType'
          team_folder_create: '#/components/schemas/TeamFolderCreateType'
          team_folder_downgrade: '#/components/schemas/TeamFolderDowngradeType'
          team_folder_permanently_delete: '#/components/schemas/TeamFolderPermanentlyDeleteType'
          team_folder_rename: '#/components/schemas/TeamFolderRenameType'
          team_selective_sync_settings_changed: '#/components/schemas/TeamSelectiveSyncSettingsChangedType'
          account_capture_change_policy: '#/components/schemas/AccountCaptureChangePolicyType'
          admin_email_reminders_changed: '#/components/schemas/AdminEmailRemindersChangedType'
          allow_download_disabled: '#/components/schemas/AllowDownloadDisabledType'
          allow_download_enabled: '#/components/schemas/AllowDownloadEnabledType'
          app_permissions_changed: '#/components/schemas/AppPermissionsChangedType'
          camera_uploads_policy_changed: '#/components/schemas/CameraUploadsPolicyChangedType'
          capture_transcript_policy_changed: '#/components/schemas/CaptureTranscriptPolicyChangedType'
          classification_change_policy: '#/components/schemas/ClassificationChangePolicyType'
          computer_backup_policy_changed: '#/components/schemas/ComputerBackupPolicyChangedType'
          content_administration_policy_changed: '#/components/schemas/ContentAdministrationPolicyChangedType'
          data_placement_restriction_change_policy: '#/components/schemas/DataPlacementRestrictionChangePolicyType'
          data_placement_restriction_satisfy_policy: '#/components/schemas/DataPlacementRestrictionSatisfyPolicyType'
          device_approvals_add_exception: '#/components/schemas/DeviceApprovalsAddExceptionType'
          device_approvals_change_desktop_policy: '#/components/schemas/DeviceApprovalsChangeDesktopPolicyType'
          device_approvals_change_mobile_policy: '#/components/schemas/DeviceApprovalsChangeMobilePolicyType'
          device_approvals_change_overage_action: '#/components/schemas/DeviceApprovalsChangeOverageActionType'
          device_approvals_change_unlink_action: '#/components/schemas/DeviceApprovalsChangeUnlinkActionType'
          device_approvals_remove_exception: '#/components/schemas/DeviceApprovalsRemoveExceptionType'
          directory_restrictions_add_members: '#/components/schemas/DirectoryRestrictionsAddMembersType'
          directory_restrictions_remove_members: '#/components/schemas/DirectoryRestrictionsRemoveMembersType'
          dropbox_passwords_policy_changed: '#/components/schemas/DropboxPasswordsPolicyChangedType'
          email_ingest_policy_changed: '#/components/schemas/EmailIngestPolicyChangedType'
          emm_add_exception: '#/components/schemas/EmmAddExceptionType'
          emm_change_policy: '#/components/schemas/EmmChangePolicyType'
          emm_remove_exception: '#/components/schemas/EmmRemoveExceptionType'
          extended_version_history_change_policy: '#/components/schemas/ExtendedVersionHistoryChangePolicyType'
          external_drive_backup_policy_changed: '#/components/schemas/ExternalDriveBackupPolicyChangedType'
          file_comments_change_policy: '#/components/schemas/FileCommentsChangePolicyType'
          file_locking_policy_changed: '#/components/schemas/FileLockingPolicyChangedType'
          file_provider_migration_policy_changed: '#/components/schemas/FileProviderMigrationPolicyChangedType'
          file_requests_change_policy: '#/components/schemas/FileRequestsChangePolicyType'
          file_requests_emails_enabled: '#/components/schemas/FileRequestsEmailsEnabledType'
          file_requests_emails_restricted_to_team_only: '#/components/schemas/FileRequestsEmailsRestrictedToTeamOnlyType'
          file_transfers_policy_changed: '#/components/schemas/FileTransfersPolicyChangedType'
          folder_link_restriction_policy_changed: '#/components/schemas/FolderLinkRestrictionPolicyChangedType'
          google_sso_change_policy: '#/components/schemas/GoogleSsoChangePolicyType'
          group_user_management_change_policy: '#/components/schemas/GroupUserManagementChangePolicyType'
          integration_policy_changed: '#/components/schemas/IntegrationPolicyChangedType'
          invite_acceptance_email_policy_changed: '#/components/schemas/InviteAcceptanceEmailPolicyChangedType'
          member_requests_change_policy: '#/components/schemas/MemberRequestsChangePolicyType'
          member_send_invite_policy_changed: '#/components/schemas/MemberSendInvitePolicyChangedType'
          member_space_limits_add_exception: '#/components/schemas/MemberSpaceLimitsAddExceptionType'
          member_space_limits_change_caps_type_policy: '#/components/schemas/MemberSpaceLimitsChangeCapsTypePolicyType'
          member_space_limits_change_policy: '#/components/schemas/MemberSpaceLimitsChangePolicyType'
          member_space_limits_remove_exception: '#/components/schemas/MemberSpaceLimitsRemoveExceptionType'
          member_suggestions_change_policy: '#/components/schemas/MemberSuggestionsChangePolicyType'
          microsoft_office_addin_change_policy: '#/components/schemas/MicrosoftOfficeAddinChangePolicyType'
          network_control_change_policy: '#/components/schemas/NetworkControlChangePolicyType'
          paper_change_deployment_policy: '#/components/schemas/PaperChangeDeploymentPolicyType'
          paper_change_member_link_policy: '#/components/schemas/PaperChangeMemberLinkPolicyType'
          paper_change_member_policy: '#/components/schemas/PaperChangeMemberPolicyType'
          paper_change_policy: '#/components/schemas/PaperChangePolicyType'
          paper_default_folder_policy_changed: '#/components/schemas/PaperDefaultFolderPolicyChangedType'
          paper_desktop_policy_changed: '#/components/schemas/PaperDesktopPolicyChangedType'
          paper_enabled_users_group_addition: '#/components/schemas/PaperEnabledUsersGroupAdditionType'
          paper_enabled_users_group_removal: '#/components/schemas/PaperEnabledUsersGroupRemovalType'
          password_strength_requirements_change_policy: '#/components/schemas/PasswordStrengthRequirementsChangePolicyType'
          permanent_delete_change_policy: '#/components/schemas/PermanentDeleteChangePolicyType'
          reseller_support_change_policy: '#/components/schemas/ResellerSupportChangePolicyType'
          rewind_policy_changed: '#/components/schemas/RewindPolicyChangedType'
          send_for_signature_policy_changed: '#/components/schemas/SendForSignaturePolicyChangedType'
          sharing_change_folder_join_policy: '#/components/schemas/SharingChangeFolderJoinPolicyType'
          sharing_change_link_allow_change_expiration_policy: '#/components/schemas/SharingChangeLinkAllowChangeExpirationPolicyType'
          sharing_change_link_default_expiration_policy: '#/components/schemas/SharingChangeLinkDefaultExpirationPolicyType'
          sharing_change_link_enforce_password_policy: '#/components/schemas/SharingChangeLinkEnforcePasswordPolicyType'
          sharing_change_link_policy: '#/components/schemas/SharingChangeLinkPolicyType'
          sharing_change_member_policy: '#/components/schemas/SharingChangeMemberPolicyType'
          showcase_change_download_policy: '#/components/schemas/ShowcaseChangeDownloadPolicyType'
          showcase_change_enabled_policy: '#/components/schemas/ShowcaseChangeEnabledPolicyType'
          showcase_change_external_sharing_policy: '#/components/schemas/ShowcaseChangeExternalSharingPolicyType'
          smarter_smart_sync_policy_changed: '#/components/schemas/SmarterSmartSyncPolicyChangedType'
          smart_sync_change_policy: '#/components/schemas/SmartSyncChangePolicyType'
          smart_sync_not_opt_out: '#/components/schemas/SmartSyncNotOptOutType'
          smart_sync_opt_out: '#/components/schemas/SmartSyncOptOutType'
          sso_change_policy: '#/components/schemas/SsoChangePolicyType'
          team_branding_policy_changed: '#/components/schemas/TeamBrandingPolicyChangedType'
          team_extensions_policy_changed: '#/components/schemas/TeamExtensionsPolicyChangedType'
          team_selective_sync_policy_changed: '#/components/schemas/TeamSelectiveSyncPolicyChangedType'
          team_sharing_whitelist_subjects_changed: '#/components/schemas/TeamSharingWhitelistSubjectsChangedType'
          tfa_add_exception: '#/components/schemas/TfaAddExceptionType'
          tfa_change_policy: '#/components/schemas/TfaChangePolicyType'
          tfa_remove_exception: '#/components/schemas/TfaRemoveExceptionType'
          two_account_change_policy: '#/components/schemas/TwoAccountChangePolicyType'
          viewer_info_policy_changed: '#/components/schemas/ViewerInfoPolicyChangedType'
          watermarking_policy_changed: '#/components/schemas/WatermarkingPolicyChangedType'
          web_sessions_change_active_session_limit: '#/components/schemas/WebSessionsChangeActiveSessionLimitType'
          web_sessions_change_fixed_length_policy: '#/components/schemas/WebSessionsChangeFixedLengthPolicyType'
          web_sessions_change_idle_length_policy: '#/components/schemas/WebSessionsChangeIdleLengthPolicyType'
          data_residency_migration_request_successful: '#/components/schemas/DataResidencyMigrationRequestSuccessfulType'
          data_residency_migration_request_unsuccessful: '#/components/schemas/DataResidencyMigrationRequestUnsuccessfulType'
          team_merge_from: '#/components/schemas/TeamMergeFromType'
          team_merge_to: '#/components/schemas/TeamMergeToType'
          team_profile_add_background: '#/components/schemas/TeamProfileAddBackgroundType'
          team_profile_add_logo: '#/components/schemas/TeamProfileAddLogoType'
          team_profile_change_background: '#/components/schemas/TeamProfileChangeBackgroundType'
          team_profile_change_default_language: '#/components/schemas/TeamProfileChangeDefaultLanguageType'
          team_profile_change_logo: '#/components/schemas/TeamProfileChangeLogoType'
          team_profile_change_name: '#/components/schemas/TeamProfileChangeNameType'
          team_profile_remove_background: '#/components/schemas/TeamProfileRemoveBackgroundType'
          team_profile_remove_logo: '#/components/schemas/TeamProfileRemoveLogoType'
          tfa_add_backup_phone: '#/components/schemas/TfaAddBackupPhoneType'
          tfa_add_security_key: '#/components/schemas/TfaAddSecurityKeyType'
          tfa_change_backup_phone: '#/components/schemas/TfaChangeBackupPhoneType'
          tfa_change_status: '#/components/schemas/TfaChangeStatusType'
          tfa_remove_backup_phone: '#/components/schemas/TfaRemoveBackupPhoneType'
          tfa_remove_security_key: '#/components/schemas/TfaRemoveSecurityKeyType'
          tfa_reset: '#/components/schemas/TfaResetType'
          changed_enterprise_admin_role: '#/components/schemas/ChangedEnterpriseAdminRoleType'
          changed_enterprise_connected_team_status: '#/components/schemas/ChangedEnterpriseConnectedTeamStatusType'
          ended_enterprise_admin_session: '#/components/schemas/EndedEnterpriseAdminSessionType'
          ended_enterprise_admin_session_deprecated: '#/components/schemas/EndedEnterpriseAdminSessionDeprecatedType'
          enterprise_settings_locking: '#/components/schemas/EnterpriseSettingsLockingType'
          guest_admin_change_status: '#/components/schemas/GuestAdminChangeStatusType'
          started_enterprise_admin_session: '#/components/schemas/StartedEnterpriseAdminSessionType'
          team_merge_request_accepted: '#/components/schemas/TeamMergeRequestAcceptedType'
          team_merge_request_accepted_shown_to_primary_team: '#/components/schemas/TeamMergeRequestAcceptedShownToPrimaryTeamType'
          team_merge_request_accepted_shown_to_secondary_team: '#/components/schemas/TeamMergeRequestAcceptedShownToSecondaryTeamType'
          team_merge_request_auto_canceled: '#/components/schemas/TeamMergeRequestAutoCanceledType'
          team_merge_request_canceled: '#/components/schemas/TeamMergeRequestCanceledType'
          team_merge_request_canceled_shown_to_primary_team: '#/components/schemas/TeamMergeRequestCanceledShownToPrimaryTeamType'
          team_merge_request_canceled_shown_to_secondary_team: '#/components/schemas/TeamMergeRequestCanceledShownToSecondaryTeamType'
          team_merge_request_expired: '#/components/schemas/TeamMergeRequestExpiredType'
          team_merge_request_expired_shown_to_primary_team: '#/components/schemas/TeamMergeRequestExpiredShownToPrimaryTeamType'
          team_merge_request_expired_shown_to_secondary_team: '#/components/schemas/TeamMergeRequestExpiredShownToSecondaryTeamType'
          team_merge_request_rejected_shown_to_primary_team: '#/components/schemas/TeamMergeRequestRejectedShownToPrimaryTeamType'
          team_merge_request_rejected_shown_to_secondary_team: '#/components/schemas/TeamMergeRequestRejectedShownToSecondaryTeamType'
          team_merge_request_reminder: '#/components/schemas/TeamMergeRequestReminderType'
          team_merge_request_reminder_shown_to_primary_team: '#/components/schemas/TeamMergeRequestReminderShownToPrimaryTeamType'
          team_merge_request_reminder_shown_to_secondary_team: '#/components/schemas/TeamMergeRequestReminderShownToSecondaryTeamType'
          team_merge_request_revoked: '#/components/schemas/TeamMergeRequestRevokedType'
          team_merge_request_sent_shown_to_primary_team: '#/components/schemas/TeamMergeRequestSentShownToPrimaryTeamType'
          team_merge_request_sent_shown_to_secondary_team: '#/components/schemas/TeamMergeRequestSentShownToSecondaryTeamType'
    EventTypeArg:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - admin_alerting_alert_state_changed
          - admin_alerting_changed_alert_config
          - admin_alerting_triggered_alert
          - ransomware_restore_process_completed
          - ransomware_restore_process_started
          - app_blocked_by_permissions
          - app_link_team
          - app_link_user
          - app_unlink_team
          - app_unlink_user
          - integration_connected
          - integration_disconnected
          - file_add_comment
          - file_change_comment_subscription
          - file_delete_comment
          - file_edit_comment
          - file_like_comment
          - file_resolve_comment
          - file_unlike_comment
          - file_unresolve_comment
          - governance_policy_add_folders
          - governance_policy_add_folder_failed
          - governance_policy_content_disposed
          - governance_policy_create
          - governance_policy_delete
          - governance_policy_edit_details
          - governance_policy_edit_duration
          - governance_policy_export_created
          - governance_policy_export_removed
          - governance_policy_remove_folders
          - governance_policy_report_created
          - governance_policy_zip_part_downloaded
          - legal_holds_activate_a_hold
          - legal_holds_add_members
          - legal_holds_change_hold_details
          - legal_holds_change_hold_name
          - legal_holds_export_a_hold
          - legal_holds_export_cancelled
          - legal_holds_export_downloaded
          - legal_holds_export_removed
          - legal_holds_release_a_hold
          - legal_holds_remove_members
          - legal_holds_report_a_hold
          - device_change_ip_desktop
          - device_change_ip_mobile
          - device_change_ip_web
          - device_delete_on_unlink_fail
          - device_delete_on_unlink_success
          - device_link_fail
          - device_link_success
          - device_management_disabled
          - device_management_enabled
          - device_sync_backup_status_changed
          - device_unlink
          - dropbox_passwords_exported
          - dropbox_passwords_new_device_enrolled
          - emm_refresh_auth_token
          - external_drive_backup_eligibility_status_checked
          - external_drive_backup_status_changed
          - account_capture_change_availability
          - account_capture_migrate_account
          - account_capture_notification_emails_sent
          - account_capture_relinquish_account
          - disabled_domain_invites
          - domain_invites_approve_request_to_join_team
          - domain_invites_decline_request_to_join_team
          - domain_invites_email_existing_users
          - domain_invites_request_to_join_team
          - domain_invites_set_invite_new_user_pref_to_no
          - domain_invites_set_invite_new_user_pref_to_yes
          - domain_verification_add_domain_fail
          - domain_verification_add_domain_success
          - domain_verification_remove_domain
          - enabled_domain_invites
          - team_encryption_key_cancel_key_deletion
          - team_encryption_key_create_key
          - team_encryption_key_delete_key
          - team_encryption_key_disable_key
          - team_encryption_key_enable_key
          - team_encryption_key_rotate_key
          - team_encryption_key_schedule_key_deletion
          - apply_naming_convention
          - create_folder
          - file_add
          - file_add_from_automation
          - file_copy
          - file_delete
          - file_download
          - file_edit
          - file_get_copy_reference
          - file_locking_lock_status_changed
          - file_move
          - file_permanently_delete
          - file_preview
          - file_rename
          - file_restore
          - file_revert
          - file_rollback_changes
          - file_save_copy_reference
          - folder_overview_description_changed
          - folder_overview_item_pinned
          - folder_overview_item_unpinned
          - object_label_added
          - object_label_removed
          - object_label_updated_value
          - organize_folder_with_tidy
          - replay_file_delete
          - rewind_folder
          - undo_naming_convention
          - undo_organize_folder_with_tidy
          - user_tags_added
          - user_tags_removed
          - email_ingest_receive_file
          - file_request_change
          - file_request_close
          - file_request_create
          - file_request_delete
          - file_request_receive_file
          - group_add_external_id
          - group_add_member
          - group_change_external_id
          - group_change_management_type
          - group_change_member_role
          - group_create
          - group_delete
          - group_description_updated
          - group_join_policy_updated
          - group_moved
          - group_remove_external_id
          - group_remove_member
          - group_rename
          - account_lock_or_unlocked
          - emm_error
          - guest_admin_signed_in_via_trusted_teams
          - guest_admin_signed_out_via_trusted_teams
          - login_fail
          - login_success
          - logout
          - reseller_support_session_end
          - reseller_support_session_start
          - sign_in_as_session_end
          - sign_in_as_session_start
          - sso_error
          - backup_admin_invitation_sent
          - backup_invitation_opened
          - create_team_invite_link
          - delete_team_invite_link
          - member_add_external_id
          - member_add_name
          - member_change_admin_role
          - member_change_email
          - member_change_external_id
          - member_change_membership_type
          - member_change_name
          - member_change_reseller_role
          - member_change_status
          - member_delete_manual_contacts
          - member_delete_profile_photo
          - member_permanently_delete_account_contents
          - member_remove_external_id
          - member_set_profile_photo
          - member_space_limits_add_custom_quota
          - member_space_limits_change_custom_quota
          - member_space_limits_change_status
          - member_space_limits_remove_custom_quota
          - member_suggest
          - member_transfer_account_contents
          - pending_secondary_email_added
          - secondary_email_deleted
          - secondary_email_verified
          - secondary_mails_policy_changed
          - binder_add_page
          - binder_add_section
          - binder_remove_page
          - binder_remove_section
          - binder_rename_page
          - binder_rename_section
          - binder_reorder_page
          - binder_reorder_section
          - paper_content_add_member
          - paper_content_add_to_folder
          - paper_content_archive
          - paper_content_create
          - paper_content_permanently_delete
          - paper_content_remove_from_folder
          - paper_content_remove_member
          - paper_content_rename
          - paper_content_restore
          - paper_doc_add_comment
          - paper_doc_change_member_role
          - paper_doc_change_sharing_policy
          - paper_doc_change_subscription
          - paper_doc_deleted
          - paper_doc_delete_comment
          - paper_doc_download
          - paper_doc_edit
          - paper_doc_edit_comment
          - paper_doc_followed
          - paper_doc_mention
          - paper_doc_ownership_changed
          - paper_doc_request_access
          - paper_doc_resolve_comment
          - paper_doc_revert
          - paper_doc_slack_share
          - paper_doc_team_invite
          - paper_doc_trashed
          - paper_doc_unresolve_comment
          - paper_doc_untrashed
          - paper_doc_view
          - paper_external_view_allow
          - paper_external_view_default_team
          - paper_external_view_forbid
          - paper_folder_change_subscription
          - paper_folder_deleted
          - paper_folder_followed
          - paper_folder_team_invite
          - paper_published_link_change_permission
          - paper_published_link_create
          - paper_published_link_disabled
          - paper_published_link_view
          - password_change
          - password_reset
          - password_reset_all
          - classification_create_report
          - classification_create_report_fail
          - emm_create_exceptions_report
          - emm_create_usage_report
          - export_members_report
          - export_members_report_fail
          - external_sharing_create_report
          - external_sharing_report_failed
          - no_expiration_link_gen_create_report
          - no_expiration_link_gen_report_failed
          - no_password_link_gen_create_report
          - no_password_link_gen_report_failed
          - no_password_link_view_create_report
          - no_password_link_view_report_failed
          - outdated_link_view_create_report
          - outdated_link_view_report_failed
          - paper_admin_export_start
          - ransomware_alert_create_report
          - ransomware_alert_create_report_failed
          - smart_sync_create_admin_privilege_report
          - team_activity_create_report
          - team_activity_create_report_fail
          - collection_share
          - file_transfers_file_add
          - file_transfers_transfer_delete
          - file_transfers_transfer_download
          - file_transfers_transfer_send
          - file_transfers_transfer_view
          - note_acl_invite_only
          - note_acl_link
          - note_acl_team_link
          - note_shared
          - note_share_receive
          - open_note_shared
          - replay_file_shared_link_created
          - replay_file_shared_link_modified
          - replay_project_team_add
          - replay_project_team_delete
          - sf_add_group
          - sf_allow_non_members_to_view_shared_links
          - sf_external_invite_warn
          - sf_fb_invite
          - sf_fb_invite_change_role
          - sf_fb_uninvite
          - sf_invite_group
          - sf_team_grant_access
          - sf_team_invite
          - sf_team_invite_change_role
          - sf_team_join
          - sf_team_join_from_oob_link
          - sf_team_uninvite
          - shared_content_add_invitees
          - shared_content_add_link_expiry
          - shared_content_add_link_password
          - shared_content_add_member
          - shared_content_change_downloads_policy
          - shared_content_change_invitee_role
          - shared_content_change_link_audience
          - shared_content_change_link_expiry
          - shared_content_change_link_password
          - shared_content_change_member_role
          - shared_content_change_viewer_info_policy
          - shared_content_claim_invitation
          - shared_content_copy
          - shared_content_download
          - shared_content_relinquish_membership
          - shared_content_remove_invitees
          - shared_content_remove_link_expiry
          - shared_content_remove_link_password
          - shared_content_remove_member
          - shared_content_request_access
          - shared_content_restore_invitees
          - shared_content_restore_member
          - shared_content_unshare
          - shared_content_view
          - shared_folder_change_link_policy
          - shared_folder_change_members_inheritance_policy
          - shared_folder_change_members_management_policy
          - shared_folder_change_members_policy
          - shared_folder_create
          - shared_folder_decline_invitation
          - shared_folder_mount
          - shared_folder_nest
          - shared_folder_transfer_ownership
          - shared_folder_unmount
          - shared_link_add_expiry
          - shared_link_change_expiry
          - shared_link_change_visibility
          - shared_link_copy
          - shared_link_create
          - shared_link_disable
          - shared_link_download
          - shared_link_remove_expiry
          - shared_link_settings_add_expiration
          - shared_link_settings_add_password
          - shared_link_settings_allow_download_disabled
          - shared_link_settings_allow_download_enabled
          - shared_link_settings_change_audience
          - shared_link_settings_change_expiration
          - shared_link_settings_change_password
          - shared_link_settings_remove_expiration
          - shared_link_settings_remove_password
          - shared_link_share
          - shared_link_view
          - shared_note_opened
          - shmodel_disable_downloads
          - shmodel_enable_downloads
          - shmodel_group_share
          - showcase_access_granted
          - showcase_add_member
          - showcase_archived
          - showcase_created
          - showcase_delete_comment
          - showcase_edited
          - showcase_edit_comment
          - showcase_file_added
          - showcase_file_download
          - showcase_file_removed
          - showcase_file_view
          - showcase_permanently_deleted
          - showcase_post_comment
          - showcase_remove_member
          - showcase_renamed
          - showcase_request_access
          - showcase_resolve_comment
          - showcase_restored
          - showcase_trashed
          - showcase_trashed_deprecated
          - showcase_unresolve_comment
          - showcase_untrashed
          - showcase_untrashed_deprecated
          - showcase_view
          - sso_add_cert
          - sso_add_login_url
          - sso_add_logout_url
          - sso_change_cert
          - sso_change_login_url
          - sso_change_logout_url
          - sso_change_saml_identity_mode
          - sso_remove_cert
          - sso_remove_login_url
          - sso_remove_logout_url
          - team_folder_change_status
          - team_folder_create
          - team_folder_downgrade
          - team_folder_permanently_delete
          - team_folder_rename
          - team_selective_sync_settings_changed
          - account_capture_change_policy
          - admin_email_reminders_changed
          - allow_download_disabled
          - allow_download_enabled
          - app_permissions_changed
          - camera_uploads_policy_changed
          - capture_transcript_policy_changed
          - classification_change_policy
          - computer_backup_policy_changed
          - content_administration_policy_changed
          - data_placement_restriction_change_policy
          - data_placement_restriction_satisfy_policy
          - device_approvals_add_exception
          - device_approvals_change_desktop_policy
          - device_approvals_change_mobile_policy
          - device_approvals_change_overage_action
          - device_approvals_change_unlink_action
          - device_approvals_remove_exception
          - directory_restrictions_add_members
          - directory_restrictions_remove_members
          - dropbox_passwords_policy_changed
          - email_ingest_policy_changed
          - emm_add_exception
          - emm_change_policy
          - emm_remove_exception
          - extended_version_history_change_policy
          - external_drive_backup_policy_changed
          - file_comments_change_policy
          - file_locking_policy_changed
          - file_provider_migration_policy_changed
          - file_requests_change_policy
          - file_requests_emails_enabled
          - file_requests_emails_restricted_to_team_only
          - file_transfers_policy_changed
          - folder_link_restriction_policy_changed
          - google_sso_change_policy
          - group_user_management_change_policy
          - integration_policy_changed
          - invite_acceptance_email_policy_changed
          - member_requests_change_policy
          - member_send_invite_policy_changed
          - member_space_limits_add_exception
          - member_space_limits_change_caps_type_policy
          - member_space_limits_change_policy
          - member_space_limits_remove_exception
          - member_suggestions_change_policy
          - microsoft_office_addin_change_policy
          - network_control_change_policy
          - paper_change_deployment_policy
          - paper_change_member_link_policy
          - paper_change_member_policy
          - paper_change_policy
          - paper_default_folder_policy_changed
          - paper_desktop_policy_changed
          - paper_enabled_users_group_addition
          - paper_enabled_users_group_removal
          - password_strength_requirements_change_policy
          - permanent_delete_change_policy
          - reseller_support_change_policy
          - rewind_policy_changed
          - send_for_signature_policy_changed
          - sharing_change_folder_join_policy
          - sharing_change_link_allow_change_expiration_policy
          - sharing_change_link_default_expiration_policy
          - sharing_change_link_enforce_password_policy
          - sharing_change_link_policy
          - sharing_change_member_policy
          - showcase_change_download_policy
          - showcase_change_enabled_policy
          - showcase_change_external_sharing_policy
          - smarter_smart_sync_policy_changed
          - smart_sync_change_policy
          - smart_sync_not_opt_out
          - smart_sync_opt_out
          - sso_change_policy
          - team_branding_policy_changed
          - team_extensions_policy_changed
          - team_selective_sync_policy_changed
          - team_sharing_whitelist_subjects_changed
          - tfa_add_exception
          - tfa_change_policy
          - tfa_remove_exception
          - two_account_change_policy
          - viewer_info_policy_changed
          - watermarking_policy_changed
          - web_sessions_change_active_session_limit
          - web_sessions_change_fixed_length_policy
          - web_sessions_change_idle_length_policy
          - data_residency_migration_request_successful
          - data_residency_migration_request_unsuccessful
          - team_merge_from
          - team_merge_to
          - team_profile_add_background
          - team_profile_add_logo
          - team_profile_change_background
          - team_profile_change_default_language
          - team_profile_change_logo
          - team_profile_change_name
          - team_profile_remove_background
          - team_profile_remove_logo
          - tfa_add_backup_phone
          - tfa_add_security_key
          - tfa_change_backup_phone
          - tfa_change_status
          - tfa_remove_backup_phone
          - tfa_remove_security_key
          - tfa_reset
          - changed_enterprise_admin_role
          - changed_enterprise_connected_team_status
          - ended_enterprise_admin_session
          - ended_enterprise_admin_session_deprecated
          - enterprise_settings_locking
          - guest_admin_change_status
          - started_enterprise_admin_session
          - team_merge_request_accepted
          - team_merge_request_accepted_shown_to_primary_team
          - team_merge_request_accepted_shown_to_secondary_team
          - team_merge_request_auto_canceled
          - team_merge_request_canceled
          - team_merge_request_canceled_shown_to_primary_team
          - team_merge_request_canceled_shown_to_secondary_team
          - team_merge_request_expired
          - team_merge_request_expired_shown_to_primary_team
          - team_merge_request_expired_shown_to_secondary_team
          - team_merge_request_rejected_shown_to_primary_team
          - team_merge_request_rejected_shown_to_secondary_team
          - team_merge_request_reminder
          - team_merge_request_reminder_shown_to_primary_team
          - team_merge_request_reminder_shown_to_secondary_team
          - team_merge_request_revoked
          - team_merge_request_sent_shown_to_primary_team
          - team_merge_request_sent_shown_to_secondary_team
      required:
      - .tag
      description: The type of the event.
    AppId:
      type: string
    IpAddress:
      type: string
    RequestId:
      type: string
    FilePath:
      type: string
    UserInfoArgs:
      type: object
      properties: {}
      description: No Parameters
    UserInfoResult:
      type: object
      properties:
        family_name:
          type: string
          nullable: true
        given_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        email_verified:
          type: boolean
          nullable: true
        iss:
          type: string
        sub:
          type: string
      required:
      - iss
      - sub
    OpenIdError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - incorrect_openid_scopes
      required:
      - .tag
    UserInfoError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - openid_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          openid_error: '#/components/schemas/OpenIdError'
    GetSharedLinkMetadataArg:
      type: object
      properties:
        url:
          type: string
        path:
          $ref: '#/components/schemas/Path'
        link_password:
          type: string
          nullable: true
      required:
      - url
    LinkPermissions:
      type: object
      properties:
        resolved_visibility:
          $ref: '#/components/schemas/ResolvedVisibility'
        requested_visibility:
          $ref: '#/components/schemas/RequestedVisibility'
        can_revoke:
          type: boolean
        revoke_failure_reason:
          $ref: '#/components/schemas/SharedLinkAccessFailureReason'
        effective_audience:
          $ref: '#/components/schemas/LinkAudience'
        link_access_level:
          $ref: '#/components/schemas/LinkAccessLevel'
        visibility_policies:
          type: array
          items:
            $ref: '#/components/schemas/VisibilityPolicy'
        can_set_expiry:
          type: boolean
        can_remove_expiry:
          type: boolean
        allow_download:
          type: boolean
        can_allow_download:
          type: boolean
        can_disallow_download:
          type: boolean
        allow_comments:
          type: boolean
        team_restricts_comments:
          type: boolean
        audience_options:
          type: array
          items:
            $ref: '#/components/schemas/LinkAudienceOption'
          nullable: true
        can_set_password:
          type: boolean
          nullable: true
        can_remove_password:
          type: boolean
          nullable: true
        require_password:
          type: boolean
          nullable: true
        can_use_extended_sharing_controls:
          type: boolean
          nullable: true
      required:
      - can_revoke
      - visibility_policies
      - can_set_expiry
      - can_remove_expiry
      - allow_download
      - can_allow_download
      - can_disallow_download
      - allow_comments
      - team_restricts_comments
    TeamMemberInfo:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/TeamMemberProfile'
        role:
          $ref: '#/components/schemas/AdminTier'
      required:
      - profile
      - role
      description: Information about a team member.
    SharedLinkMetadata:
      type: object
      properties:
        url:
          type: string
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
        expires:
          $ref: '#/components/schemas/DropboxTimestamp'
        path_lower:
          type: string
          nullable: true
        link_permissions:
          $ref: '#/components/schemas/LinkPermissions'
        team_member_info:
          $ref: '#/components/schemas/TeamMemberInfo'
        content_owner_team_info:
          $ref: '#/components/schemas/TeamInfo'
      required:
      - url
      - name
      - link_permissions
      description: The metadata of a shared link.
    FileLinkMetadata:
      allOf:
      - $ref: '#/components/schemas/SharedLinkMetadata'
      - type: object
        properties:
          client_modified:
            $ref: '#/components/schemas/DropboxTimestamp'
          server_modified:
            $ref: '#/components/schemas/DropboxTimestamp'
          rev:
            $ref: '#/components/schemas/Rev'
          size:
            type: integer
            format: int64
        required:
        - client_modified
        - server_modified
        - rev
        - size
        description: The metadata of a file shared link.
      description: The metadata of a file shared link.
    FolderLinkMetadata:
      allOf:
      - $ref: '#/components/schemas/SharedLinkMetadata'
      - type: object
        properties: {}
        description: The metadata of a folder shared link.
      description: The metadata of a folder shared link.
    ListSharedLinksArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        cursor:
          type: string
          nullable: true
        direct_only:
          type: boolean
          nullable: true
    ListSharedLinksResult:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/SharedLinkMetadata'
        has_more:
          type: boolean
        cursor:
          type: string
          nullable: true
      required:
      - links
      - has_more
    SharedLinkSettings:
      type: object
      properties:
        require_password:
          type: boolean
          nullable: true
        link_password:
          type: string
          nullable: true
        expires:
          $ref: '#/components/schemas/DropboxTimestamp'
        audience:
          $ref: '#/components/schemas/LinkAudience'
        access:
          $ref: '#/components/schemas/RequestedLinkAccessLevel'
        requested_visibility:
          $ref: '#/components/schemas/RequestedVisibility'
        allow_download:
          type: boolean
          nullable: true
    ModifySharedLinkSettingsArgs:
      type: object
      properties:
        url:
          type: string
        settings:
          $ref: '#/components/schemas/SharedLinkSettings'
        remove_expiration:
          type: boolean
      required:
      - url
      - settings
      - remove_expiration
    CreateSharedLinkWithSettingsArg:
      type: object
      properties:
        path:
          $ref: '#/components/schemas/ReadPath'
        settings:
          $ref: '#/components/schemas/SharedLinkSettings'
      required:
      - path
    RevokeSharedLinkArg:
      type: object
      properties:
        url:
          type: string
      required:
      - url
    LinkMetadata:
      type: object
      properties:
        url:
          type: string
        visibility:
          $ref: '#/components/schemas/Visibility'
        expires:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - url
      - visibility
      description: |-
        Metadata for a shared link. This can be either a
            :type:`PathLinkMetadata` or :type:`CollectionLinkMetadata`.
    PathLinkMetadata:
      allOf:
      - $ref: '#/components/schemas/LinkMetadata'
      - type: object
        properties:
          path:
            type: string
        required:
        - path
        description: Metadata for a path-based shared link.
      description: Metadata for a path-based shared link.
    CollectionLinkMetadata:
      allOf:
      - $ref: '#/components/schemas/LinkMetadata'
      - type: object
        properties: {}
        description: Metadata for a collection-based shared link.
      description: Metadata for a collection-based shared link.
    GetSharedLinksArg:
      type: object
      properties:
        path:
          type: string
          nullable: true
    GetSharedLinksResult:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkMetadata'
      required:
      - links
    CreateSharedLinkArg:
      type: object
      properties:
        path:
          type: string
        short_url:
          type: boolean
        pending_upload:
          $ref: '#/components/schemas/PendingUploadMode'
      required:
      - path
      - short_url
    LinkAudienceOption:
      type: object
      properties:
        audience:
          $ref: '#/components/schemas/LinkAudience'
        allowed:
          type: boolean
        disallowed_reason:
          $ref: '#/components/schemas/LinkAudienceDisallowedReason'
      required:
      - audience
      - allowed
    VisibilityPolicy:
      type: object
      properties:
        policy:
          $ref: '#/components/schemas/RequestedVisibility'
        resolved_policy:
          $ref: '#/components/schemas/AlphaResolvedVisibility'
        allowed:
          type: boolean
        disallowed_reason:
          $ref: '#/components/schemas/VisibilityPolicyDisallowedReason'
      required:
      - policy
      - resolved_policy
      - allowed
    RequestedVisibility:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - public
          - team_only
          - password
      required:
      - .tag
      description: |-
        The access permission that can be requested by the caller for the shared link.
            Note that the final resolved visibility of the shared link takes into account other aspects,
            such as team and shared folder settings.
            Check the :type:`ResolvedVisibility` for more info on the possible resolved visibility values
            of shared links.
    ResolvedVisibility:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team_and_password
          - shared_folder_only
          - no_one
          - only_you
      required:
      - .tag
      description: |-
        The actual access permissions values of shared links after taking into account user
            preferences and the team and shared folder settings.
            Check the :type:`RequestedVisibility` for more info on the possible visibility values
            that can be set by the shared link's owner.
    SharedLinkAccessFailureReason:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - login_required
          - email_verify_required
          - password_required
          - team_only
          - owner_only
      required:
      - .tag
    SharedLinkError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - shared_link_not_found
          - shared_link_access_denied
          - unsupported_link_type
      required:
      - .tag
    ListSharedLinksError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - reset
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    LinkAccessLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - viewer
          - editor
      required:
      - .tag
    RequestedLinkAccessLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - viewer
          - editor
          - max
          - default
      required:
      - .tag
    SharedLinkSettingsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_settings
          - not_authorized
      required:
      - .tag
    ModifySharedLinkSettingsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - settings_error
          - email_not_verified
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          settings_error: '#/components/schemas/SharedLinkSettingsError'
    SharedLinkAlreadyExistsMetadata:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - metadata
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          metadata: '#/components/schemas/SharedLinkMetadata'
    CreateSharedLinkWithSettingsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
          - email_not_verified
          - shared_link_already_exists
          - settings_error
          - access_denied
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
          shared_link_already_exists: '#/components/schemas/SharedLinkAlreadyExistsMetadata?'
          settings_error: '#/components/schemas/SharedLinkSettingsError'
    RevokeSharedLinkError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - shared_link_malformed
      required:
      - .tag
    GetSharedLinkFileError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - shared_link_is_directory
      required:
      - .tag
    Visibility:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - public
          - team_only
          - password
          - team_and_password
          - shared_folder_only
      required:
      - .tag
      description: |-
        Who can access a shared link.
            The most open visibility is :field:`public`.
            The default depends on many aspects, such as team and user
            preferences and shared folder settings.
    GetSharedLinksError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/MalformedPathError'
    PendingUploadMode:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - file
          - folder
      required:
      - .tag
      description: Flag to indicate pending upload default (for linking to not-yet-existing paths).
    CreateSharedLinkError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - path
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          path: '#/components/schemas/LookupError'
    VisibilityPolicyDisallowedReason:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - delete_and_recreate
          - restricted_by_shared_folder
          - restricted_by_team
          - user_not_on_team
          - user_account_type
          - permission_denied
      required:
      - .tag
    LinkAudienceDisallowedReason:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: check documentation for VisibilityPolicyDisallowedReason.
    AlphaResolvedVisibility:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: check documentation for ResolvedVisibility.
    GetSharedLinkFileArg:
      allOf:
      - $ref: '#/components/schemas/GetSharedLinkMetadataArg'
    TeamInfo:
      allOf:
      - $ref: '#/components/schemas/Team'
    PollArg:
      type: object
      properties:
        async_job_id:
          $ref: '#/components/schemas/AsyncJobId'
      required:
      - async_job_id
      description: Arguments for methods that poll the status of an asynchronous job.
    LaunchResultBase:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - async_job_id
      required:
      - .tag
      description: |-
        Result returned by methods that launch an asynchronous job.

            A method who may either launch an asynchronous job, or complete the request
            synchronously, can use this union by extending it, and adding a 'complete' field
            with the type of the synchronous response.

            See :type:`LaunchEmptyResult` for an example.
      discriminator:
        propertyName: .tag
        mapping:
          async_job_id: '#/components/schemas/AsyncJobId'
    LaunchEmptyResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by methods that may either launch an asynchronous job or complete synchronously.
            Upon synchronous completion of the job, no additional information is returned.
    PollResultBase:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - in_progress
      required:
      - .tag
      description: |-
        Result returned by methods that poll for the status of an asynchronous job.
            Unions that extend this union should add a 'complete' field with a type of
            the information returned upon job completion.

            See :type:`PollEmptyResult` for an example.
    PollEmptyResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      description: |-
        Result returned by methods that poll for the status of an asynchronous job.
            Upon completion of the job, no additional information is returned.
    PollError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_async_job_id
          - internal_error
      required:
      - .tag
      description: Error returned by methods for polling the status of asynchronous job.
    AsyncJobId:
      type: string
      minLength: 1
    AccountType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - basic
          - pro
          - business
      required:
      - .tag
      description: What type of account this user has.
    AccountId:
      type: string
      minLength: 40
      maxLength: 40
    PlatformType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - web
          - desktop
          - mobile_ios
          - mobile_android
          - api
          - unknown
          - mobile
      required:
      - .tag
      description: Possible platforms on which a user may view content.
    SharingAllowlistAddArgs:
      type: object
      properties:
        domains:
          type: array
          items:
            type: string
          nullable: true
        emails:
          type: array
          items:
            type: string
          nullable: true
      description: |-
        Structure representing Approve List entries. Domain and emails are supported.
            At least one entry of any supported type is required.
    SharingAllowlistAddResponse:
      type: object
      properties: {}
      description: This struct is empty. The comment here is intentionally emitted to avoid indentation issues with Stone.
    SharingAllowlistListArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - limit
    SharingAllowlistListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    SharingAllowlistListError:
      type: object
      properties: {}
      description: This struct is empty. The comment here is intentionally emitted to avoid indentation issues with Stone.
    SharingAllowlistListResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: string
        emails:
          type: array
          items:
            type: string
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - domains
      - emails
      - cursor
      - has_more
    SharingAllowlistRemoveArgs:
      type: object
      properties:
        domains:
          type: array
          items:
            type: string
          nullable: true
        emails:
          type: array
          items:
            type: string
          nullable: true
    SharingAllowlistRemoveResponse:
      type: object
      properties: {}
      description: This struct is empty. The comment here is intentionally emitted to avoid indentation issues with Stone.
    SharingAllowlistAddError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - malformed_entry
          - no_entries_provided
          - too_many_entries_provided
          - team_limit_reached
          - unknown_error
          - entries_already_exist
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          malformed_entry: '#/components/schemas/String'
          entries_already_exist: '#/components/schemas/String'
    SharingAllowlistListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    SharingAllowlistRemoveError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - malformed_entry
          - entries_do_not_exist
          - no_entries_provided
          - too_many_entries_provided
          - unknown_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          malformed_entry: '#/components/schemas/String'
          entries_do_not_exist: '#/components/schemas/String'
    SetProfilePhotoArg:
      type: object
      properties:
        photo:
          $ref: '#/components/schemas/PhotoSourceArg'
      required:
      - photo
    SetProfilePhotoResult:
      type: object
      properties:
        profile_photo_url:
          type: string
      required:
      - profile_photo_url
    PhotoSourceArg:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - base64_data
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          base64_data: '#/components/schemas/String'
    SetProfilePhotoError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - file_type_error
          - file_size_error
          - dimension_error
          - thumbnail_error
          - transient_error
      required:
      - .tag
    TeamMemberRole:
      type: object
      properties:
        role_id:
          $ref: '#/components/schemas/TeamMemberRoleId'
        name:
          type: string
          maxLength: 32
        description:
          type: string
          maxLength: 256
      required:
      - role_id
      - name
      - description
      description: A role which can be attached to a team member. This replaces AdminTier; each AdminTier corresponds to a new TeamMemberRole with a matching name.
    TeamMemberProfile:
      allOf:
      - $ref: '#/components/schemas/MemberProfile'
      - type: object
        properties:
          groups:
            type: array
            items:
              $ref: '#/components/schemas/GroupId'
          member_folder_id:
            $ref: '#/components/schemas/NamespaceId'
        required:
        - groups
        - member_folder_id
        description: Profile of a user as a member of a team.
      description: Profile of a user as a member of a team.
    MembersListArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
        include_removed:
          type: boolean
      required:
      - limit
      - include_removed
    TeamMemberInfoV2:
      type: object
      properties:
        profile:
          $ref: '#/components/schemas/TeamMemberProfile'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberRole'
          nullable: true
      required:
      - profile
      description: Information about a team member.
    TeamMemberInfoV2Result:
      type: object
      properties:
        member_info:
          $ref: '#/components/schemas/TeamMemberInfoV2'
      required:
      - member_info
      description: Information about a team member, after the change, like at :route:`members/set_profile:2`.
    MembersListV2Result:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberInfoV2'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - members
      - cursor
      - has_more
    MembersListResult:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberInfo'
        cursor:
          type: string
        has_more:
          type: boolean
      required:
      - members
      - cursor
      - has_more
    MembersListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    MembersGetInfoV2Arg:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/UserSelectorArg'
      required:
      - members
    MembersGetInfoArgs:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/UserSelectorArg'
      required:
      - members
    MembersGetInfoV2Result:
      type: object
      properties:
        members_info:
          type: array
          items:
            $ref: '#/components/schemas/MembersGetInfoItemV2'
      required:
      - members_info
    MemberAddArgBase:
      type: object
      properties:
        member_email:
          $ref: '#/components/schemas/EmailAddress'
        member_given_name:
          $ref: '#/components/schemas/OptionalNamePart'
        member_surname:
          $ref: '#/components/schemas/OptionalNamePart'
        member_external_id:
          $ref: '#/components/schemas/MemberExternalId'
        member_persistent_id:
          type: string
          nullable: true
        send_welcome_email:
          type: boolean
        is_directory_restricted:
          type: boolean
          nullable: true
      required:
      - member_email
      - send_welcome_email
    MemberAddArg:
      allOf:
      - $ref: '#/components/schemas/MemberAddArgBase'
      - type: object
        properties:
          role:
            $ref: '#/components/schemas/AdminTier'
        required:
        - role
    MemberAddV2Arg:
      allOf:
      - $ref: '#/components/schemas/MemberAddArgBase'
      - type: object
        properties:
          role_ids:
            type: array
            items:
              $ref: '#/components/schemas/TeamMemberRoleId'
            nullable: true
    MembersAddArgBase:
      type: object
      properties:
        force_async:
          type: boolean
      required:
      - force_async
    MembersAddV2Arg:
      allOf:
      - $ref: '#/components/schemas/MembersAddArgBase'
      - type: object
        properties:
          new_members:
            type: array
            items:
              $ref: '#/components/schemas/MemberAddV2Arg'
        required:
        - new_members
    MembersAddArg:
      allOf:
      - $ref: '#/components/schemas/MembersAddArgBase'
      - type: object
        properties:
          new_members:
            type: array
            items:
              $ref: '#/components/schemas/MemberAddArg'
        required:
        - new_members
    MembersSetProfileArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        new_email:
          $ref: '#/components/schemas/EmailAddress'
        new_external_id:
          $ref: '#/components/schemas/MemberExternalId'
        new_given_name:
          $ref: '#/components/schemas/OptionalNamePart'
        new_surname:
          $ref: '#/components/schemas/OptionalNamePart'
        new_persistent_id:
          type: string
          nullable: true
        new_is_directory_restricted:
          type: boolean
          nullable: true
      required:
      - user
      description: |-
        Exactly one of team_member_id, email, or external_id must be provided to identify the user account.

            At least one of new_email, new_external_id, new_given_name, and/or new_surname must be provided.
    MembersSetProfilePhotoArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        photo:
          $ref: '#/components/schemas/PhotoSourceArg'
      required:
      - user
      - photo
    MembersDeleteProfilePhotoArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
      required:
      - user
    MembersGetAvailableTeamMemberRolesResult:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberRole'
      required:
      - roles
      description: Available TeamMemberRole for the connected team. To be used with :route:`members/set_admin_permissions:2`.
    MembersSetPermissions2Arg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        new_roles:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberRoleId'
          nullable: true
      required:
      - user
      description: Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
    MembersSetPermissions2Result:
      type: object
      properties:
        team_member_id:
          $ref: '#/components/schemas/TeamMemberId'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberRole'
          nullable: true
      required:
      - team_member_id
    MembersSetPermissionsArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        new_role:
          $ref: '#/components/schemas/AdminTier'
      required:
      - user
      - new_role
      description: Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
    MembersSetPermissionsResult:
      type: object
      properties:
        team_member_id:
          $ref: '#/components/schemas/TeamMemberId'
        role:
          $ref: '#/components/schemas/AdminTier'
      required:
      - team_member_id
      - role
    MembersDeactivateBaseArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
      required:
      - user
      description: Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
    MembersDeactivateArg:
      allOf:
      - $ref: '#/components/schemas/MembersDeactivateBaseArg'
      - type: object
        properties:
          wipe_data:
            type: boolean
        required:
        - wipe_data
    MembersRemoveArg:
      allOf:
      - $ref: '#/components/schemas/MembersDeactivateArg'
      - type: object
        properties:
          transfer_dest_id:
            $ref: '#/components/schemas/UserSelectorArg'
          transfer_admin_id:
            $ref: '#/components/schemas/UserSelectorArg'
          keep_account:
            type: boolean
          retain_team_shares:
            type: boolean
        required:
        - keep_account
        - retain_team_shares
    MembersUnsuspendArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
      required:
      - user
      description: Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
    MembersRecoverArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
      required:
      - user
      description: Exactly one of team_member_id, email, or external_id must be provided to identify the user account.
    MembersDataTransferArg:
      allOf:
      - $ref: '#/components/schemas/MembersDeactivateBaseArg'
      - type: object
        properties:
          transfer_dest_id:
            $ref: '#/components/schemas/UserSelectorArg'
          transfer_admin_id:
            $ref: '#/components/schemas/UserSelectorArg'
        required:
        - transfer_dest_id
        - transfer_admin_id
    AdminTier:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team_admin
          - user_management_admin
          - support_admin
          - member_only
      required:
      - .tag
      description: Describes which team-related admin permissions a user has.
    MemberSelectorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_not_in_team
      required:
      - .tag
    MembersListError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    MembersListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    MembersGetInfoItemBase:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - id_not_found
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          id_not_found: '#/components/schemas/String'
    MembersGetInfoItemV2:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member_info
      required:
      - .tag
      description: |-
        Describes a result obtained for a single user whose id was specified in the
            parameter of :route:`members/get_info:2`.
      discriminator:
        propertyName: .tag
        mapping:
          member_info: '#/components/schemas/TeamMemberInfoV2'
    MembersGetInfoItem:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - member_info
      required:
      - .tag
      description: |-
        Describes a result obtained for a single user whose id was specified in the
            parameter of :route:`members/get_info`.
      discriminator:
        propertyName: .tag
        mapping:
          member_info: '#/components/schemas/TeamMemberInfo'
    MembersGetInfoError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    MemberAddResultBase:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team_license_limit
          - free_team_member_limit_reached
          - user_already_on_team
          - user_on_another_team
          - user_already_paired
          - user_migration_failed
          - duplicate_external_member_id
          - duplicate_member_persistent_id
          - persistent_id_disabled
          - user_creation_failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          team_license_limit: '#/components/schemas/EmailAddress'
          free_team_member_limit_reached: '#/components/schemas/EmailAddress'
          user_already_on_team: '#/components/schemas/EmailAddress'
          user_on_another_team: '#/components/schemas/EmailAddress'
          user_already_paired: '#/components/schemas/EmailAddress'
          user_migration_failed: '#/components/schemas/EmailAddress'
          duplicate_external_member_id: '#/components/schemas/EmailAddress'
          duplicate_member_persistent_id: '#/components/schemas/EmailAddress'
          persistent_id_disabled: '#/components/schemas/EmailAddress'
          user_creation_failed: '#/components/schemas/EmailAddress'
    MemberAddV2Result:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
      required:
      - .tag
      description: |-
        Describes the result of attempting to add a single user to the team.
            'success' is the only value indicating that a user was indeed added to the team -
            the other values explain the type of failure that occurred, and include the email
            of the user for which the operation has failed.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/TeamMemberInfoV2'
    MemberAddResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
      required:
      - .tag
      description: |-
        Describes the result of attempting to add a single user to the team.
            'success' is the only value indicating that a user was indeed added to the team -
            the other values explain the type of failure that occurred, and include the email
            of the user for which the operation has failed.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/TeamMemberInfo'
    MembersAddLaunchV2Result:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/List(MemberAddV2Result)'
    MembersAddLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/List(MemberAddResult)'
    MembersAddJobStatusV2Result:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/List(MemberAddV2Result)'
          failed: '#/components/schemas/String'
    MembersAddJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/List(MemberAddResult)'
          failed: '#/components/schemas/String'
    MembersSetProfileError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - external_id_and_new_external_id_unsafe
          - no_new_data_specified
          - email_reserved_for_other_user
          - external_id_used_by_other_user
          - set_profile_disallowed
          - param_cannot_be_empty
          - persistent_id_disabled
          - persistent_id_used_by_other_user
          - directory_restricted_off
      required:
      - .tag
    MembersSetProfilePhotoError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - set_profile_disallowed
          - photo_error
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          photo_error: '#/components/schemas/SetProfilePhotoError'
    MembersDeleteProfilePhotoError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - set_profile_disallowed
      required:
      - .tag
    MembersSetPermissions2Error:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - last_admin
          - user_not_in_team
          - cannot_set_permissions
          - role_not_found
      required:
      - .tag
    MembersSetPermissionsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - last_admin
          - user_not_in_team
          - cannot_set_permissions
          - team_license_limit
      required:
      - .tag
    MembersSendWelcomeError:
      type: object
      properties:
        .tag:
          type: string
          enum: []
      required:
      - .tag
      description: ''
    MembersDeactivateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_not_in_team
      required:
      - .tag
    MembersTransferFilesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - removed_and_transfer_dest_should_differ
          - removed_and_transfer_admin_should_differ
          - transfer_dest_user_not_found
          - transfer_dest_user_not_in_team
          - transfer_admin_user_not_in_team
          - transfer_admin_user_not_found
          - unspecified_transfer_admin_id
          - transfer_admin_is_not_admin
          - recipient_not_verified
      required:
      - .tag
    MembersRemoveError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - remove_last_admin
          - cannot_keep_account_and_transfer
          - cannot_keep_account_and_delete_data
          - email_address_too_long_to_be_disabled
          - cannot_keep_invited_user_account
          - cannot_retain_shares_when_data_wiped
          - cannot_retain_shares_when_no_account_kept
          - cannot_retain_shares_when_team_external_sharing_off
          - cannot_keep_account
          - cannot_keep_account_under_legal_hold
          - cannot_keep_account_required_to_sign_tos
      required:
      - .tag
    MembersSuspendError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - suspend_inactive_user
          - suspend_last_admin
          - team_license_limit
      required:
      - .tag
    MembersUnsuspendError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unsuspend_non_suspended_member
          - team_license_limit
      required:
      - .tag
    MembersRecoverError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_unrecoverable
          - user_not_in_team
          - team_license_limit
      required:
      - .tag
    MembersTransferFormerMembersFilesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_data_is_being_transferred
          - user_not_removed
          - user_data_cannot_be_transferred
          - user_data_already_transferred
      required:
      - .tag
    MembersGetInfoResult:
      type: array
      items:
        $ref: '#/components/schemas/MembersGetInfoItem'
    TeamMemberRoleId:
      type: string
      maxLength: 128
    SecondaryEmail:
      allOf:
      - $ref: '#/components/schemas/SecondaryEmail'
    MembersInfo:
      type: object
      properties:
        team_member_ids:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberId'
        permanently_deleted_users:
          type: integer
          format: int64
      required:
      - team_member_ids
      - permanently_deleted_users
    LegalHoldPolicy:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegalHoldId'
        name:
          $ref: '#/components/schemas/LegalHoldPolicyName'
        description:
          $ref: '#/components/schemas/LegalHoldPolicyDescription'
        activation_time:
          $ref: '#/components/schemas/DropboxTimestamp'
        members:
          $ref: '#/components/schemas/MembersInfo'
        status:
          $ref: '#/components/schemas/LegalHoldStatus'
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - id
      - name
      - members
      - status
      - start_date
    LegalHoldsPolicyCreateArg:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LegalHoldPolicyName'
        description:
          $ref: '#/components/schemas/LegalHoldPolicyDescription'
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberId'
        start_date:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_date:
          $ref: '#/components/schemas/DropboxTimestamp'
      required:
      - name
      - members
    LegalHoldsGetPolicyArg:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegalHoldId'
      required:
      - id
    LegalHoldsListPoliciesArg:
      type: object
      properties:
        include_released:
          type: boolean
      required:
      - include_released
    LegalHoldsListPoliciesResult:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/LegalHoldPolicy'
      required:
      - policies
    LegalHoldsListHeldRevisionsArg:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegalHoldId'
      required:
      - id
    LegalHoldHeldRevisionMetadata:
      type: object
      properties:
        new_filename:
          type: string
        original_revision_id:
          $ref: '#/components/schemas/Rev'
        original_file_path:
          $ref: '#/components/schemas/Path'
        server_modified:
          $ref: '#/components/schemas/DropboxTimestamp'
        author_member_id:
          $ref: '#/components/schemas/TeamMemberId'
        author_member_status:
          $ref: '#/components/schemas/TeamMemberStatus'
        author_email:
          $ref: '#/components/schemas/EmailAddress'
        file_type:
          type: string
        size:
          type: integer
          format: int64
        content_hash:
          $ref: '#/components/schemas/Sha256HexHash'
      required:
      - new_filename
      - original_revision_id
      - original_file_path
      - server_modified
      - author_member_id
      - author_member_status
      - author_email
      - file_type
      - size
      - content_hash
    LegalHoldsListHeldRevisionResult:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LegalHoldHeldRevisionMetadata'
        cursor:
          $ref: '#/components/schemas/ListHeldRevisionCursor'
        has_more:
          type: boolean
      required:
      - entries
      - has_more
    LegalHoldsListHeldRevisionsContinueArg:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegalHoldId'
        cursor:
          $ref: '#/components/schemas/ListHeldRevisionCursor'
      required:
      - id
    LegalHoldsPolicyUpdateArg:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegalHoldId'
        name:
          $ref: '#/components/schemas/LegalHoldPolicyName'
        description:
          $ref: '#/components/schemas/LegalHoldPolicyDescription'
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberId'
          nullable: true
      required:
      - id
    LegalHoldsPolicyReleaseArg:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/LegalHoldId'
      required:
      - id
    LegalHoldStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - active
          - released
          - activating
          - updating
          - exporting
          - releasing
      required:
      - .tag
    LegalHoldsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unknown_legal_hold_error
          - insufficient_permissions
      required:
      - .tag
    LegalHoldsPolicyCreateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - start_date_is_later_than_end_date
          - empty_members_list
          - invalid_members
          - number_of_users_on_hold_is_greater_than_hold_limitation
          - transient_error
          - name_must_be_unique
          - team_exceeded_legal_hold_quota
          - invalid_date
      required:
      - .tag
    LegalHoldsGetPolicyError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - legal_hold_policy_not_found
      required:
      - .tag
    LegalHoldsListPoliciesError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - transient_error
      required:
      - .tag
    LegalHoldsListHeldRevisionsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - transient_error
          - legal_hold_still_empty
          - inactive_legal_hold
      required:
      - .tag
    LegalHoldsListHeldRevisionsContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unknown_legal_hold_error
          - transient_error
          - reset
      required:
      - .tag
    LegalHoldsPolicyUpdateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - transient_error
          - inactive_legal_hold
          - legal_hold_performing_another_operation
          - invalid_members
          - number_of_users_on_hold_is_greater_than_hold_limitation
          - empty_members_list
          - name_must_be_unique
          - legal_hold_policy_not_found
      required:
      - .tag
    LegalHoldsPolicyReleaseError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - legal_hold_performing_another_operation
          - legal_hold_already_releasing
          - legal_hold_policy_not_found
      required:
      - .tag
    LegalHoldsGetPolicyResult:
      allOf:
      - $ref: '#/components/schemas/LegalHoldPolicy'
    LegalHoldId:
      type: string
    ListHeldRevisionCursor:
      type: string
      minLength: 1
    LegalHoldsPolicyUpdateResult:
      allOf:
      - $ref: '#/components/schemas/LegalHoldPolicy'
    LegalHoldsPolicyCreateResult:
      allOf:
      - $ref: '#/components/schemas/LegalHoldPolicy'
    LegalHoldPolicyName:
      type: string
      maxLength: 140
    LegalHoldPolicyDescription:
      type: string
      maxLength: 501
    GroupSummary:
      type: object
      properties:
        group_name:
          type: string
        group_id:
          $ref: '#/components/schemas/GroupId'
        group_external_id:
          $ref: '#/components/schemas/GroupExternalId'
        member_count:
          type: integer
          format: int64
          nullable: true
        group_management_type:
          $ref: '#/components/schemas/GroupManagementType'
      required:
      - group_name
      - group_id
      - group_management_type
      description: Information about a group.
    TimeRange:
      type: object
      properties:
        start_time:
          $ref: '#/components/schemas/DropboxTimestamp'
        end_time:
          $ref: '#/components/schemas/DropboxTimestamp'
      description: Time range.
    GroupManagementType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_managed
          - company_managed
          - system_managed
      required:
      - .tag
      description: The group type determines how a group is managed.
    GroupType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team
          - user_managed
      required:
      - .tag
      description: The group type determines how a group is created and managed.
    MemberSpaceLimitType:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - off
          - alert_only
          - stop_sync
      required:
      - .tag
      description: The type of the space limit imposed on a team member.
    ResellerId:
      type: string
    MemberExternalId:
      type: string
      maxLength: 64
    GroupId:
      type: string
    TeamId:
      type: string
    GroupExternalId:
      type: string
    TeamMemberId:
      type: string
    FolderPolicy:
      type: object
      properties:
        member_policy:
          $ref: '#/components/schemas/MemberPolicy'
        resolved_member_policy:
          $ref: '#/components/schemas/MemberPolicy'
        acl_update_policy:
          $ref: '#/components/schemas/AclUpdatePolicy'
        shared_link_policy:
          $ref: '#/components/schemas/SharedLinkPolicy'
        viewer_info_policy:
          $ref: '#/components/schemas/ViewerInfoPolicy'
      required:
      - acl_update_policy
      - shared_link_policy
      description: |-
        A set of policies governing membership and privileges for a shared
            folder.
    FolderPermission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/FolderAction'
        allow:
          type: boolean
        reason:
          $ref: '#/components/schemas/PermissionDeniedReason'
      required:
      - action
      - allow
      description: Whether the user is allowed to take the action on the shared folder.
    MemberPermission:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/MemberAction'
        allow:
          type: boolean
        reason:
          $ref: '#/components/schemas/PermissionDeniedReason'
      required:
      - action
      - allow
      description: Whether the user is allowed to take the action on the associated member.
    InsufficientPlan:
      type: object
      properties:
        message:
          type: string
        upsell_url:
          type: string
          nullable: true
      required:
      - message
    MembershipInfo:
      type: object
      properties:
        access_type:
          $ref: '#/components/schemas/AccessLevel'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermission'
          nullable: true
        initials:
          type: string
          nullable: true
        is_inherited:
          type: boolean
      required:
      - access_type
      - is_inherited
      description: The information about a member of the shared content.
    UserInfo:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        email:
          type: string
        display_name:
          type: string
        same_team:
          type: boolean
        team_member_id:
          type: string
          nullable: true
      required:
      - account_id
      - email
      - display_name
      - same_team
      description: |-
        Basic information about a user. Use :route:`users.get_account` and
            :route:`users.get_account_batch` to obtain more detailed information.
    UserMembershipInfo:
      allOf:
      - $ref: '#/components/schemas/MembershipInfo'
      - type: object
        properties:
          user:
            $ref: '#/components/schemas/UserInfo'
        required:
        - user
        description: The information about a user member of the shared content.
      description: The information about a user member of the shared content.
    InviteeMembershipInfo:
      allOf:
      - $ref: '#/components/schemas/MembershipInfo'
      - type: object
        properties:
          invitee:
            $ref: '#/components/schemas/InviteeInfo'
          user:
            $ref: '#/components/schemas/UserInfo'
        required:
        - invitee
        description: Information about an invited member of a shared content.
      description: Information about an invited member of a shared content.
    GroupInfo:
      allOf:
      - $ref: '#/components/schemas/GroupSummary'
      - type: object
        properties:
          group_type:
            $ref: '#/components/schemas/GroupType'
          is_member:
            type: boolean
          is_owner:
            type: boolean
          same_team:
            type: boolean
        required:
        - group_type
        - is_member
        - is_owner
        - same_team
        description: |-
          The information about a group. Groups is a way to manage a list of users
               who need same access permission to the shared folder.
      description: |-
        The information about a group. Groups is a way to manage a list of users
             who need same access permission to the shared folder.
    GroupMembershipInfo:
      allOf:
      - $ref: '#/components/schemas/MembershipInfo'
      - type: object
        properties:
          group:
            $ref: '#/components/schemas/GroupInfo'
        required:
        - group
        description: The information about a group member of the shared content.
      description: The information about a group member of the shared content.
    SharedFolderMetadataBase:
      type: object
      properties:
        access_type:
          $ref: '#/components/schemas/AccessLevel'
        is_inside_team_folder:
          type: boolean
        is_team_folder:
          type: boolean
        owner_display_names:
          type: array
          items:
            type: string
          nullable: true
        owner_team:
          $ref: '#/components/schemas/Team'
        parent_shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        path_display:
          type: string
          nullable: true
        path_lower:
          type: string
          nullable: true
        parent_folder_name:
          type: string
          nullable: true
      required:
      - access_type
      - is_inside_team_folder
      - is_team_folder
      description: Properties of the shared folder.
    SharedFolderMetadata:
      allOf:
      - $ref: '#/components/schemas/SharedFolderMetadataBase'
      - type: object
        properties:
          link_metadata:
            $ref: '#/components/schemas/SharedContentLinkMetadata'
          name:
            type: string
          permissions:
            type: array
            items:
              $ref: '#/components/schemas/FolderPermission'
            nullable: true
          policy:
            $ref: '#/components/schemas/FolderPolicy'
          preview_url:
            type: string
          shared_folder_id:
            $ref: '#/components/schemas/SharedFolderId'
          time_invited:
            $ref: '#/components/schemas/DropboxTimestamp'
          access_inheritance:
            $ref: '#/components/schemas/AccessInheritance'
        required:
        - name
        - policy
        - preview_url
        - shared_folder_id
        - time_invited
        - access_inheritance
        description: The metadata which includes basic information about the shared folder.
      description: The metadata which includes basic information about the shared folder.
    MemberAccessLevelResult:
      type: object
      properties:
        access_level:
          $ref: '#/components/schemas/AccessLevel'
        warning:
          type: string
          nullable: true
        access_details:
          type: array
          items:
            $ref: '#/components/schemas/ParentFolderAccessInfo'
          nullable: true
      description: Contains information about a member's access level to content after an operation.
    ParentFolderAccessInfo:
      type: object
      properties:
        folder_name:
          type: string
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermission'
        path:
          type: string
      required:
      - folder_name
      - shared_folder_id
      - permissions
      - path
      description: Contains information about a parent folder that a member has access to.
    ListFoldersArgs:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FolderAction'
          nullable: true
      required:
      - limit
    ListFoldersResult:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SharedFolderMetadata'
        cursor:
          type: string
          nullable: true
      required:
      - entries
      description: |-
        Result for :route:`list_folders` or :route:`list_mountable_folders`, depending on which
            endpoint was requested.

            Unmounted shared folders can be identified by the absence of
            :field:`SharedFolderMetadata.path_lower`.
    ListFoldersContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    GetMetadataArgs:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FolderAction'
          nullable: true
      required:
      - shared_folder_id
    ListFolderMembersCursorArg:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/MemberAction'
          nullable: true
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - limit
    ListFolderMembersArgs:
      allOf:
      - $ref: '#/components/schemas/ListFolderMembersCursorArg'
      - type: object
        properties:
          shared_folder_id:
            $ref: '#/components/schemas/SharedFolderId'
        required:
        - shared_folder_id
    SharedFolderMembers:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserMembershipInfo'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupMembershipInfo'
        invitees:
          type: array
          items:
            $ref: '#/components/schemas/InviteeMembershipInfo'
        cursor:
          type: string
          nullable: true
      required:
      - users
      - groups
      - invitees
      description: Shared folder user and group membership.
    ListFolderMembersContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
    ShareFolderArgBase:
      type: object
      properties:
        acl_update_policy:
          $ref: '#/components/schemas/AclUpdatePolicy'
        force_async:
          type: boolean
        member_policy:
          $ref: '#/components/schemas/MemberPolicy'
        path:
          $ref: '#/components/schemas/WritePathOrId'
        shared_link_policy:
          $ref: '#/components/schemas/SharedLinkPolicy'
        viewer_info_policy:
          $ref: '#/components/schemas/ViewerInfoPolicy'
        access_inheritance:
          $ref: '#/components/schemas/AccessInheritance'
      required:
      - force_async
      - path
      - access_inheritance
    ShareFolderArg:
      allOf:
      - $ref: '#/components/schemas/ShareFolderArgBase'
      - type: object
        properties:
          actions:
            type: array
            items:
              $ref: '#/components/schemas/FolderAction'
            nullable: true
          link_settings:
            $ref: '#/components/schemas/LinkSettings'
    UnshareFolderArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        leave_a_copy:
          type: boolean
      required:
      - shared_folder_id
      - leave_a_copy
    TransferFolderArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        to_dropbox_id:
          $ref: '#/components/schemas/DropboxId'
      required:
      - shared_folder_id
      - to_dropbox_id
    UpdateFolderPolicyArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        member_policy:
          $ref: '#/components/schemas/MemberPolicy'
        acl_update_policy:
          $ref: '#/components/schemas/AclUpdatePolicy'
        viewer_info_policy:
          $ref: '#/components/schemas/ViewerInfoPolicy'
        shared_link_policy:
          $ref: '#/components/schemas/SharedLinkPolicy'
        link_settings:
          $ref: '#/components/schemas/LinkSettings'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/FolderAction'
          nullable: true
      required:
      - shared_folder_id
      description: If any of the policies are unset, then they retain their current setting.
    AddFolderMemberArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        members:
          type: array
          items:
            $ref: '#/components/schemas/AddMember'
        quiet:
          type: boolean
        custom_message:
          type: string
          minLength: 1
          nullable: true
      required:
      - shared_folder_id
      - members
      - quiet
    RemoveFolderMemberArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        member:
          $ref: '#/components/schemas/MemberSelector'
        leave_a_copy:
          type: boolean
      required:
      - shared_folder_id
      - member
      - leave_a_copy
    UpdateFolderMemberArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        member:
          $ref: '#/components/schemas/MemberSelector'
        access_level:
          $ref: '#/components/schemas/AccessLevel'
      required:
      - shared_folder_id
      - member
      - access_level
    MountFolderArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
      required:
      - shared_folder_id
    InsufficientQuotaAmounts:
      type: object
      properties:
        space_needed:
          type: integer
          format: int64
        space_shortage:
          type: integer
          format: int64
        space_left:
          type: integer
          format: int64
      required:
      - space_needed
      - space_shortage
      - space_left
    UnmountFolderArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
      required:
      - shared_folder_id
    RelinquishFolderMembershipArg:
      type: object
      properties:
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
        leave_a_copy:
          type: boolean
      required:
      - shared_folder_id
      - leave_a_copy
    SetAccessInheritanceArg:
      type: object
      properties:
        access_inheritance:
          $ref: '#/components/schemas/AccessInheritance'
        shared_folder_id:
          $ref: '#/components/schemas/SharedFolderId'
      required:
      - access_inheritance
      - shared_folder_id
    AccessLevel:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - owner
          - editor
          - viewer
          - viewer_no_comment
          - traverse
          - no_access
      required:
      - .tag
      description: Defines the access levels for collaborators.
    FolderAction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - change_options
          - disable_viewer_info
          - edit_contents
          - enable_viewer_info
          - invite_editor
          - invite_viewer
          - invite_viewer_no_comment
          - relinquish_membership
          - unmount
          - unshare
          - leave_a_copy
          - share_link
          - create_link
          - set_access_inheritance
      required:
      - .tag
      description: Actions that may be taken on shared folders.
    MemberPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - team
          - anyone
      required:
      - .tag
      description: |-
        Policy governing who can be a member of a shared folder. Only applicable
            to folders owned by a user on a team.
    MemberAction:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - leave_a_copy
          - make_editor
          - make_owner
          - make_viewer
          - make_viewer_no_comment
          - remove
      required:
      - .tag
      description: Actions that may be taken on members of a shared folder.
    PermissionDeniedReason:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - user_not_same_team_as_owner
          - user_not_allowed_by_owner
          - target_is_indirect_member
          - target_is_owner
          - target_is_self
          - target_not_active
          - folder_is_limited_team_folder
          - owner_not_on_team
          - permission_denied
          - restricted_by_team
          - user_account_type
          - user_not_on_team
          - folder_is_inside_shared_folder
          - restricted_by_parent_folder
          - insufficient_plan
      required:
      - .tag
      description: Possible reasons the user is denied a permission.
      discriminator:
        propertyName: .tag
        mapping:
          insufficient_plan: '#/components/schemas/InsufficientPlan'
    AclUpdatePolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - owner
          - editors
      required:
      - .tag
      description: |-
        Who can change a shared folder's access control list (ACL). In other words, who can add,
            remove, or change the privileges of members.
    SharedLinkPolicy:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - anyone
          - team
          - members
      required:
      - .tag
      description: Who can view shared links in this folder.
    InviteeInfo:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - email
      required:
      - .tag
      description: Information about the recipient of a shared content invitation.
      discriminator:
        propertyName: .tag
        mapping:
          email: '#/components/schemas/EmailAddress'
    AccessInheritance:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - inherit
          - no_inherit
      required:
      - .tag
      description: Information about the inheritance policy of a shared folder.
    SharedFolderAccessError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_id
          - not_a_member
          - invalid_member
          - email_unverified
          - unmounted
      required:
      - .tag
      description: There is an error accessing the shared folder.
    ListFoldersContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
    ListFolderMembersContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - invalid_cursor
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    ShareFolderErrorBase:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - email_unverified
          - bad_path
          - team_policy_disallows_member_policy
          - disallowed_shared_link_policy
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          bad_path: '#/components/schemas/SharePathError'
    ShareFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - no_permission
      required:
      - .tag
    SharePathError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - is_file
          - inside_shared_folder
          - contains_shared_folder
          - contains_app_folder
          - contains_team_folder
          - is_app_folder
          - inside_app_folder
          - is_public_folder
          - inside_public_folder
          - already_shared
          - invalid_path
          - is_osx_package
          - inside_osx_package
          - is_vault
          - is_vault_locked
          - is_family
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          already_shared: '#/components/schemas/SharedFolderMetadata'
    ShareFolderJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/SharedFolderMetadata'
          failed: '#/components/schemas/ShareFolderError'
    ShareFolderLaunch:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/SharedFolderMetadata'
    JobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          failed: '#/components/schemas/JobError'
    SharedFolderMemberError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_dropbox_id
          - not_a_member
          - no_explicit_access
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          no_explicit_access: '#/components/schemas/MemberAccessLevelResult'
    JobError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - unshare_folder_error
          - remove_folder_member_error
          - relinquish_folder_membership_error
      required:
      - .tag
      description: |-
        Error occurred while performing an asynchronous job from :route:`unshare_folder`
            or :route:`remove_folder_member`.
      discriminator:
        propertyName: .tag
        mapping:
          unshare_folder_error: '#/components/schemas/UnshareFolderError'
          remove_folder_member_error: '#/components/schemas/RemoveFolderMemberError'
          relinquish_folder_membership_error: '#/components/schemas/RelinquishFolderMembershipError'
    UnshareFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - team_folder
          - no_permission
          - too_many_files
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    TransferFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - invalid_dropbox_id
          - new_owner_not_a_member
          - new_owner_unmounted
          - new_owner_email_unverified
          - team_folder
          - no_permission
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    UpdateFolderPolicyError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - not_on_team
          - team_policy_disallows_member_policy
          - disallowed_shared_link_policy
          - no_permission
          - team_folder
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    MemberSelector:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - dropbox_id
          - email
      required:
      - .tag
      description: Includes different ways to identify a member of a shared folder.
      discriminator:
        propertyName: .tag
        mapping:
          dropbox_id: '#/components/schemas/DropboxId'
          email: '#/components/schemas/EmailAddress'
    AddFolderMemberError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - email_unverified
          - banned_member
          - bad_member
          - cant_share_outside_team
          - too_many_members
          - too_many_pending_invites
          - rate_limit
          - too_many_invitees
          - insufficient_plan
          - team_folder
          - no_permission
          - invalid_shared_folder
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
          bad_member: '#/components/schemas/AddMemberSelectorError'
          too_many_members: '#/components/schemas/UInt64'
          too_many_pending_invites: '#/components/schemas/UInt64'
    AddMemberSelectorError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - automatic_group
          - invalid_dropbox_id
          - invalid_email
          - unverified_dropbox_id
          - group_deleted
          - group_not_on_team
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          invalid_dropbox_id: '#/components/schemas/DropboxId'
          invalid_email: '#/components/schemas/EmailAddress'
          unverified_dropbox_id: '#/components/schemas/DropboxId'
    RemoveFolderMemberError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - member_error
          - folder_owner
          - group_access
          - team_folder
          - no_permission
          - too_many_files
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
          member_error: '#/components/schemas/SharedFolderMemberError'
    RemoveMemberJobStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - complete
          - failed
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          complete: '#/components/schemas/MemberAccessLevelResult'
          failed: '#/components/schemas/RemoveFolderMemberError'
    UpdateFolderMemberError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - member_error
          - no_explicit_access
          - insufficient_plan
          - no_permission
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
          member_error: '#/components/schemas/SharedFolderMemberError'
          no_explicit_access: '#/components/schemas/AddFolderMemberError'
    MountFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - inside_shared_folder
          - insufficient_quota
          - already_mounted
          - no_permission
          - not_mountable
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
          insufficient_quota: '#/components/schemas/InsufficientQuotaAmounts'
    UnmountFolderError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - no_permission
          - not_unmountable
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    RelinquishFolderMembershipError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - folder_owner
          - mounted
          - group_access
          - team_folder
          - no_permission
          - no_explicit_access
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    SetAccessInheritanceError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - access_error
          - no_permission
      required:
      - .tag
      discriminator:
        propertyName: .tag
        mapping:
          access_error: '#/components/schemas/SharedFolderAccessError'
    DropboxId:
      type: string
      minLength: 1
    UserCustomQuotaArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        quota_gb:
          $ref: '#/components/schemas/UserQuota'
      required:
      - user
      - quota_gb
      description: User and their required custom quota in GB (1 TB = 1024 GB).
    UserCustomQuotaResult:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        quota_gb:
          $ref: '#/components/schemas/UserQuota'
      required:
      - user
      description: |-
        User and their custom quota in GB (1 TB = 1024 GB).
             No quota returns if the user has no custom quota set.
    SetCustomQuotaArg:
      type: object
      properties:
        users_and_quotas:
          type: array
          items:
            $ref: '#/components/schemas/UserCustomQuotaArg'
      required:
      - users_and_quotas
    CustomQuotaUsersArg:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserSelectorArg'
      required:
      - users
    ExcludedUsersUpdateArg:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserSelectorArg'
          nullable: true
      description: |-
        Argument of excluded users update operation.
            Should include a list of users to add/remove (according to endpoint),
            Maximum size of the list is 1000 users.
    ExcludedUsersListArg:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
      required:
      - limit
      description: Excluded users list argument.
    ExcludedUsersListContinueArg:
      type: object
      properties:
        cursor:
          type: string
      required:
      - cursor
      description: Excluded users list continue argument.
    ExcludedUsersListResult:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/MemberProfile'
        cursor:
          type: string
          nullable: true
        has_more:
          type: boolean
      required:
      - users
      - has_more
      description: Excluded users list result.
    ExcludedUsersUpdateResult:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ExcludedUsersUpdateStatus'
      required:
      - status
      description: Excluded users update result.
    CustomQuotaError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - too_many_users
      required:
      - .tag
      description: Error returned when getting member custom quota.
    SetCustomQuotaError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - some_users_are_excluded
      required:
      - .tag
      description: Error returned when setting member custom quota.
    CustomQuotaResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - invalid_user
      required:
      - .tag
      description: User custom quota.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/UserCustomQuotaResult'
          invalid_user: '#/components/schemas/UserSelectorArg'
    RemoveCustomQuotaResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - invalid_user
      required:
      - .tag
      description: User result for setting member custom quota.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/UserSelectorArg'
          invalid_user: '#/components/schemas/UserSelectorArg'
    ExcludedUsersUpdateError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - users_not_in_team
          - too_many_users
      required:
      - .tag
      description: Excluded users update error.
    ExcludedUsersUpdateStatus:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
      required:
      - .tag
      description: Excluded users update operation status.
    ExcludedUsersListError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - list_error
      required:
      - .tag
      description: Excluded users list error.
    ExcludedUsersListContinueError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - invalid_cursor
      required:
      - .tag
      description: Excluded users list continue error.
    UserQuota:
      type: integer
      format: int32
      minimum: 15
    UserSecondaryEmailsArg:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        secondary_emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
      required:
      - user
      - secondary_emails
      description: User and a list of secondary emails.
    UserSecondaryEmailsResult:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        results:
          type: array
          items:
            $ref: '#/components/schemas/AddSecondaryEmailResult'
      required:
      - user
      - results
    AddSecondaryEmailsArg:
      type: object
      properties:
        new_secondary_emails:
          type: array
          items:
            $ref: '#/components/schemas/UserSecondaryEmailsArg'
      required:
      - new_secondary_emails
    AddSecondaryEmailsResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAddResult'
      required:
      - results
    ResendVerificationEmailArg:
      type: object
      properties:
        emails_to_resend:
          type: array
          items:
            $ref: '#/components/schemas/UserSecondaryEmailsArg'
      required:
      - emails_to_resend
    UserResendEmailsResult:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResendSecondaryEmailResult'
      required:
      - user
      - results
    ResendVerificationEmailResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserResendResult'
      required:
      - results
      description: List of users and resend results.
    DeleteSecondaryEmailsArg:
      type: object
      properties:
        emails_to_delete:
          type: array
          items:
            $ref: '#/components/schemas/UserSecondaryEmailsArg'
      required:
      - emails_to_delete
    UserDeleteEmailsResult:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserSelectorArg'
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeleteSecondaryEmailResult'
      required:
      - user
      - results
    DeleteSecondaryEmailsResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserDeleteResult'
      required:
      - results
    AddSecondaryEmailResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - unavailable
          - already_pending
          - already_owned_by_user
          - reached_limit
          - transient_error
          - too_many_updates
          - unknown_error
          - rate_limited
      required:
      - .tag
      description: |-
        Result of trying to add a secondary email to a user.
            'success' is the only value indicating that a secondary email was successfully added to a user.
            The other values explain the type of error that occurred, and include the email for which the error occurred.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/SecondaryEmail'
          unavailable: '#/components/schemas/EmailAddress'
          already_pending: '#/components/schemas/EmailAddress'
          already_owned_by_user: '#/components/schemas/EmailAddress'
          reached_limit: '#/components/schemas/EmailAddress'
          transient_error: '#/components/schemas/EmailAddress'
          too_many_updates: '#/components/schemas/EmailAddress'
          unknown_error: '#/components/schemas/EmailAddress'
          rate_limited: '#/components/schemas/EmailAddress'
    UserAddResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - invalid_user
          - unverified
          - placeholder_user
      required:
      - .tag
      description: |-
        Result of trying to add secondary emails to a user.
            'success' is the only value indicating that a user was successfully retrieved for adding secondary emails.
            The other values explain the type of error that occurred, and include the user for which the error occurred.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/UserSecondaryEmailsResult'
          invalid_user: '#/components/schemas/UserSelectorArg'
          unverified: '#/components/schemas/UserSelectorArg'
          placeholder_user: '#/components/schemas/UserSelectorArg'
    AddSecondaryEmailsError:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - secondary_emails_disabled
          - too_many_emails
      required:
      - .tag
      description: Error returned when adding secondary emails fails.
    ResendSecondaryEmailResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - not_pending
          - rate_limited
      required:
      - .tag
      description: |-
        Result of trying to resend verification email to a secondary email address.
            'success' is the only value indicating that a verification email was successfully sent.
            The other values explain the type of error that occurred, and include the email for which the error occurred.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/EmailAddress'
          not_pending: '#/components/schemas/EmailAddress'
          rate_limited: '#/components/schemas/EmailAddress'
    UserResendResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - invalid_user
      required:
      - .tag
      description: |-
        Result of trying to resend verification emails to a user.
            'success' is the only value indicating that a user was successfully retrieved for sending verification emails.
            The other values explain the type of error that occurred, and include the user for which the error occurred.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/UserResendEmailsResult'
          invalid_user: '#/components/schemas/UserSelectorArg'
    DeleteSecondaryEmailResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - not_found
          - cannot_remove_primary
      required:
      - .tag
      description: |-
        Result of trying to delete a secondary email address.
            'success' is the only value indicating that a secondary email was successfully deleted.
            The other values explain the type of error that occurred, and include the email for which the error occurred.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/EmailAddress'
          not_found: '#/components/schemas/EmailAddress'
          cannot_remove_primary: '#/components/schemas/EmailAddress'
    UserDeleteResult:
      type: object
      properties:
        .tag:
          type: string
          enum:
          - success
          - invalid_user
      required:
      - .tag
      description: |-
        Result of trying to delete a user's secondary emails.
            'success' is the only value indicating that a user was successfully retrieved for deleting secondary emails.
            The other values explain the type of error that occurred, and include the user for which the error occurred.
      discriminator:
        propertyName: .tag
        mapping:
          success: '#/components/schemas/UserDeleteEmailsResult'
          invalid_user: '#/components/schemas/UserSelectorArg'
    EchoArg:
      type: object
      properties:
        query:
          type: string
          maxLength: 500
      required:
      - query
      description: Contains the arguments to be sent to the Dropbox servers.
    EchoResult:
      type: object
      properties:
        result:
          type: string
      required:
      - result
      description: EchoResult contains the result returned from the Dropbox servers.
